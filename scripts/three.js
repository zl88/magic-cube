var THREE={REVISION:"66"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},function(){for(var e=0,t=["ms","moz","webkit","o"],r=0;r<t.length&&!self.requestAnimationFrame;++r)self.requestAnimationFrame=self[t[r]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[r]+"CancelAnimationFrame"]||self[t[r]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(t){var r=Date.now(),i=Math.max(0,16-(r-e)),o=self.setTimeout((function(){t(r+i)}),i);return e=r+i,o}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(e){self.clearTimeout(e)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(e)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(e,t,r){if(0===t)this.r=this.g=this.b=r;else{var i=function(e,t,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e},o=r<=.5?r*(1+t):r+t-r*t,a=2*r-o;this.r=i(a,o,e+1/3),this.g=i(a,o,e),this.b=i(a,o,e-1/3)}return this},setStyle:function(e){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)){var t=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)){t=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}if(/^(\w+)$/i.test(e))return this.setHex(THREE.ColorKeywords[e]),this},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t,r,i=e||{h:0,s:0,l:0},o=this.r,a=this.g,n=this.b,s=Math.max(o,a,n),h=Math.min(o,a,n),l=(h+s)/2;if(h===s)t=0,r=0;else{var c=s-h;switch(r=l<=.5?c/(s+h):c/(2-s-h),s){case o:t=(a-n)/c+(a<n?6:0);break;case a:t=(n-o)/c+2;break;case n:t=(o-a)/c+4}t/=6}return i.h=t,i.s=r,i.l=l,i},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,r){var i=this.getHSL();return i.h+=e,i.s+=t,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){return this.r=e[0],this.g=e[1],this.b=e[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(e){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(e){this._x=e,this._updateEuler()},get y(){return this._y},set y(e){this._y=e,this._updateEuler()},get z(){return this._z},set z(e){this._z=e,this._updateEuler()},get w(){return this._w},set w(e){this._w=e,this._updateEuler()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._w=i,this._updateEuler(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._w=e._w,this._updateEuler(),this},setFromEuler:function(e,t){if(e instanceof THREE.Euler==!1)throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var r=Math.cos(e._x/2),i=Math.cos(e._y/2),o=Math.cos(e._z/2),a=Math.sin(e._x/2),n=Math.sin(e._y/2),s=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=a*i*o+r*n*s,this._y=r*n*o-a*i*s,this._z=r*i*s+a*n*o,this._w=r*i*o-a*n*s):"YXZ"===e.order?(this._x=a*i*o+r*n*s,this._y=r*n*o-a*i*s,this._z=r*i*s-a*n*o,this._w=r*i*o+a*n*s):"ZXY"===e.order?(this._x=a*i*o-r*n*s,this._y=r*n*o+a*i*s,this._z=r*i*s+a*n*o,this._w=r*i*o-a*n*s):"ZYX"===e.order?(this._x=a*i*o-r*n*s,this._y=r*n*o+a*i*s,this._z=r*i*s-a*n*o,this._w=r*i*o+a*n*s):"YZX"===e.order?(this._x=a*i*o+r*n*s,this._y=r*n*o+a*i*s,this._z=r*i*s-a*n*o,this._w=r*i*o-a*n*s):"XZY"===e.order&&(this._x=a*i*o-r*n*s,this._y=r*n*o-a*i*s,this._z=r*i*s+a*n*o,this._w=r*i*o+a*n*s),!1!==t&&this._updateEuler(),this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(r),this._updateEuler(),this},setFromRotationMatrix:function(e){var t,r=e.elements,i=r[0],o=r[4],a=r[8],n=r[1],s=r[5],h=r[9],l=r[2],c=r[6],u=r[10],f=i+s+u;return f>0?(t=.5/Math.sqrt(f+1),this._w=.25/t,this._x=(c-h)*t,this._y=(a-l)*t,this._z=(n-o)*t):i>s&&i>u?(t=2*Math.sqrt(1+i-s-u),this._w=(c-h)/t,this._x=.25*t,this._y=(o+n)/t,this._z=(a+l)/t):s>u?(t=2*Math.sqrt(1+s-i-u),this._w=(a-l)/t,this._x=(o+n)/t,this._y=.25*t,this._z=(h+c)/t):(t=2*Math.sqrt(1+u-i-s),this._w=(n-o)/t,this._x=(a+l)/t,this._y=(h+c)/t,this._z=.25*t),this._updateEuler(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._updateEuler(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var r=e._x,i=e._y,o=e._z,a=e._w,n=t._x,s=t._y,h=t._z,l=t._w;return this._x=r*l+a*n+i*h-o*s,this._y=i*l+a*s+o*n-r*h,this._z=o*l+a*h+r*s-i*n,this._w=a*l-r*n-i*s-o*h,this._updateEuler(),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var r=this._x,i=this._y,o=this._z,a=this._w,n=a*e._w+r*e._x+i*e._y+o*e._z;if(n<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,n=-n):this.copy(e),n>=1)return this._w=a,this._x=r,this._y=i,this._z=o,this;var s=Math.acos(n),h=Math.sqrt(1-n*n);if(Math.abs(h)<.001)return this._w=.5*(a+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(o+this._z),this;var l=Math.sin((1-t)*s)/h,c=Math.sin(t*s)/h;return this._w=a*l+this._w*c,this._x=r*l+this._x*c,this._y=i*l+this._y*c,this._z=o*l+this._z*c,this._updateEuler(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],this._w=e[3],this._updateEuler(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(e,t,r,i){return r.copy(e).slerp(t,i)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t}else this.x=0,this.y=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector2,t=new THREE.Vector2),e.set(r,r),t.set(i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){return this.x=e[0],this.y=e[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(t){return t instanceof THREE.Euler==!1&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e;return function(t,r){return void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,r)),this}}(),applyMatrix3:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements;return this.x=o[0]*t+o[3]*r+o[6]*i,this.y=o[1]*t+o[4]*r+o[7]*i,this.z=o[2]*t+o[5]*r+o[8]*i,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*i+o[12],this.y=o[1]*t+o[5]*r+o[9]*i+o[13],this.z=o[2]*t+o[6]*r+o[10]*i+o[14],this},applyProjection:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements,a=1/(o[3]*t+o[7]*r+o[11]*i+o[15]);return this.x=(o[0]*t+o[4]*r+o[8]*i+o[12])*a,this.y=(o[1]*t+o[5]*r+o[9]*i+o[13])*a,this.z=(o[2]*t+o[6]*r+o[10]*i+o[14])*a,this},applyQuaternion:function(e){var t=this.x,r=this.y,i=this.z,o=e.x,a=e.y,n=e.z,s=e.w,h=s*t+a*i-n*r,l=s*r+n*t-o*i,c=s*i+o*r-a*t,u=-o*t-a*r-n*i;return this.x=h*s+u*-o+l*-n-c*-a,this.y=l*s+u*-a+c*-o-h*-n,this.z=c*s+u*-n+h*-a-l*-o,this},transformDirection:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*i,this.y=o[1]*t+o[5]*r+o[9]*i,this.z=o[2]*t+o[6]*r+o[10]*i,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector3,t=new THREE.Vector3),e.set(r,r,r),t.set(i,i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var r=this.x,i=this.y,o=this.z;return this.x=i*e.z-o*e.y,this.y=o*e.x-r*e.z,this.z=r*e.y-i*e.x,this},crossVectors:function(e,t){var r=e.x,i=e.y,o=e.z,a=t.x,n=t.y,s=t.z;return this.x=i*s-o*n,this.y=o*a-r*s,this.z=r*n-i*a,this},projectOnVector:function(){var e,t;return function(r){return void 0===e&&(e=new THREE.Vector3),e.copy(r).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,i=this.z-e.z;return t*t+r*r+i*i},setEulerFromRotationMatrix:function(e,t){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(e,t){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(e){return console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code."),this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),i=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=r,this.z=i,this},setFromMatrixColumn:function(e,t){var r=4*e,i=t.elements;return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,o=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*i+a[12]*o,this.y=a[1]*t+a[5]*r+a[9]*i+a[13]*o,this.z=a[2]*t+a[6]*r+a[10]*i+a[14]*o,this.w=a[3]*t+a[7]*r+a[11]*i+a[15]*o,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t,this.w*=t}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,i,o,a=.01,n=.1,s=e.elements,h=s[0],l=s[4],c=s[8],u=s[1],f=s[5],p=s[9],E=s[2],d=s[6],m=s[10];if(Math.abs(l-u)<a&&Math.abs(c-E)<a&&Math.abs(p-d)<a){if(Math.abs(l+u)<n&&Math.abs(c+E)<n&&Math.abs(p+d)<n&&Math.abs(h+f+m-3)<n)return this.set(1,0,0,0),this;t=Math.PI;var g=(h+1)/2,v=(f+1)/2,T=(m+1)/2,y=(l+u)/4,R=(c+E)/4,x=(p+d)/4;return g>v&&g>T?g<a?(r=0,i=.707106781,o=.707106781):(i=y/(r=Math.sqrt(g)),o=R/r):v>T?v<a?(r=.707106781,i=0,o=.707106781):(r=y/(i=Math.sqrt(v)),o=x/i):T<a?(r=.707106781,i=.707106781,o=0):(r=R/(o=Math.sqrt(T)),i=x/o),this.set(r,i,o,t),this}var H=Math.sqrt((d-p)*(d-p)+(c-E)*(c-E)+(u-l)*(u-l));return Math.abs(H)<.001&&(H=1),this.x=(d-p)/H,this.y=(c-E)/H,this.z=(u-l)/H,this.w=Math.acos((h+f+m-1)/2),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector4,t=new THREE.Vector4),e.set(r,r,r,r),t.set(i,i,i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this.w=e[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(e){this._x=e,this._updateQuaternion()},get y(){return this._y},set y(e){this._y=e,this._updateQuaternion()},get z(){return this._z},set z(e){this._z=e,this._updateQuaternion()},get order(){return this._order},set order(e){this._order=e,this._updateQuaternion()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._order=i||this._order,this._updateQuaternion(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._updateQuaternion(),this},setFromRotationMatrix:function(e,t){function r(e){return Math.min(Math.max(e,-1),1)}var i=e.elements,o=i[0],a=i[4],n=i[8],s=i[1],h=i[5],l=i[9],c=i[2],u=i[6],f=i[10];return"XYZ"===(t=t||this._order)?(this._y=Math.asin(r(n)),Math.abs(n)<.99999?(this._x=Math.atan2(-l,f),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(l)),Math.abs(l)<.99999?(this._y=Math.atan2(n,f),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,o),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(u)),Math.abs(u)<.99999?(this._y=Math.atan2(-c,f),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(s,o))):"ZYX"===t?(this._y=Math.asin(-r(c)),Math.abs(c)<.99999?(this._x=Math.atan2(u,f),this._z=Math.atan2(s,o)):(this._x=0,this._z=Math.atan2(-a,h))):"YZX"===t?(this._z=Math.asin(r(s)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,o)):(this._x=0,this._y=Math.atan2(n,f))):"XZY"===t?(this._z=Math.asin(-r(a)),Math.abs(a)<.99999?(this._x=Math.atan2(u,h),this._y=Math.atan2(n,o)):(this._x=Math.atan2(-l,f),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+t),this._order=t,this._updateQuaternion(),this},setFromQuaternion:function(e,t,r){function i(e){return Math.min(Math.max(e,-1),1)}var o=e.x*e.x,a=e.y*e.y,n=e.z*e.z,s=e.w*e.w;return"XYZ"===(t=t||this._order)?(this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),s-o-a+n),this._y=Math.asin(i(2*(e.x*e.z+e.y*e.w))),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s+o-a-n)):"YXZ"===t?(this._x=Math.asin(i(2*(e.x*e.w-e.y*e.z))),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s-o-a+n),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s-o+a-n)):"ZXY"===t?(this._x=Math.asin(i(2*(e.x*e.w+e.y*e.z))),this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),s-o-a+n),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s-o+a-n)):"ZYX"===t?(this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),s-o-a+n),this._y=Math.asin(i(2*(e.y*e.w-e.x*e.z))),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s+o-a-n)):"YZX"===t?(this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),s-o+a-n),this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),s+o-a-n),this._z=Math.asin(i(2*(e.x*e.y+e.z*e.w)))):"XZY"===t?(this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),s-o+a-n),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s+o-a-n),this._z=Math.asin(i(2*(e.z*e.w-e.x*e.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+t),this._order=t,!1!==r&&this._updateQuaternion(),this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._updateQuaternion(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i){e.subVectors(r,this.start),t.subVectors(this.end,this.start);var o=t.dot(t),a=t.dot(e)/o;return i&&(a=THREE.Math.clamp(a,0,1)),a}}(),closestPointToPoint:function(e,t,r){var i=this.closestPointToPointParameter(e,t),o=r||new THREE.Vector3;return this.delta(o).multiplyScalar(i).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;r<i;r++)(t=e[r]).x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return(t||new THREE.Vector2).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},addPoint:function(e){e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y),e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z)},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;r<i;r++)this.addPoint(e[r])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var r=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse((function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var i=t.geometry.vertices,o=0,a=i.length;o<a;o++)e.copy(i[o]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)})),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return(t||new THREE.Vector3).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){var r=t||new THREE.Sphere;return r.center=this.center(),r.radius=.5*this.size(e).length(),r}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(e,t,r,i,o,a,n,s,h){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,r||0,i||0,void 0!==o?o:1,a||0,n||0,s||0,void 0!==h?h:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,i,o,a,n,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=r,l[1]=i,l[4]=o,l[7]=a,l[2]=n,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var r=0,i=t.length;r<i;r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyMatrix3(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],i=e[2],o=e[3],a=e[4],n=e[5],s=e[6],h=e[7],l=e[8];return t*a*l-t*n*h-r*o*l+r*n*s+i*o*h-i*a*s},getInverse:function(e,t){var r=e.elements,i=this.elements;i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4];var o=r[0]*i[0]+r[1]*i[3]+r[2]*i[6];if(0===o){var a="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(a);return console.warn(a),this.identity(),this}return this.multiplyScalar(1/o),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix4=function(e,t,r,i,o,a,n,s,h,l,c,u,f,p,E,d){this.elements=new Float32Array(16);var m=this.elements;m[0]=void 0!==e?e:1,m[4]=t||0,m[8]=r||0,m[12]=i||0,m[1]=o||0,m[5]=void 0!==a?a:1,m[9]=n||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=f||0,m[7]=p||0,m[11]=E||0,m[15]=void 0!==d?d:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,o,a,n,s,h,l,c,u,f,p,E,d){var m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=i,m[1]=o,m[5]=a,m[9]=n,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=f,m[7]=p,m[11]=E,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var r=this.elements,i=t.elements,o=1/e.set(i[0],i[1],i[2]).length(),a=1/e.set(i[4],i[5],i[6]).length(),n=1/e.set(i[8],i[9],i[10]).length();return r[0]=i[0]*o,r[1]=i[1]*o,r[2]=i[2]*o,r[4]=i[4]*a,r[5]=i[5]*a,r[6]=i[6]*a,r[8]=i[8]*n,r[9]=i[9]*n,r[10]=i[10]*n,this}}(),makeRotationFromEuler:function(e){e instanceof THREE.Euler==!1&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var t=this.elements,r=e.x,i=e.y,o=e.z,a=Math.cos(r),n=Math.sin(r),s=Math.cos(i),h=Math.sin(i),l=Math.cos(o),c=Math.sin(o);if("XYZ"===e.order){var u=a*l,f=a*c,p=n*l,E=n*c;t[0]=s*l,t[4]=-s*c,t[8]=h,t[1]=f+p*h,t[5]=u-E*h,t[9]=-n*s,t[2]=E-u*h,t[6]=p+f*h,t[10]=a*s}else if("YXZ"===e.order){var d=s*l,m=s*c,g=h*l,v=h*c;t[0]=d+v*n,t[4]=g*n-m,t[8]=a*h,t[1]=a*c,t[5]=a*l,t[9]=-n,t[2]=m*n-g,t[6]=v+d*n,t[10]=a*s}else if("ZXY"===e.order){d=s*l,m=s*c,g=h*l,v=h*c;t[0]=d-v*n,t[4]=-a*c,t[8]=g+m*n,t[1]=m+g*n,t[5]=a*l,t[9]=v-d*n,t[2]=-a*h,t[6]=n,t[10]=a*s}else if("ZYX"===e.order){u=a*l,f=a*c,p=n*l,E=n*c;t[0]=s*l,t[4]=p*h-f,t[8]=u*h+E,t[1]=s*c,t[5]=E*h+u,t[9]=f*h-p,t[2]=-h,t[6]=n*s,t[10]=a*s}else if("YZX"===e.order){var T=a*s,y=a*h,R=n*s,x=n*h;t[0]=s*l,t[4]=x-T*c,t[8]=R*c+y,t[1]=c,t[5]=a*l,t[9]=-n*l,t[2]=-h*l,t[6]=y*c+R,t[10]=T-x*c}else if("XZY"===e.order){T=a*s,y=a*h,R=n*s,x=n*h;t[0]=s*l,t[4]=-c,t[8]=h*l,t[1]=T*c+x,t[5]=a*l,t[9]=y*c-R,t[2]=R*c-y,t[6]=n*l,t[10]=x*c+T}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z,a=e.w,n=r+r,s=i+i,h=o+o,l=r*n,c=r*s,u=r*h,f=i*s,p=i*h,E=o*h,d=a*n,m=a*s,g=a*h;return t[0]=1-(f+E),t[4]=c-g,t[8]=u+m,t[1]=c+g,t[5]=1-(l+E),t[9]=p-d,t[2]=u-m,t[6]=p+d,t[10]=1-(l+f),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,o,a){var n=this.elements;return r.subVectors(i,o).normalize(),0===r.length()&&(r.z=1),e.crossVectors(a,r).normalize(),0===e.length()&&(r.x+=1e-4,e.crossVectors(a,r).normalize()),t.crossVectors(r,e),n[0]=e.x,n[4]=t.x,n[8]=r.x,n[1]=e.y,n[5]=t.y,n[9]=r.y,n[2]=e.z,n[6]=t.z,n[10]=r.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,o=this.elements,a=r[0],n=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],f=r[13],p=r[2],E=r[6],d=r[10],m=r[14],g=r[3],v=r[7],T=r[11],y=r[15],R=i[0],x=i[4],H=i[8],_=i[12],w=i[1],b=i[5],M=i[9],S=i[13],A=i[2],C=i[6],L=i[10],P=i[14],D=i[3],F=i[7],U=i[11],V=i[15];return o[0]=a*R+n*w+s*A+h*D,o[4]=a*x+n*b+s*C+h*F,o[8]=a*H+n*M+s*L+h*U,o[12]=a*_+n*S+s*P+h*V,o[1]=l*R+c*w+u*A+f*D,o[5]=l*x+c*b+u*C+f*F,o[9]=l*H+c*M+u*L+f*U,o[13]=l*_+c*S+u*P+f*V,o[2]=p*R+E*w+d*A+m*D,o[6]=p*x+E*b+d*C+m*F,o[10]=p*H+E*M+d*L+m*U,o[14]=p*_+E*S+d*P+m*V,o[3]=g*R+v*w+T*A+y*D,o[7]=g*x+v*b+T*C+y*F,o[11]=g*H+v*M+T*L+y*U,o[15]=g*_+v*S+T*P+y*V,this},multiplyToArray:function(e,t,r){var i=this.elements;return this.multiplyMatrices(e,t),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var r=0,i=t.length;r<i;r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyProjection(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],r=e[4],i=e[8],o=e[12],a=e[1],n=e[5],s=e[9],h=e[13],l=e[2],c=e[6],u=e[10],f=e[14];return e[3]*(+o*s*c-i*h*c-o*n*u+r*h*u+i*n*f-r*s*f)+e[7]*(+t*s*f-t*h*u+o*a*u-i*a*f+i*h*l-o*s*l)+e[11]*(+t*h*c-t*n*f-o*a*c+r*a*f+o*n*l-r*h*l)+e[15]*(-i*n*l-t*s*c+t*n*u+i*a*c-r*a*u+r*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var r=this.elements,i=e.elements,o=i[0],a=i[4],n=i[8],s=i[12],h=i[1],l=i[5],c=i[9],u=i[13],f=i[2],p=i[6],E=i[10],d=i[14],m=i[3],g=i[7],v=i[11],T=i[15];r[0]=c*d*g-u*E*g+u*p*v-l*d*v-c*p*T+l*E*T,r[4]=s*E*g-n*d*g-s*p*v+a*d*v+n*p*T-a*E*T,r[8]=n*u*g-s*c*g+s*l*v-a*u*v-n*l*T+a*c*T,r[12]=s*c*p-n*u*p-s*l*E+a*u*E+n*l*d-a*c*d,r[1]=u*E*m-c*d*m-u*f*v+h*d*v+c*f*T-h*E*T,r[5]=n*d*m-s*E*m+s*f*v-o*d*v-n*f*T+o*E*T,r[9]=s*c*m-n*u*m-s*h*v+o*u*v+n*h*T-o*c*T,r[13]=n*u*f-s*c*f+s*h*E-o*u*E-n*h*d+o*c*d,r[2]=l*d*m-u*p*m+u*f*g-h*d*g-l*f*T+h*p*T,r[6]=s*p*m-a*d*m-s*f*g+o*d*g+a*f*T-o*p*T,r[10]=a*u*m-s*l*m+s*h*g-o*u*g-a*h*T+o*l*T,r[14]=s*l*f-a*u*f-s*h*p+o*u*p+a*h*d-o*l*d,r[3]=c*p*m-l*E*m-c*f*g+h*E*g+l*f*v-h*p*v,r[7]=a*E*m-n*p*m+n*f*g-o*E*g-a*f*v+o*p*v,r[11]=n*l*m-a*c*m-n*h*g+o*c*g+a*h*v-o*l*v,r[15]=a*c*f-n*l*f+n*h*p-o*c*p-a*h*E+o*l*E;var y=o*r[0]+h*r[4]+f*r[8]+m*r[12];if(0==y){var R="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(R);return console.warn(R),this.identity(),this}return this.multiplyScalar(1/y),this},translate:function(e){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(e){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(e){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(e){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(e,t){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z;return t[0]*=r,t[4]*=i,t[8]*=o,t[1]*=r,t[5]*=i,t[9]*=o,t[2]*=r,t[6]*=i,t[10]*=o,t[3]*=r,t[7]*=i,t[11]*=o,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(r,i)))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),o=1-r,a=e.x,n=e.y,s=e.z,h=o*a,l=o*n;return this.set(h*a+r,h*n-i*s,h*s+i*n,0,h*n+i*s,l*n+r,l*s-i*a,0,h*s-i*n,l*s+i*a,o*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(r,i,o){var a=this.elements,n=e.set(a[0],a[1],a[2]).length(),s=e.set(a[4],a[5],a[6]).length(),h=e.set(a[8],a[9],a[10]).length();this.determinant()<0&&(n=-n),r.x=a[12],r.y=a[13],r.z=a[14],t.elements.set(this.elements);var l=1/n,c=1/s,u=1/h;return t.elements[0]*=l,t.elements[1]*=l,t.elements[2]*=l,t.elements[4]*=c,t.elements[5]*=c,t.elements[6]*=c,t.elements[8]*=u,t.elements[9]*=u,t.elements[10]*=u,i.setFromRotationMatrix(t),o.x=n,o.y=s,o.z=h,this}}(),makeFrustum:function(e,t,r,i,o,a){var n=this.elements,s=2*o/(t-e),h=2*o/(i-r),l=(t+e)/(t-e),c=(i+r)/(i-r),u=-(a+o)/(a-o),f=-2*a*o/(a-o);return n[0]=s,n[4]=0,n[8]=l,n[12]=0,n[1]=0,n[5]=h,n[9]=c,n[13]=0,n[2]=0,n[6]=0,n[10]=u,n[14]=f,n[3]=0,n[7]=0,n[11]=-1,n[15]=0,this},makePerspective:function(e,t,r,i){var o=r*Math.tan(THREE.Math.degToRad(.5*e)),a=-o,n=a*t,s=o*t;return this.makeFrustum(n,s,a,o,r,i)},makeOrthographic:function(e,t,r,i,o,a){var n=this.elements,s=t-e,h=r-i,l=a-o,c=(t+e)/s,u=(r+i)/h,f=(a+o)/l;return n[0]=2/s,n[4]=0,n[8]=0,n[12]=-c,n[1]=0,n[5]=2/h,n[9]=0,n[13]=-u,n[2]=0,n[6]=0,n[10]=-2/l,n[14]=-f,n[3]=0,n[7]=0,n[11]=0,n[15]=1,this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var i=r.dot(this.direction);return i<0?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return r<0?this.origin.distanceTo(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceTo(t))}}(),distanceSqToSegment:function(e,t,r,i){var o,a,n,s,h=e.clone().add(t).multiplyScalar(.5),l=t.clone().sub(e).normalize(),c=.5*e.distanceTo(t),u=this.origin.clone().sub(h),f=-this.direction.dot(l),p=u.dot(this.direction),E=-u.dot(l),d=u.lengthSq(),m=Math.abs(1-f*f);if(m>=0)if(a=f*p-E,s=c*m,(o=f*E-p)>=0)if(a>=-s)if(a<=s){var g=1/m;n=(o*=g)*(o+f*(a*=g)+2*p)+a*(f*o+a+2*E)+d}else a=c,n=-(o=Math.max(0,-(f*a+p)))*o+a*(a+2*E)+d;else a=-c,n=-(o=Math.max(0,-(f*a+p)))*o+a*(a+2*E)+d;else a<=-s?n=-(o=Math.max(0,-(-f*c+p)))*o+(a=o>0?-c:Math.min(Math.max(-c,-E),c))*(a+2*E)+d:a<=s?(o=0,n=(a=Math.min(Math.max(-c,-E),c))*(a+2*E)+d):n=-(o=Math.max(0,-(f*c+p)))*o+(a=o>0?c:Math.min(Math.max(-c,-E),c))*(a+2*E)+d;else a=f>0?-c:c,n=-(o=Math.max(0,-(f*a+p)))*o+a*(a+2*E)+d;return r&&r.copy(this.direction.clone().multiplyScalar(o).add(this.origin)),i&&i.copy(l.clone().multiplyScalar(a).add(h)),n},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var r,i,o,a,n,s,h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return h>=0?(r=(e.min.x-u.x)*h,i=(e.max.x-u.x)*h):(r=(e.max.x-u.x)*h,i=(e.min.x-u.x)*h),l>=0?(o=(e.min.y-u.y)*l,a=(e.max.y-u.y)*l):(o=(e.max.y-u.y)*l,a=(e.min.y-u.y)*l),r>a||o>i?null:((o>r||r!=r)&&(r=o),(a<i||i!=i)&&(i=a),c>=0?(n=(e.min.z-u.z)*c,s=(e.max.z-u.z)*c):(n=(e.max.z-u.z)*c,s=(e.min.z-u.z)*c),r>s||n>i?null:((n>r||r!=r)&&(r=n),(s<i||i!=i)&&(i=s),i<0?null:this.at(r>=0?r:i,t)))},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;return function(o,a,n,s,h){t.subVectors(a,o),r.subVectors(n,o),i.crossVectors(t,r);var l,c=this.direction.dot(i);if(c>0){if(s)return null;l=1}else{if(!(c<0))return null;l=-1,c=-c}e.subVectors(this.origin,o);var u=l*this.direction.dot(r.crossVectors(e,r));if(u<0)return null;var f=l*this.direction.dot(t.cross(e));if(f<0)return null;if(u+f>c)return null;var p=-l*e.dot(i);return p<0?null:this.at(p/c,h)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,r){var i=this.center;void 0!==r?i.copy(r):e.setFromPoints(t).center(i);for(var o=0,a=0,n=t.length;a<n;a++)o=Math.max(o,i.distanceToSquared(t[a]));return this.radius=Math.sqrt(o),this}}(),copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),i=t||new THREE.Vector3;return i.copy(e),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(e){var t=e||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,r,i,o,a){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==o?o:new THREE.Plane,void 0!==a?a:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,r,i,o,a){var n=this.planes;return n[0].copy(e),n[1].copy(t),n[2].copy(r),n[3].copy(i),n[4].copy(o),n[5].copy(a),this},copy:function(e){for(var t=this.planes,r=0;r<6;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements,i=r[0],o=r[1],a=r[2],n=r[3],s=r[4],h=r[5],l=r[6],c=r[7],u=r[8],f=r[9],p=r[10],E=r[11],d=r[12],m=r[13],g=r[14],v=r[15];return t[0].setComponents(n-i,c-s,E-u,v-d).normalize(),t[1].setComponents(n+i,c+s,E+u,v+d).normalize(),t[2].setComponents(n+o,c+h,E+f,v+m).normalize(),t[3].setComponents(n-o,c-h,E-f,v-m).normalize(),t[4].setComponents(n-a,c-l,E-p,v-g).normalize(),t[5].setComponents(n+a,c+l,E+p,v+g).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var r=t.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),e.copy(r.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,r=e.center,i=-e.radius,o=0;o<6;o++){if(t[o].distanceToPoint(r)<i)return!1}return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){for(var i=this.planes,o=0;o<6;o++){var a=i[o];e.x=a.normal.x>0?r.min.x:r.max.x,t.x=a.normal.x>0?r.max.x:r.min.x,e.y=a.normal.y>0?r.min.y:r.max.y,t.y=a.normal.y>0?r.max.y:r.min.y,e.z=a.normal.z>0?r.min.z:r.max.z,t.z=a.normal.z>0?r.max.z:r.min.z;var n=a.distanceToPoint(e),s=a.distanceToPoint(t);if(n<0&&s<0)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;r<6;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,o){var a=e.subVectors(o,i).cross(t.subVectors(r,i)).normalize();return this.setFromNormalAndCoplanarPoint(a,r),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,r){var i=r||new THREE.Vector3,o=t.delta(e),a=this.normal.dot(o);if(0==a)return 0==this.distanceToPoint(t.start)?i.copy(t.start):void 0;var n=-(t.start.dot(this.normal)+this.constant)/a;return n<0||n>1?void 0:i.copy(o).multiplyScalar(n).add(t.start)}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Matrix3;return function(i,o){var a=o||r.getNormalMatrix(i),n=e.copy(this.normal).applyMatrix3(a),s=this.coplanarPoint(t);return s.applyMatrix4(i),this.setFromNormalAndCoplanarPoint(n,s),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={PI2:2*Math.PI,generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=new Array(36),i=0;return function(){for(var o=0;o<36;o++)8==o||13==o||18==o||23==o?r[o]="-":14==o?r[o]="4":(i<=2&&(i=33554432+16777216*Math.random()|0),e=15&i,i>>=4,r[o]=t[19==o?3&e|8:e]);return r.join("")}}(),clamp:function(e,t,r){return e<t?t:e>r?r:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,r,i,o){return i+(e-t)*(o-i)/(r-t)},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*(3-2*e)},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return e<0?-1:e>0?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e}},THREE.Spline=function(e){this.points=e;var t,r,i,o,a,n,s,h,l,c=[],u={x:0,y:0,z:0};function f(e,t,r,i,o,a,n){var s=.5*(r-e),h=.5*(i-t);return(2*(t-r)+s+h)*n+(-3*(t-r)-2*s-h)*a+s*o+t}this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return t=(this.points.length-1)*e,r=Math.floor(t),i=t-r,c[0]=0===r?r:r-1,c[1]=r,c[2]=r>this.points.length-2?this.points.length-1:r+1,c[3]=r>this.points.length-3?this.points.length-1:r+2,n=this.points[c[0]],s=this.points[c[1]],h=this.points[c[2]],l=this.points[c[3]],a=i*(o=i*i),u.x=f(n.x,s.x,h.x,l.x,i,o,a),u.y=f(n.y,s.y,h.y,l.y,i,o,a),u.z=f(n.z,s.z,h.z,l.z,i,o,a),u},this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;e<r;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i},this.getLength=function(e){var t,r,i,o,a=0,n=0,s=0,h=new THREE.Vector3,l=new THREE.Vector3,c=[],u=0;for(c[0]=0,e||(e=100),i=this.points.length*e,h.copy(this.points[0]),t=1;t<i;t++)r=t/i,o=this.getPoint(r),l.copy(o),u+=l.distanceTo(h),h.copy(o),a=(this.points.length-1)*r,(n=Math.floor(a))!=s&&(c[n]=u,s=n);return c[c.length]=u,{chunks:c,total:u}},this.reparametrizeByArcLength=function(e){var t,r,i,o,a,n,s,h,l=[],c=new THREE.Vector3,u=this.getLength();for(l.push(c.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(n=u.chunks[t]-u.chunks[t-1],s=Math.ceil(e*n/u.total),o=(t-1)/(this.points.length-1),a=t/(this.points.length-1),r=1;r<s-1;r++)i=o+r*(1/s)*(a-o),h=this.getPoint(i),l.push(c.copy(h).clone());l.push(c.copy(this.points[t]).clone())}this.points=l}},THREE.Triangle=function(e,t,r){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,r,i,o){var a=o||new THREE.Vector3;a.subVectors(i,r),e.subVectors(t,r),a.cross(e);var n=a.lengthSq();return n>0?a.multiplyScalar(1/Math.sqrt(n)):a.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,o,a,n,s){e.subVectors(n,o),t.subVectors(a,o),r.subVectors(i,o);var h=e.dot(e),l=e.dot(t),c=e.dot(r),u=t.dot(t),f=t.dot(r),p=h*u-l*l,E=s||new THREE.Vector3;if(0==p)return E.set(-2,-1,-1);var d=1/p,m=(u*c-l*f)*d,g=(h*f-l*c)*d;return E.set(1-m-g,g,m)}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,r,i,o){var a=THREE.Triangle.barycoordFromPoint(t,r,i,o,e);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners[e];if(void 0!==r){var i=r.indexOf(t);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(){var e=[];return function(t){if(void 0!==this._listeners){var r=this._listeners[t.type];if(void 0!==r){t.target=this;for(var i=r.length,o=0;o<i;o++)e[o]=r[o];for(o=0;o<i;o++)e[o].call(this,t)}}}}()},function(e){e.Raycaster=function(t,r,i,o){this.ray=new e.Ray(t,r),this.near=i||0,this.far=o||1/0};var t=new e.Sphere,r=new e.Ray,i=(new e.Plane,new e.Vector3,new e.Vector3),o=new e.Matrix4,a=function(e,t){return e.distance-t.distance},n=new e.Vector3,s=new e.Vector3,h=new e.Vector3,l=function(a,c,u){if(a instanceof e.Sprite){if(i.setFromMatrixPosition(a.matrixWorld),(f=c.ray.distanceToPoint(i))>a.scale.x)return u;u.push({distance:f,point:a.position,face:null,object:a})}else if(a instanceof e.LOD){i.setFromMatrixPosition(a.matrixWorld);var f=c.ray.origin.distanceTo(i);l(a.getObjectForDistance(f),c,u)}else if(a instanceof e.Mesh){if(null===(k=a.geometry).boundingSphere&&k.computeBoundingSphere(),t.copy(k.boundingSphere),t.applyMatrix4(a.matrixWorld),!1===c.ray.isIntersectionSphere(t))return u;if(o.getInverse(a.matrixWorld),r.copy(c.ray).applyMatrix4(o),null!==k.boundingBox&&!1===r.isIntersectionBox(k.boundingBox))return u;if(k instanceof e.BufferGeometry){if(void 0===(F=a.material))return u;var p=k.attributes,E=c.precision;if(void 0!==p.index)for(var d=k.offsets,m=p.index.array,g=p.position.array,v=0,T=d.length;v<T;++v)for(var y=d[v].start,R=d[v].count,x=d[v].index,H=y,_=y+R;H<_;H+=3){if(b=x+m[H],M=x+m[H+1],S=x+m[H+2],n.set(g[3*b],g[3*b+1],g[3*b+2]),s.set(g[3*M],g[3*M+1],g[3*M+2]),h.set(g[3*S],g[3*S+1],g[3*S+2]),F.side===e.BackSide)var w=r.intersectTriangle(h,s,n,!0);else w=r.intersectTriangle(n,s,h,F.side!==e.DoubleSide);if(null!==w)w.applyMatrix4(a.matrixWorld),(f=c.ray.origin.distanceTo(w))<E||f<c.near||f>c.far||u.push({distance:f,point:w,indices:[b,M,S],face:null,faceIndex:null,object:a})}else for(d=k.offsets,g=p.position.array,H=0,_=p.position.array.length;H<_;H+=3){if(b=H,M=H+1,S=H+2,n.set(g[3*b],g[3*b+1],g[3*b+2]),s.set(g[3*M],g[3*M+1],g[3*M+2]),h.set(g[3*S],g[3*S+1],g[3*S+2]),F.side===e.BackSide)w=r.intersectTriangle(h,s,n,!0);else w=r.intersectTriangle(n,s,h,F.side!==e.DoubleSide);if(null!==w)w.applyMatrix4(a.matrixWorld),(f=c.ray.origin.distanceTo(w))<E||f<c.near||f>c.far||u.push({distance:f,point:w,indices:[b,M,S],face:null,faceIndex:null,object:a})}}else if(k instanceof e.Geometry)for(var b,M,S,A=a.material instanceof e.MeshFaceMaterial,C=!0===A?a.material.materials:null,L=(E=c.precision,k.vertices),P=0,D=k.faces.length;P<D;P++){var F,U=k.faces[P];if(void 0!==(F=!0===A?C[U.materialIndex]:a.material)){if(b=L[U.a],M=L[U.b],S=L[U.c],!0===F.morphTargets){var V=k.morphTargets,z=a.morphTargetInfluences;n.set(0,0,0),s.set(0,0,0),h.set(0,0,0);for(var B=0,N=V.length;B<N;B++){var O=z[B];if(0!==O){var I=V[B].vertices;n.x+=(I[U.a].x-b.x)*O,n.y+=(I[U.a].y-b.y)*O,n.z+=(I[U.a].z-b.z)*O,s.x+=(I[U.b].x-M.x)*O,s.y+=(I[U.b].y-M.y)*O,s.z+=(I[U.b].z-M.z)*O,h.x+=(I[U.c].x-S.x)*O,h.y+=(I[U.c].y-S.y)*O,h.z+=(I[U.c].z-S.z)*O}}n.add(b),s.add(M),h.add(S),b=n,M=s,S=h}if(F.side===e.BackSide)w=r.intersectTriangle(S,M,b,!0);else w=r.intersectTriangle(b,M,S,F.side!==e.DoubleSide);if(null!==w)w.applyMatrix4(a.matrixWorld),(f=c.ray.origin.distanceTo(w))<E||f<c.near||f>c.far||u.push({distance:f,point:w,face:U,faceIndex:P,object:a})}}}else if(a instanceof e.Line){var k,G=(E=c.linePrecision)*E;if(null===(k=a.geometry).boundingSphere&&k.computeBoundingSphere(),t.copy(k.boundingSphere),t.applyMatrix4(a.matrixWorld),!1===c.ray.isIntersectionSphere(t))return u;if(o.getInverse(a.matrixWorld),r.copy(c.ray).applyMatrix4(o),k instanceof e.Geometry){var W=(L=k.vertices).length,j=new e.Vector3,X=new e.Vector3,q=a.type===e.LineStrip?1:2;for(H=0;H<W-1;H+=q){if(!(r.distanceSqToSegment(L[H],L[H+1],X,j)>G))(f=r.origin.distanceTo(X))<c.near||f>c.far||u.push({distance:f,point:j.clone().applyMatrix4(a.matrixWorld),face:null,faceIndex:null,object:a})}}}},c=function(e,t,r){for(var i=e.getDescendants(),o=0,a=i.length;o<a;o++)l(i[o],t,r)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.linePrecision=1,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t)},e.Raycaster.prototype.intersectObject=function(e,t){var r=[];return!0===t&&c(e,this,r),l(e,this,r),r.sort(a),r},e.Raycaster.prototype.intersectObjects=function(e,t){for(var r=[],i=0,o=e.length;i<o;i++)l(e[i],this,r),!0===t&&c(e[i],this,r);return r.sort(a),r}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this._rotation=new THREE.Euler,this._quaternion=new THREE.Quaternion,this.scale=new THREE.Vector3(1,1,1),this._rotation._quaternion=this.quaternion,this._quaternion._euler=this.rotation,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get rotation(){return this._rotation},set rotation(e){this._rotation=e,this._rotation._quaternion=this._quaternion,this._quaternion._euler=this._rotation,this._rotation._updateQuaternion()},get quaternion(){return this._quaternion},set quaternion(e){this._quaternion=e,this._quaternion._euler=this._rotation,this._rotation._quaternion=this._quaternion,this._quaternion._updateEuler()},get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(e){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=e},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,r){return e.copy(t),e.applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translate:function(e,t){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(e!==this){if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}}else console.warn("THREE.Object3D.add: An object can't be added as a child of itself.")},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0,e.dispatchEvent({type:"removed"}),this.children.splice(t,1);for(var r=this;void 0!==r.parent;)r=r.parent;void 0!==r&&r instanceof THREE.Scene&&r.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,r=this.children.length;t<r;t++)this.children[t].traverse(e)},getObjectById:function(e,t){for(var r=0,i=this.children.length;r<i;r++){var o=this.children[r];if(o.id===e)return o;if(!0===t&&void 0!==(o=o.getObjectById(e,t)))return o}},getObjectByName:function(e,t){for(var r=0,i=this.children.length;r<i;r++){var o=this.children[r];if(o.name===e)return o;if(!0===t&&void 0!==(o=o.getObjectByName(e,t)))return o}},getChildByName:function(e,t){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e,t)},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,r=this.children.length;t<r;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==e||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)},clone:function(e,t){if(void 0===e&&(e=new THREE.Object3D),void 0===t&&(t=!0),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.quaternion.copy(this.quaternion),e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled,e.userData=JSON.parse(JSON.stringify(this.userData)),!0===t)for(var r=0;r<this.children.length;r++){var i=this.children[r];e.add(i.clone())}return e}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){var e,t,r,i,o,a,n,s,h,l,c,u,f=[],p=0,E=[],d=0,m=[],g=0,v=[],T=0,y=[],R=0,x={objects:[],lights:[],elements:[]},H=new THREE.Vector3,_=new THREE.Vector3,w=new THREE.Vector3,b=new THREE.Vector3,M=new THREE.Vector4,S=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),A=new THREE.Box3,C=new Array(3),L=(new Array(4),new THREE.Matrix4),P=new THREE.Matrix4,D=new THREE.Matrix4,F=new THREE.Matrix3,U=new THREE.Frustum,V=new THREE.Vector4,z=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),P.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(P)},this.unprojectVector=(u=new THREE.Matrix4,function(e,t){return u.getInverse(t.projectionMatrix),P.multiplyMatrices(t.matrixWorld,u),e.applyProjection(P)}),this.pickingRay=function(e,t){e.z=-1;var r=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(r,t),r.sub(e).normalize(),new THREE.Raycaster(e,r)};var B=function(r){if(!1!==r.visible){r instanceof THREE.Light?x.lights.push(r):(r instanceof THREE.Mesh||r instanceof THREE.Line||r instanceof THREE.Sprite)&&(!1!==r.frustumCulled&&!0!==U.intersectsObject(r)||(e=function(){if(t===p){var e=new THREE.RenderableObject;return f.push(e),p++,t++,e}return f[t++]}(),e.id=r.id,e.object=r,null!==r.renderDepth?e.z=r.renderDepth:(b.setFromMatrixPosition(r.matrixWorld),b.applyProjection(P),e.z=b.z),x.objects.push(e)));for(var i=0,o=r.children.length;i<o;i++)B(r.children[i])}},N=new function(){var e=[],t=null,i=new THREE.Matrix3,a=function(e){var t=e.position,r=e.positionWorld,i=e.positionScreen;r.copy(t).applyMatrix4(c),i.copy(r).applyMatrix4(P);var o=1/i.w;i.x*=o,i.y*=o,i.z*=o,e.visible=i.x>=-1&&i.x<=1&&i.y>=-1&&i.y<=1&&i.z>=-1&&i.z<=1},s=function(e,t,r){return C[0]=e.positionScreen,C[1]=t.positionScreen,C[2]=r.positionScreen,!(!0!==e.visible&&!0!==t.visible&&!0!==r.visible&&!S.isIntersectionBox(A.setFromPoints(C)))&&(r.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(r.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)<0};return{setObject:function(r){t=r,i.getNormalMatrix(t.matrixWorld),e.length=0},projectVertex:a,checkTriangleVisibility:s,pushVertex:function(e,t,i){(r=O()).position.set(e,t,i),a(r)},pushNormal:function(t,r,i){e.push(t,r,i)},pushLine:function(e,r){var i=E[e],o=E[r];(n=k()).id=t.id,n.v1.copy(i),n.v2.copy(o),n.z=(i.positionScreen.z+o.positionScreen.z)/2,n.material=t.material,x.elements.push(n)},pushTriangle:function(r,a,n){var h=E[r],l=E[a],c=E[n];if(!0===s(h,l,c)){(o=I()).id=t.id,o.v1.copy(h),o.v2.copy(l),o.v3.copy(c),o.z=(h.positionScreen.z+l.positionScreen.z+c.positionScreen.z)/3;for(var u=0;u<3;u++){var f=3*arguments[u],p=o.vertexNormalsModel[u];p.set(e[f+0],e[f+1],e[f+2]),p.applyMatrix3(i).normalize()}o.vertexNormalsLength=3,o.material=t.material,x.elements.push(o)}}}};function O(){if(i===d){var e=new THREE.RenderableVertex;return E.push(e),d++,i++,e}return E[i++]}function I(){if(a===g){var e=new THREE.RenderableFace;return m.push(e),g++,a++,e}return m[a++]}function k(){if(s===T){var e=new THREE.RenderableLine;return v.push(e),T++,s++,e}return v[s++]}function G(){if(l===R){var e=new THREE.RenderableSprite;return y.push(e),R++,l++,e}return y[l++]}function W(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function j(e,t){var r=0,i=1,o=e.z+e.w,a=t.z+t.w,n=-e.z+e.w,s=-t.z+t.w;return o>=0&&a>=0&&n>=0&&s>=0||!(o<0&&a<0||n<0&&s<0)&&(o<0?r=Math.max(r,o/(o-a)):a<0&&(i=Math.min(i,o/(o-a))),n<0?r=Math.max(r,n/(n-s)):s<0&&(i=Math.min(i,n/(n-s))),!(i<r)&&(e.lerp(t,r),t.lerp(e,1-i),!0))}this.projectScene=function(e,r,u,f){var p,d,m,g,v,T,y,R,b,S;a=0,s=0,l=0,x.elements.length=0,!0===e.autoUpdate&&e.updateMatrixWorld(),void 0===r.parent&&r.updateMatrixWorld(),L.copy(r.matrixWorldInverse.getInverse(r.matrixWorld)),P.multiplyMatrices(r.projectionMatrix,L),U.setFromMatrix(P),function(e,r){t=0,x.objects.length=0,x.lights.length=0,B(e),!0===r&&x.objects.sort(W)}(e,u);for(var A=0,C=x.objects.length;A<C;A++)if(d=(p=x.objects[A].object).geometry,N.setObject(p),c=p.matrixWorld,i=0,p instanceof THREE.Mesh){if(d instanceof THREE.BufferGeometry){var X=d.attributes,q=d.offsets;if(void 0===X.position)continue;for(var Y=0,K=(Me=X.position.array).length;Y<K;Y+=3)N.pushVertex(Me[Y],Me[Y+1],Me[Y+2]);var Q=X.normal.array;for(Y=0,K=Q.length;Y<K;Y+=3)N.pushNormal(Q[Y],Q[Y+1],Q[Y+2]);if(void 0!==X.index){var Z=X.index.array;if(q.length>0)for(A=0;A<q.length;A++){var J=q[A],$=J.index;for(Y=J.start,K=J.start+J.count;Y<K;Y+=3)N.pushTriangle(Z[Y]+$,Z[Y+1]+$,Z[Y+2]+$)}else for(Y=0,K=Z.length;Y<K;Y+=3)N.pushTriangle(Z[Y],Z[Y+1],Z[Y+2])}else for(Y=0,K=Me.length/3;Y<K;Y+=3)N.pushTriangle(Y,Y+1,Y+2)}else if(d instanceof THREE.Geometry){m=d.vertices,g=d.faces,y=d.faceVertexUvs,F.getNormalMatrix(c),S=!0===(b=p.material instanceof THREE.MeshFaceMaterial)?p.material:null;for(var ee=0,te=m.length;ee<te;ee++){var re=m[ee];N.pushVertex(re.x,re.y,re.z)}for(var ie=0,oe=g.length;ie<oe;ie++){v=g[ie];var ae=!0===b?S.materials[v.materialIndex]:p.material;if(void 0!==ae){var ne=ae.side,se=E[v.a],he=E[v.b],le=E[v.c];if(!0===ae.morphTargets){var ce=d.morphTargets,ue=p.morphTargetInfluences,fe=se.position,pe=he.position,Ee=le.position;H.set(0,0,0),_.set(0,0,0),w.set(0,0,0);for(var de=0,me=ce.length;de<me;de++){var ge=ue[de];if(0!==ge){var ve=ce[de].vertices;H.x+=(ve[v.a].x-fe.x)*ge,H.y+=(ve[v.a].y-fe.y)*ge,H.z+=(ve[v.a].z-fe.z)*ge,_.x+=(ve[v.b].x-pe.x)*ge,_.y+=(ve[v.b].y-pe.y)*ge,_.z+=(ve[v.b].z-pe.z)*ge,w.x+=(ve[v.c].x-Ee.x)*ge,w.y+=(ve[v.c].y-Ee.y)*ge,w.z+=(ve[v.c].z-Ee.z)*ge}}se.position.add(H),he.position.add(_),le.position.add(w),N.projectVertex(se),N.projectVertex(he),N.projectVertex(le)}var Te=N.checkTriangleVisibility(se,he,le);if(!(!1===Te&&ne===THREE.FrontSide||!0===Te&&ne===THREE.BackSide)){(o=I()).id=p.id,o.v1.copy(se),o.v2.copy(he),o.v3.copy(le),o.normalModel.copy(v.normal),!1!==Te||ne!==THREE.BackSide&&ne!==THREE.DoubleSide||o.normalModel.negate(),o.normalModel.applyMatrix3(F).normalize(),o.centroidModel.copy(v.centroid).applyMatrix4(c),T=v.vertexNormals;for(var ye=0,Re=Math.min(T.length,3);ye<Re;ye++){var xe=o.vertexNormalsModel[ye];xe.copy(T[ye]),!1!==Te||ne!==THREE.BackSide&&ne!==THREE.DoubleSide||xe.negate(),xe.applyMatrix3(F).normalize()}o.vertexNormalsLength=T.length;for(var He=0,_e=Math.min(y.length,3);He<_e;He++)if(void 0!==(R=y[He][ie]))for(var we=0,be=R.length;we<be;we++)o.uvs[He][we]=R[we];o.color=v.color,o.material=ae,o.z=(se.positionScreen.z+he.positionScreen.z+le.positionScreen.z)/3,x.elements.push(o)}}}}}else if(p instanceof THREE.Line){if(d instanceof THREE.BufferGeometry){if(void 0!==(X=d.attributes).position){var Me;for(Y=0,K=(Me=X.position.array).length;Y<K;Y+=3)N.pushVertex(Me[Y],Me[Y+1],Me[Y+2]);if(void 0!==X.index)for(Y=0,K=(Z=X.index.array).length;Y<K;Y+=2)N.pushLine(Z[Y],Z[Y+1]);else for(Y=0,K=Me.length/3-1;Y<K;Y++)N.pushLine(Y,Y+1)}}else if(d instanceof THREE.Geometry){if(D.multiplyMatrices(P,c),0===(m=p.geometry.vertices).length)continue;(se=O()).positionScreen.copy(m[0]).applyMatrix4(D);var Se=p.type===THREE.LinePieces?2:1;for(ee=1,te=m.length;ee<te;ee++)(se=O()).positionScreen.copy(m[ee]).applyMatrix4(D),(ee+1)%Se>0||(he=E[i-2],V.copy(se.positionScreen),z.copy(he.positionScreen),!0===j(V,z)&&(V.multiplyScalar(1/V.w),z.multiplyScalar(1/z.w),(n=k()).id=p.id,n.v1.positionScreen.copy(V),n.v2.positionScreen.copy(z),n.z=Math.max(V.z,z.z),n.material=p.material,p.material.vertexColors===THREE.VertexColors&&(n.vertexColors[0].copy(p.geometry.colors[ee]),n.vertexColors[1].copy(p.geometry.colors[ee-1])),x.elements.push(n)))}}else if(p instanceof THREE.Sprite){M.set(c.elements[12],c.elements[13],c.elements[14],1),M.applyMatrix4(P);var Ae=1/M.w;M.z*=Ae,M.z>=-1&&M.z<=1&&((h=G()).id=p.id,h.x=M.x*Ae,h.y=M.y*Ae,h.z=M.z,h.object=p,h.rotation=p.rotation,h.scale.x=p.scale.x*Math.abs(h.x-(M.x+r.projectionMatrix.elements[0])/(M.w+r.projectionMatrix.elements[12])),h.scale.y=p.scale.y*Math.abs(h.y-(M.y+r.projectionMatrix.elements[5])/(M.w+r.projectionMatrix.elements[13])),h.material=p.material,x.elements.push(h))}return!0===f&&x.elements.sort(W),x}},THREE.Face3=function(e,t,r,i,o,a){this.a=e,this.b=t,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=o instanceof THREE.Color?o:new THREE.Color,this.vertexColors=o instanceof Array?o:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e,t,r=new THREE.Face3(this.a,this.b,this.c);for(r.normal.copy(this.normal),r.color.copy(this.color),r.centroid.copy(this.centroid),r.materialIndex=this.materialIndex,e=0,t=this.vertexNormals.length;e<t;e++)r.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,t=this.vertexColors.length;e<t;e++)r.vertexColors[e]=this.vertexColors[e].clone();for(e=0,t=this.vertexTangents.length;e<t;e++)r.vertexTangents[e]=this.vertexTangents[e].clone();return r}},THREE.Face4=function(e,t,r,i,o,a,n){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(e,t,r,o,a,n)},THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.offsets=[],this.boundingBox=null,this.boundingSphere=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,t,r,i){return this.attributes[e]={array:new t(r*i),itemSize:i},this.attributes[e]},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.multiplyVector3Array(t.array),t.needsUpdate=!0);var r=this.attributes.normal;void 0!==r&&((new THREE.Matrix3).getNormalMatrix(e).multiplyVector3Array(r.array),r.needsUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t=this.boundingBox;e.length>=3&&(t.min.x=t.max.x=e[0],t.min.y=t.max.y=e[1],t.min.z=t.max.z=e[2]);for(var r=3,i=e.length;r<i;r+=3){var o=e[r],a=e[r+1],n=e[r+2];o<t.min.x?t.min.x=o:o>t.max.x&&(t.max.x=o),a<t.min.y?t.min.y=a:a>t.max.y&&(t.max.y=a),n<t.min.z?t.min.z=n:n>t.max.z&&(t.max.z=n)}}void 0!==e&&0!==e.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){e.makeEmpty();for(var i=this.boundingSphere.center,o=0,a=r.length;o<a;o+=3)t.set(r[o],r[o+1],r[o+2]),e.addPoint(t);e.center(i);var n=0;for(o=0,a=r.length;o<a;o+=3)t.set(r[o],r[o+1],r[o+2]),n=Math.max(n,i.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(n)}}}(),computeVertexNormals:function(){if(this.attributes.position){var e,t,r,i,o=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(o)};else for(e=0,t=this.attributes.normal.array.length;e<t;e++)this.attributes.normal.array[e]=0;var a,n,s,h,l,c,u=this.attributes.position.array,f=this.attributes.normal.array,p=new THREE.Vector3,E=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector3;if(this.attributes.index){var v=this.attributes.index.array,T=this.offsets;for(r=0,i=T.length;r<i;++r){var y=T[r].start,R=T[r].count,x=T[r].index;for(e=y,t=y+R;e<t;e+=3)a=x+v[e],n=x+v[e+1],s=x+v[e+2],h=u[3*a],l=u[3*a+1],c=u[3*a+2],p.set(h,l,c),h=u[3*n],l=u[3*n+1],c=u[3*n+2],E.set(h,l,c),h=u[3*s],l=u[3*s+1],c=u[3*s+2],d.set(h,l,c),m.subVectors(d,E),g.subVectors(p,E),m.cross(g),f[3*a]+=m.x,f[3*a+1]+=m.y,f[3*a+2]+=m.z,f[3*n]+=m.x,f[3*n+1]+=m.y,f[3*n+2]+=m.z,f[3*s]+=m.x,f[3*s+1]+=m.y,f[3*s+2]+=m.z}}else for(e=0,t=u.length;e<t;e+=9)h=u[e],l=u[e+1],c=u[e+2],p.set(h,l,c),h=u[e+3],l=u[e+4],c=u[e+5],E.set(h,l,c),h=u[e+6],l=u[e+7],c=u[e+8],d.set(h,l,c),m.subVectors(d,E),g.subVectors(p,E),m.cross(g),f[e]=m.x,f[e+1]=m.y,f[e+2]=m.z,f[e+3]=m.x,f[e+4]=m.y,f[e+5]=m.z,f[e+6]=m.x,f[e+7]=m.y,f[e+8]=m.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e,t,r,i,o=this.attributes.normal.array,a=0,n=o.length;a<n;a+=3)e=o[a],t=o[a+1],r=o[a+2],i=1/Math.sqrt(e*e+t*t+r*r),o[a]*=i,o[a+1]*=i,o[a+2]*=i},computeTangents:function(){if(void 0!==this.attributes.index&&void 0!==this.attributes.position&&void 0!==this.attributes.normal&&void 0!==this.attributes.uv){var e=this.attributes.index.array,t=this.attributes.position.array,r=this.attributes.normal.array,i=this.attributes.uv.array,o=t.length/3;if(void 0===this.attributes.tangent){var a=4*o;this.attributes.tangent={itemSize:4,array:new Float32Array(a)}}for(var n,s,h,l,c,u,f,p,E,d,m,g,v,T,y,R,x,H,_,w,b,M,S,A,C,L,P=this.attributes.tangent.array,D=[],F=[],U=0;U<o;U++)D[U]=new THREE.Vector3,F[U]=new THREE.Vector3;var V,z,B,N,O,I,k,G,W,j,X=new THREE.Vector3,q=new THREE.Vector3,Y=this.offsets;for(B=0,N=Y.length;B<N;++B){var K=Y[B].start,Q=Y[B].count,Z=Y[B].index;for(V=K,z=K+Q;V<z;V+=3)O=Z+e[V],I=Z+e[V+1],k=Z+e[V+2],W=I,j=k,n=t[3*(G=O)],s=t[3*G+1],h=t[3*G+2],l=t[3*W],c=t[3*W+1],u=t[3*W+2],f=t[3*j],p=t[3*j+1],E=t[3*j+2],d=i[2*G],m=i[2*G+1],g=i[2*W],v=i[2*W+1],T=i[2*j],y=i[2*j+1],R=l-n,x=f-n,H=c-s,_=p-s,w=u-h,b=E-h,L=1/((M=g-d)*(C=y-m)-(S=T-d)*(A=v-m)),X.set((C*R-A*x)*L,(C*H-A*_)*L,(C*w-A*b)*L),q.set((M*x-S*R)*L,(M*_-S*H)*L,(M*b-S*w)*L),D[G].add(X),D[W].add(X),D[j].add(X),F[G].add(q),F[W].add(q),F[j].add(q)}var J,$,ee,te=new THREE.Vector3,re=new THREE.Vector3,ie=new THREE.Vector3,oe=new THREE.Vector3;for(B=0,N=Y.length;B<N;++B){K=Y[B].start,Q=Y[B].count,Z=Y[B].index;for(V=K,z=K+Q;V<z;V+=3)O=Z+e[V],I=Z+e[V+1],k=Z+e[V+2],ae(O),ae(I),ae(k)}}else console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");function ae(e){ie.x=r[3*e],ie.y=r[3*e+1],ie.z=r[3*e+2],oe.copy(ie),$=D[e],te.copy($),te.sub(ie.multiplyScalar(ie.dot($))).normalize(),re.crossVectors(oe,$),ee=re.dot(F[e]),J=ee<0?-1:1,P[4*e]=te.x,P[4*e+1]=te.y,P[4*e+2]=te.z,P[4*e+3]=J}},computeOffsets:function(e){var t=e;void 0===e&&(t=65535);Date.now();for(var r=this.attributes.index.array,i=this.attributes.position.array,o=(i.length,r.length/3),a=new Uint16Array(r.length),n=0,s=0,h=[{start:0,count:0,index:0}],l=h[0],c=0,u=new Int32Array(6),f=new Int32Array(i.length),p=new Int32Array(i.length),E=0;E<i.length;E++)f[E]=-1,p[E]=-1;for(var d=0;d<o;d++){c=0;for(var m=0;m<3;m++){-1==f[y=r[3*d+m]]?(u[2*m]=y,u[2*m+1]=-1,c++):f[y]<l.index?(u[2*m]=y,u[2*m+1]=-1):(u[2*m]=y,u[2*m+1]=f[y])}if(s+c>l.index+t){var g={start:n,count:0,index:s};h.push(g),l=g;for(var v=0;v<6;v+=2){(T=u[v+1])>-1&&T<l.index&&(u[v+1]=-1)}}for(v=0;v<6;v+=2){var T,y=u[v];-1===(T=u[v+1])&&(T=s++),f[y]=T,p[T]=y,a[n++]=T-l.index,l.count++}}return this.reorderBuffers(a,p,s),this.offsets=h,h},reorderBuffers:function(e,t,r){var i={},o=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var a in this.attributes)if("index"!=a)for(var n=this.attributes[a].array,s=0,h=o.length;s<h;s++){var l=o[s];if(n instanceof l){i[a]=new l(this.attributes[a].itemSize*r);break}}for(var c=0;c<r;c++){var u=t[c];for(var a in this.attributes)if("index"!=a)for(var f=this.attributes[a].array,p=this.attributes[a].itemSize,E=i[a],d=0;d<p;d++)E[c*p+d]=f[u*p+d]}for(var a in this.attributes.index.array=e,this.attributes)"index"!=a&&(this.attributes[a].array=i[a],this.attributes[a].numItems=this.attributes[a].itemSize*r)},clone:function(){var e=new THREE.BufferGeometry,t=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var r in this.attributes){for(var i=this.attributes[r],o=i.array,a={itemSize:i.itemSize,array:null},n=0,s=t.length;n<s;n++){var h=t[n];if(o instanceof h){a.array=new h(o);break}}e.attributes[r]=a}for(n=0,s=this.offsets.length;n<s;n++){var l=this.offsets[n];e.offsets.push({start:l.start,index:l.index,count:l.count})}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),r=0,i=this.vertices.length;r<i;r++){this.vertices[r].applyMatrix4(e)}for(r=0,i=this.faces.length;r<i;r++){var o=this.faces[r];o.normal.applyMatrix3(t).normalize();for(var a=0,n=o.vertexNormals.length;a<n;a++)o.vertexNormals[a].applyMatrix3(t).normalize();o.centroid.applyMatrix4(e)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var e,t,r;for(e=0,t=this.faces.length;e<t;e++)(r=this.faces[e]).centroid.set(0,0,0),r.centroid.add(this.vertices[r.a]),r.centroid.add(this.vertices[r.b]),r.centroid.add(this.vertices[r.c]),r.centroid.divideScalar(3)},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,r=0,i=this.faces.length;r<i;r++){var o=this.faces[r],a=this.vertices[o.a],n=this.vertices[o.b],s=this.vertices[o.c];e.subVectors(s,n),t.subVectors(a,n),e.cross(t),e.normalize(),o.normal.copy(e)}},computeVertexNormals:function(e){var t,r,i,o,a,n;for(n=new Array(this.vertices.length),t=0,r=this.vertices.length;t<r;t++)n[t]=new THREE.Vector3;if(e){var s,h,l,c=new THREE.Vector3,u=new THREE.Vector3;new THREE.Vector3,new THREE.Vector3,new THREE.Vector3;for(i=0,o=this.faces.length;i<o;i++)a=this.faces[i],s=this.vertices[a.a],h=this.vertices[a.b],l=this.vertices[a.c],c.subVectors(l,h),u.subVectors(s,h),c.cross(u),n[a.a].add(c),n[a.b].add(c),n[a.c].add(c)}else for(i=0,o=this.faces.length;i<o;i++)n[(a=this.faces[i]).a].add(a.normal),n[a.b].add(a.normal),n[a.c].add(a.normal);for(t=0,r=this.vertices.length;t<r;t++)n[t].normalize();for(i=0,o=this.faces.length;i<o;i++)(a=this.faces[i]).vertexNormals[0]=n[a.a].clone(),a.vertexNormals[1]=n[a.b].clone(),a.vertexNormals[2]=n[a.c].clone()},computeMorphNormals:function(){var e,t,r,i,o;for(r=0,i=this.faces.length;r<i;r++)for((o=this.faces[r]).__originalFaceNormal?o.__originalFaceNormal.copy(o.normal):o.__originalFaceNormal=o.normal.clone(),o.__originalVertexNormals||(o.__originalVertexNormals=[]),e=0,t=o.vertexNormals.length;e<t;e++)o.__originalVertexNormals[e]?o.__originalVertexNormals[e].copy(o.vertexNormals[e]):o.__originalVertexNormals[e]=o.vertexNormals[e].clone();var a=new THREE.Geometry;for(a.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var n=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals;for(r=0,i=this.faces.length;r<i;r++)o=this.faces[r],h=new THREE.Vector3,l={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(h),s.push(l)}var h,l,c=this.morphNormals[e];for(a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals(),r=0,i=this.faces.length;r<i;r++)o=this.faces[r],h=c.faceNormals[r],l=c.vertexNormals[r],h.copy(o.normal),l.a.copy(o.vertexNormals[0]),l.b.copy(o.vertexNormals[1]),l.c.copy(o.vertexNormals[2])}for(r=0,i=this.faces.length;r<i;r++)(o=this.faces[r]).normal=o.__originalFaceNormal,o.vertexNormals=o.__originalVertexNormals},computeTangents:function(){var e,t,r,i,o,a,n,s,h,l,c,u,f,p,E,d,m,g,v,T,y,R,x,H,_,w,b,M,S,A,C,L,P,D,F=[],U=[],V=new THREE.Vector3,z=new THREE.Vector3,B=new THREE.Vector3,N=new THREE.Vector3,O=new THREE.Vector3;for(r=0,i=this.vertices.length;r<i;r++)F[r]=new THREE.Vector3,U[r]=new THREE.Vector3;for(e=0,t=this.faces.length;e<t;e++)n=this.faces[e],s=this.faceVertexUvs[0][e],M=this,S=n.a,A=n.b,C=n.c,L=0,P=1,D=2,h=M.vertices[S],l=M.vertices[A],c=M.vertices[C],u=s[L],f=s[P],p=s[D],E=l.x-h.x,d=c.x-h.x,m=l.y-h.y,g=c.y-h.y,v=l.z-h.z,T=c.z-h.z,y=f.x-u.x,R=p.x-u.x,x=f.y-u.y,H=p.y-u.y,_=1/(y*H-R*x),V.set((H*E-x*d)*_,(H*m-x*g)*_,(H*v-x*T)*_),z.set((y*d-R*E)*_,(y*g-R*m)*_,(y*T-R*v)*_),F[S].add(V),F[A].add(V),F[C].add(V),U[S].add(z),U[A].add(z),U[C].add(z);var I=["a","b","c","d"];for(e=0,t=this.faces.length;e<t;e++)for(n=this.faces[e],o=0;o<Math.min(n.vertexNormals.length,3);o++)O.copy(n.vertexNormals[o]),a=n[I[o]],w=F[a],B.copy(w),B.sub(O.multiplyScalar(O.dot(w))).normalize(),N.crossVectors(n.vertexNormals[o],w),b=N.dot(U[a])<0?-1:1,n.vertexTangents[o]=new THREE.Vector4(B.x,B.y,B.z,b);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,i=t.length;r<i;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var e,t,r,i,o,a,n,s,h={},l=[],c=[],u=Math.pow(10,4);for(r=0,i=this.vertices.length;r<i;r++)e=this.vertices[r],void 0===h[t=Math.round(e.x*u)+"_"+Math.round(e.y*u)+"_"+Math.round(e.z*u)]?(h[t]=r,l.push(this.vertices[r]),c[r]=l.length-1):c[r]=c[h[t]];var f=[];for(r=0,i=this.faces.length;r<i;r++){(o=this.faces[r]).a=c[o.a],o.b=c[o.b],o.c=c[o.c],a=[o.a,o.b,o.c];for(var p=0;p<3;p++)if(a[p]==a[(p+1)%3]){p,f.push(r);break}}for(r=f.length-1;r>=0;r--){var E=f[r];for(this.faces.splice(E,1),n=0,s=this.faceVertexUvs.length;n<s;n++)this.faceVertexUvs[n].splice(E,1)}var d=this.vertices.length-l.length;return this.vertices=l,d},makeGroups:function(){var e=0;return function(t){var r,i,o,a,n,s={},h=this.morphTargets.length,l=this.morphNormals.length;for(this.geometryGroups={},r=0,i=this.faces.length;r<i;r++)o=this.faces[r],(a=t?o.materialIndex:0)in s||(s[a]={hash:a,counter:0}),(n=s[a].hash+"_"+s[a].counter)in this.geometryGroups||(this.geometryGroups[n]={faces3:[],materialIndex:a,vertices:0,numMorphTargets:h,numMorphNormals:l}),this.geometryGroups[n].vertices+3>65535&&(s[a].counter+=1,(n=s[a].hash+"_"+s[a].counter)in this.geometryGroups||(this.geometryGroups[n]={faces3:[],materialIndex:a,vertices:0,numMorphTargets:h,numMorphNormals:l})),this.geometryGroups[n].faces3.push(r),this.geometryGroups[n].vertices+=3;for(var c in this.geometryGroupsList=[],this.geometryGroups)this.geometryGroups[c].id=e++,this.geometryGroupsList.push(this.geometryGroups[c])}}(),clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,i=t.length;r<i;r++)e.vertices.push(t[r].clone());var o=this.faces;for(r=0,i=o.length;r<i;r++)e.faces.push(o[r].clone());var a=this.faceVertexUvs[0];for(r=0,i=a.length;r<i;r++){for(var n=a[r],s=[],h=0,l=n.length;h<l;h++)s.push(new THREE.Vector2(n[h].x,n[h].y));e.faceVertexUvs[0].push(s)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Geometry2=function(e){THREE.BufferGeometry.call(this),this.vertices=this.addAttribute("position",Float32Array,e,3).array,this.normals=this.addAttribute("normal",Float32Array,e,3).array,this.uvs=this.addAttribute("uv",Float32Array,e,2).array,this.boundingBox=null,this.boundingSphere=null},THREE.Geometry2.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e},THREE.OrthographicCamera=function(e,t,r,i,o,a){THREE.Camera.call(this),this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=void 0!==o?o:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,e),e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e},THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,o,a){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=i,this.width=o,this.height=a,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=-t,i=e*r,o=e*t,a=Math.abs(o-i),n=Math.abs(t-r);this.projectionMatrix.makeFrustum(i+this.x*a/this.fullWidth,i+(this.x+this.width)*a/this.fullWidth,t-(this.y+this.height)*n/this.fullHeight,t-this.y*n/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,e),e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(e){return void 0===e&&(e=new THREE.Light),THREE.Object3D.prototype.clone.call(this,e),e.color.copy(this.color),e},THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,e),e},THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e},THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e),this.position.set(0,100,0),this.groundColor=new THREE.Color(t),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,e),e.groundColor.copy(this.groundColor),e.intensity=this.intensity,e},THREE.PointLight=function(e,t,r){THREE.Light.call(this,e),this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,e),e.intensity=this.intensity,e.distance=this.distance,e},THREE.SpotLight=function(e,t,r,i,o){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==o?o:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.distance=this.distance,e.angle=this.angle,e.exponent=this.exponent,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e},THREE.Loader=function(e){this.showStatus=e,this.statusDomElement=e?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";e.total?t+=(100*e.loaded/e.total).toFixed(0)+"%":t+=(e.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=t},extractUrlBase:function(e){var t=e.split("/");return 1===t.length?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(e,t){for(var r=[],i=0;i<e.length;++i)r[i]=THREE.Loader.prototype.createMaterial(e[i],t);return r},needsTangents:function(e){for(var t=0,r=e.length;t<r;t++){if(e[t]instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(e,t){var r=this;function i(e){var t=Math.log(e)/Math.LN2;return Math.floor(t)==t}function o(e){var t=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(t))}function a(e,a,n,s,h,l,c){var u=/\.dds$/i.test(n),f=t+n;if(u){var p=THREE.ImageUtils.loadCompressedTexture(f);e[a]=p}else{p=document.createElement("canvas");e[a]=new THREE.Texture(p)}if(e[a].sourceFile=n,s&&(e[a].repeat.set(s[0],s[1]),1!==s[0]&&(e[a].wrapS=THREE.RepeatWrapping),1!==s[1]&&(e[a].wrapT=THREE.RepeatWrapping)),h&&e[a].offset.set(h[0],h[1]),l){var E={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==E[l[0]]&&(e[a].wrapS=E[l[0]]),void 0!==E[l[1]]&&(e[a].wrapT=E[l[1]])}c&&(e[a].anisotropy=c),u||function(e,t){var a=new Image;a.onload=function(){if(i(this.width)&&i(this.height))e.image=this;else{var t=o(this.width),r=o(this.height);e.image.width=t,e.image.height=r,e.image.getContext("2d").drawImage(this,0,0,t,r)}e.needsUpdate=!0},void 0!==r.crossOrigin&&(a.crossOrigin=r.crossOrigin),a.src=t}(e[a],f)}function n(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var s="MeshLambertMaterial",h={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var l=e.shading.toLowerCase();"phong"===l?s="MeshPhongMaterial":"basic"===l&&(s="MeshBasicMaterial")}if(void 0!==e.blending&&void 0!==THREE[e.blending]&&(h.blending=THREE[e.blending]),(void 0!==e.transparent||e.opacity<1)&&(h.transparent=e.transparent),void 0!==e.depthTest&&(h.depthTest=e.depthTest),void 0!==e.depthWrite&&(h.depthWrite=e.depthWrite),void 0!==e.visible&&(h.visible=e.visible),void 0!==e.flipSided&&(h.side=THREE.BackSide),void 0!==e.doubleSided&&(h.side=THREE.DoubleSide),void 0!==e.wireframe&&(h.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?h.vertexColors=THREE.FaceColors:e.vertexColors&&(h.vertexColors=THREE.VertexColors)),e.colorDiffuse?h.color=n(e.colorDiffuse):e.DbgColor&&(h.color=e.DbgColor),e.colorSpecular&&(h.specular=n(e.colorSpecular)),e.colorAmbient&&(h.ambient=n(e.colorAmbient)),e.transparency&&(h.opacity=e.transparency),e.specularCoef&&(h.shininess=e.specularCoef),e.mapDiffuse&&t&&a(h,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&a(h,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&a(h,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&a(h,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&a(h,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(h.bumpScale=e.mapBumpScale),e.mapNormal){var c=THREE.ShaderLib.normalmap,u=THREE.UniformsUtils.clone(c.uniforms);u.tNormal.value=h.normalMap,e.mapNormalFactor&&u.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),h.map&&(u.tDiffuse.value=h.map,u.enableDiffuse.value=!0),h.specularMap&&(u.tSpecular.value=h.specularMap,u.enableSpecular.value=!0),h.lightMap&&(u.tAO.value=h.lightMap,u.enableAO.value=!0),u.diffuse.value.setHex(h.color),u.specular.value.setHex(h.specular),u.ambient.value.setHex(h.ambient),u.shininess.value=h.shininess,void 0!==h.opacity&&(u.opacity.value=h.opacity);var f={fragmentShader:c.fragmentShader,vertexShader:c.vertexShader,uniforms:u,lights:!0,fog:!0},p=new THREE.ShaderMaterial(f);h.transparent&&(p.transparent=!0)}else p=new THREE[s](h);return void 0!==e.DbgName&&(p.name=e.DbgName),p}},THREE.XHRLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,r,i){var o=this,a=new XMLHttpRequest;void 0!==t&&a.addEventListener("load",(function(r){t(r.target.responseText),o.manager.itemEnd(e)}),!1),void 0!==r&&a.addEventListener("progress",(function(e){r(e)}),!1),void 0!==i&&a.addEventListener("error",(function(e){i(e)}),!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),a.open("GET",e,!0),a.send(null),o.manager.itemStart(e)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.ImageLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,r,i){var o=this,a=document.createElement("img");return void 0!==t&&a.addEventListener("load",(function(r){o.manager.itemEnd(e),t(this)}),!1),void 0!==r&&a.addEventListener("progress",(function(e){r(e)}),!1),void 0!==i&&a.addEventListener("error",(function(e){i(e)}),!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),a.src=e,o.manager.itemStart(e),a},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,r){r=r&&"string"==typeof r?r:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,r,i,o){var a=new XMLHttpRequest,n=0;a.onreadystatechange=function(){if(a.readyState===a.DONE)if(200===a.status||0===a.status){if(a.responseText){var s=JSON.parse(a.responseText);if("scene"===s.metadata.type)return void console.error('THREE.JSONLoader: "'+t+'" seems to be a Scene. Use THREE.SceneLoader instead.');var h=e.parse(s,i);r(h.geometry,h.materials)}else console.error('THREE.JSONLoader: "'+t+'" seems to be unreachable or the file is empty.');e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+t+'" ('+a.status+")");else a.readyState===a.LOADING?o&&(0===n&&(n=a.getResponseHeader("Content-Length")),o({total:n,loaded:a.responseText.length})):a.readyState===a.HEADERS_RECEIVED&&void 0!==o&&(n=a.getResponseHeader("Content-Length"))},a.open("GET",t,!0),a.withCredentials=this.withCredentials,a.send(null)},THREE.JSONLoader.prototype.parse=function(e,t){var r=new THREE.Geometry,i=void 0!==e.scale?1/e.scale:1;if(function(t){function i(e,t){return e&1<<t}var o,a,n,s,h,l,c,u,f,p,E,d,m,g,v,T,y,R,x,H,_,w,b,M,S,A,C,L=e.faces,P=e.vertices,D=e.normals,F=e.colors,U=0;if(void 0!==e.uvs){for(o=0;o<e.uvs.length;o++)e.uvs[o].length&&U++;for(o=0;o<U;o++)r.faceVertexUvs[o]=[]}s=0,h=P.length;for(;s<h;)(R=new THREE.Vector3).x=P[s++]*t,R.y=P[s++]*t,R.z=P[s++]*t,r.vertices.push(R);s=0,h=L.length;for(;s<h;)if(E=i(p=L[s++],0),d=i(p,1),m=i(p,3),g=i(p,4),v=i(p,5),T=i(p,6),y=i(p,7),E){if((H=new THREE.Face3).a=L[s],H.b=L[s+1],H.c=L[s+3],(_=new THREE.Face3).a=L[s+1],_.b=L[s+2],_.c=L[s+3],s+=4,d&&(f=L[s++],H.materialIndex=f,_.materialIndex=f),n=r.faces.length,m)for(o=0;o<U;o++)for(M=e.uvs[o],r.faceVertexUvs[o][n]=[],r.faceVertexUvs[o][n+1]=[],a=0;a<4;a++)A=M[2*(u=L[s++])],C=M[2*u+1],S=new THREE.Vector2(A,C),2!==a&&r.faceVertexUvs[o][n].push(S),0!==a&&r.faceVertexUvs[o][n+1].push(S);if(g&&(c=3*L[s++],H.normal.set(D[c++],D[c++],D[c]),_.normal.copy(H.normal)),v)for(o=0;o<4;o++)c=3*L[s++],b=new THREE.Vector3(D[c++],D[c++],D[c]),2!==o&&H.vertexNormals.push(b),0!==o&&_.vertexNormals.push(b);if(T&&(w=F[l=L[s++]],H.color.setHex(w),_.color.setHex(w)),y)for(o=0;o<4;o++)w=F[l=L[s++]],2!==o&&H.vertexColors.push(new THREE.Color(w)),0!==o&&_.vertexColors.push(new THREE.Color(w));r.faces.push(H),r.faces.push(_)}else{if((x=new THREE.Face3).a=L[s++],x.b=L[s++],x.c=L[s++],d&&(f=L[s++],x.materialIndex=f),n=r.faces.length,m)for(o=0;o<U;o++)for(M=e.uvs[o],r.faceVertexUvs[o][n]=[],a=0;a<3;a++)A=M[2*(u=L[s++])],C=M[2*u+1],S=new THREE.Vector2(A,C),r.faceVertexUvs[o][n].push(S);if(g&&(c=3*L[s++],x.normal.set(D[c++],D[c++],D[c])),v)for(o=0;o<3;o++)c=3*L[s++],b=new THREE.Vector3(D[c++],D[c++],D[c]),x.vertexNormals.push(b);if(T&&(l=L[s++],x.color.setHex(F[l])),y)for(o=0;o<3;o++)l=L[s++],x.vertexColors.push(new THREE.Color(F[l]));r.faces.push(x)}}(i),function(){if(e.skinWeights)for(var t=0,i=e.skinWeights.length;t<i;t+=2){var o=e.skinWeights[t],a=e.skinWeights[t+1];r.skinWeights.push(new THREE.Vector4(o,a,0,0))}if(e.skinIndices)for(t=0,i=e.skinIndices.length;t<i;t+=2){var n=e.skinIndices[t],s=e.skinIndices[t+1];r.skinIndices.push(new THREE.Vector4(n,s,0,0))}r.bones=e.bones,r.bones&&r.bones.length>0&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)&&console.warn("When skinning, number of vertices ("+r.vertices.length+"), skinIndices ("+r.skinIndices.length+"), and skinWeights ("+r.skinWeights.length+") should match.");r.animation=e.animation,r.animations=e.animations}(),function(t){var i,o,a,n,s,h,l,c,u,f,p;if(void 0!==e.morphTargets)for(s=0,h=e.morphTargets.length;s<h;s++)for(r.morphTargets[s]={},r.morphTargets[s].name=e.morphTargets[s].name,r.morphTargets[s].vertices=[],a=r.morphTargets[s].vertices,i=0,o=(n=e.morphTargets[s].vertices).length;i<o;i+=3){var E=new THREE.Vector3;E.x=n[i]*t,E.y=n[i+1]*t,E.z=n[i+2]*t,a.push(E)}if(void 0!==e.morphColors)for(s=0,h=e.morphColors.length;s<h;s++)for(r.morphColors[s]={},r.morphColors[s].name=e.morphColors[s].name,r.morphColors[s].colors=[],u=r.morphColors[s].colors,l=0,c=(f=e.morphColors[s].colors).length;l<c;l+=3)(p=new THREE.Color(16755200)).setRGB(f[l],f[l+1],f[l+2]),u.push(p)}(i),r.computeCentroids(),r.computeFaceNormals(),r.computeBoundingSphere(),void 0===e.materials)return{geometry:r};var o=this.initMaterials(e.materials,t);return this.needsTangents(o)&&r.computeTangents(),{geometry:r,materials:o}},THREE.LoadingManager=function(e,t,r){var i=this,o=0,a=0;this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){a++},this.itemEnd=function(e){o++,void 0!==i.onProgress&&i.onProgress(e,o,a),o===a&&void 0!==i.onLoad&&i.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader;a.setCrossOrigin(this.crossOrigin),a.load(e,(function(e){t(o.parse(JSON.parse(e)))}))},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.BufferGeometry,r=e.attributes,i=e.offsets,o=e.boundingSphere;for(var a in r){var n=r[a];t.attributes[a]={itemSize:n.itemSize,array:new self[n.type](n.array)}}return void 0!==i&&(t.offsets=JSON.parse(JSON.stringify(i))),void 0!==o&&(t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==o.center?o.center:[0,0,0]),o.radius)),t}},THREE.Geometry2Loader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.Geometry2Loader.prototype={constructor:THREE.Geometry2Loader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader;a.setCrossOrigin(this.crossOrigin),a.load(e,(function(e){t(o.parse(JSON.parse(e)))}))},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.Geometry2(e.vertices.length/3),r=["vertices","normals","uvs"],i=e.boundingSphere;for(var o in r){var a=r[o];t[a].set(e[a])}return void 0!==i&&(t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==i.center?i.center:[0,0,0]),i.radius)),t}},THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader;a.setCrossOrigin(this.crossOrigin),a.load(e,(function(e){t(o.parse(JSON.parse(e)))}))},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];if(void 0!==e.color&&t.color.setHex(e.color),void 0!==e.ambient&&t.ambient.setHex(e.ambient),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.side&&(t.side=e.side),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.materials)for(var r=0,i=e.materials.length;r<i;r++)t.materials.push(this.parse(e.materials[r]));return t}},THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader(o.manager);a.setCrossOrigin(this.crossOrigin),a.load(e,(function(e){t(o.parse(JSON.parse(e)))}))},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=this.parseGeometries(e.geometries),r=this.parseMaterials(e.materials);return this.parseObject(e.object,t,r)},parseGeometries:function(e){var t={};if(void 0!==e)for(var r=new THREE.JSONLoader,i=new THREE.Geometry2Loader,o=new THREE.BufferGeometryLoader,a=0,n=e.length;a<n;a++){var s,h=e[a];switch(h.type){case"PlaneGeometry":s=new THREE.PlaneGeometry(h.width,h.height,h.widthSegments,h.heightSegments);break;case"BoxGeometry":case"CubeGeometry":s=new THREE.BoxGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case"CircleGeometry":s=new THREE.CircleGeometry(h.radius,h.segments);break;case"CylinderGeometry":s=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded);break;case"SphereGeometry":s=new THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case"IcosahedronGeometry":s=new THREE.IcosahedronGeometry(h.radius,h.detail);break;case"TorusGeometry":s=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case"TorusKnotGeometry":s=new THREE.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case"BufferGeometry":s=o.parse(h.data);break;case"Geometry2":s=i.parse(h.data);break;case"Geometry":s=r.parse(h.data).geometry}s.uuid=h.uuid,void 0!==h.name&&(s.name=h.name),t[h.uuid]=s}return t},parseMaterials:function(e){var t={};if(void 0!==e)for(var r=new THREE.MaterialLoader,i=0,o=e.length;i<o;i++){var a=e[i],n=r.parse(a);n.uuid=a.uuid,void 0!==a.name&&(n.name=a.name),t[a.uuid]=n}return t},parseObject:function(){var e=new THREE.Matrix4;return function(t,r,i){var o;switch(t.type){case"Scene":o=new THREE.Scene;break;case"PerspectiveCamera":o=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":o=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":o=new THREE.AmbientLight(t.color);break;case"DirectionalLight":o=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":o=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":o=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":o=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":var a=r[t.geometry],n=i[t.material];void 0===a&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry),void 0===n&&console.error("THREE.ObjectLoader: Undefined material "+t.material),o=new THREE.Mesh(a,n);break;case"Sprite":void 0===(n=i[t.material])&&console.error("THREE.ObjectLoader: Undefined material "+t.material),o=new THREE.Sprite(n);break;default:o=new THREE.Object3D}if(o.uuid=t.uuid,void 0!==t.name&&(o.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(o.position,o.quaternion,o.scale)):(void 0!==t.position&&o.position.fromArray(t.position),void 0!==t.rotation&&o.rotation.fromArray(t.rotation),void 0!==t.scale&&o.scale.fromArray(t.scale)),void 0!==t.visible&&(o.visible=t.visible),void 0!==t.userData&&(o.userData=t.userData),void 0!==t.children)for(var s in t.children)o.add(this.parseObject(t.children[s],r,i));return o}}()},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlers={},this.hierarchyHandlers={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader(o.manager);a.setCrossOrigin(this.crossOrigin),a.load(e,(function(r){o.parse(JSON.parse(r),t,e)}))},setCrossOrigin:function(e){this.crossOrigin=e},addGeometryHandler:function(e,t){this.geometryHandlers[e]={loaderClass:t}},addHierarchyHandler:function(e,t){this.hierarchyHandlers[e]={loaderClass:t}},parse:function(e,t,r){var i,o,a,n,s,h,l,c,u,f,p,E,d=this,m=THREE.Loader.prototype.extractUrlBase(r),g=[],v=e;for(var T in this.geometryHandlers){var y=this.geometryHandlers[T].loaderClass;this.geometryHandlers[T].loaderObject=new y}for(var T in this.hierarchyHandlers){y=this.hierarchyHandlers[T].loaderClass;this.hierarchyHandlers[T].loaderObject=new y}if(c=0,u=0,E={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},v.transform){var R=v.transform.position,x=v.transform.rotation,H=v.transform.scale;R&&E.scene.position.fromArray(R),x&&E.scene.rotation.fromArray(x),H&&E.scene.scale.fromArray(H),(R||x||H)&&(E.scene.updateMatrix(),E.scene.updateMatrixWorld())}function _(e,t){return"relativeToHTML"==t?e:m+e}function w(){b(E.scene,v.objects)}function b(e,t){var r,n,s,h,c;for(var u in t){var f=E.objects[u],p=t[u];if(void 0===f){if(p.type&&p.type in d.hierarchyHandlers){if(void 0===p.loading){var m={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1},g={};for(var T in p)T in m||(g[T]=p[T]);o=E.materials[p.material],p.loading=!0;var y=d.hierarchyHandlers[p.type].loaderObject;y.options?y.load(_(p.url,v.urlBaseType),A(u,e,o,p)):y.load(_(p.url,v.urlBaseType),A(u,e,o,p),g)}}else if(void 0!==p.geometry){if(i=E.geometries[p.geometry]){var R=!1;if(R=(o=E.materials[p.material])instanceof THREE.ShaderMaterial,n=p.position,s=p.rotation,h=p.scale,r=p.matrix,c=p.quaternion,p.material||(o=new THREE.MeshFaceMaterial(E.face_materials[p.geometry])),o instanceof THREE.MeshFaceMaterial&&0===o.materials.length&&(o=new THREE.MeshFaceMaterial(E.face_materials[p.geometry])),o instanceof THREE.MeshFaceMaterial)for(var x=0;x<o.materials.length;x++)R=R||o.materials[x]instanceof THREE.ShaderMaterial;R&&i.computeTangents(),p.skin?f=new THREE.SkinnedMesh(i,o):p.morph?(f=new THREE.MorphAnimMesh(i,o),void 0!==p.duration&&(f.duration=p.duration),void 0!==p.time&&(f.time=p.time),void 0!==p.mirroredLoop&&(f.mirroredLoop=p.mirroredLoop),o.morphNormals&&i.computeMorphNormals()):f=new THREE.Mesh(i,o),f.name=u,r?(f.matrixAutoUpdate=!1,f.matrix.set(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8],r[9],r[10],r[11],r[12],r[13],r[14],r[15])):(f.position.fromArray(n),c?f.quaternion.fromArray(c):f.rotation.fromArray(s),f.scale.fromArray(h)),f.visible=p.visible,f.castShadow=p.castShadow,f.receiveShadow=p.receiveShadow,e.add(f),E.objects[u]=f}}else if("AmbientLight"===p.type||"PointLight"===p.type||"DirectionalLight"===p.type||"SpotLight"===p.type||"HemisphereLight"===p.type||"AreaLight"===p.type){var H=p.color,w=p.intensity,M=p.distance,S=p.position,C=p.rotation;switch(p.type){case"AmbientLight":l=new THREE.AmbientLight(H);break;case"PointLight":(l=new THREE.PointLight(H,w,M)).position.fromArray(S);break;case"DirectionalLight":(l=new THREE.DirectionalLight(H,w)).position.fromArray(p.direction);break;case"SpotLight":(l=new THREE.SpotLight(H,w,M,1)).angle=p.angle,l.position.fromArray(S),l.target.set(S[0],S[1]-M,S[2]),l.target.applyEuler(new THREE.Euler(C[0],C[1],C[2],"XYZ"));break;case"HemisphereLight":(l=new THREE.DirectionalLight(H,w,M)).target.set(S[0],S[1]-M,S[2]),l.target.applyEuler(new THREE.Euler(C[0],C[1],C[2],"XYZ"));break;case"AreaLight":(l=new THREE.AreaLight(H,w)).position.fromArray(S),l.width=p.size,l.height=p.size_y}e.add(l),l.name=u,E.lights[u]=l,E.objects[u]=l}else"PerspectiveCamera"===p.type||"OrthographicCamera"===p.type?(n=p.position,s=p.rotation,c=p.quaternion,"PerspectiveCamera"===p.type?a=new THREE.PerspectiveCamera(p.fov,p.aspect,p.near,p.far):"OrthographicCamera"===p.type&&(a=new THREE.OrthographicCamera(p.left,p.right,p.top,p.bottom,p.near,p.far)),a.name=u,a.position.fromArray(n),void 0!==c?a.quaternion.fromArray(c):void 0!==s&&a.rotation.fromArray(s),e.add(a),E.cameras[u]=a,E.objects[u]=a):(n=p.position,s=p.rotation,h=p.scale,c=p.quaternion,(f=new THREE.Object3D).name=u,f.position.fromArray(n),c?f.quaternion.fromArray(c):f.rotation.fromArray(s),f.scale.fromArray(h),f.visible=void 0!==p.visible&&p.visible,e.add(f),E.objects[u]=f,E.empties[u]=f);if(f){if(void 0!==p.userData)for(var L in p.userData){var P=p.userData[L];f.userData[L]=P}if(void 0!==p.groups)for(x=0;x<p.groups.length;x++){var D=p.groups[x];void 0===E.groups[D]&&(E.groups[D]=[]),E.groups[D].push(u)}}}void 0!==f&&void 0!==p.children&&b(f,p.children)}}function M(e,t,r,i,o){var a=o.position,n=o.rotation,s=o.quaternion,h=o.scale;e.position.fromArray(a),s?e.quaternion.fromArray(s):e.rotation.fromArray(n),e.scale.fromArray(h),i&&e.traverse((function(e){e.material=i}));var l=void 0===o.visible||o.visible;e.traverse((function(e){e.visible=l})),r.add(e),e.name=t,E.objects[t]=e,w()}function S(e){return function(t,r){t.name=e,function(e,t,r){E.geometries[r]=e,E.face_materials[r]=t,w()}(t,r,e),c-=1,d.onLoadComplete(),L()}}function A(e,t,r,i){return function(o){M(o.content?o.content:o.dae?o.scene:o,e,t,r,i),c-=1,d.onLoadComplete(),L()}}function C(e){return function(t,r){t.name=e,E.geometries[e]=t,E.face_materials[e]=r}}function L(){var e={totalModels:f,totalTextures:p,loadedModels:f-c,loadedTextures:p-u};d.callbackProgress(e,E),d.onLoadProgress(),0===c&&0===u&&(!function(){for(var e=0;e<g.length;e++){var t=g[e],r=E.objects[t.targetName];r?t.object.target=r:(t.object.target=new THREE.Object3D,E.scene.add(t.object.target)),t.object.target.userData.targetInverse=t.object}}(),t(E))}var P,D,F,U,V,z,B,N,O,I=function(e){return function(){!function(e){u-=e,L(),d.onLoadComplete()}(e)}};function k(e,t){if(t(e),void 0!==e.children)for(var r in e.children)k(e.children[r],t)}for(P in v.fogs)"linear"===(D=v.fogs[P]).type?n=new THREE.Fog(0,D.near,D.far):"exp2"===D.type&&(n=new THREE.FogExp2(0,D.density)),h=D.color,n.color.setRGB(h[0],h[1],h[2]),E.fogs[P]=n;for(F in v.geometries)(U=v.geometries[F]).type in this.geometryHandlers&&(c+=1,d.onLoadStart());for(var G in v.objects)k(v.objects[G],(function(e){e.type&&e.type in d.hierarchyHandlers&&(c+=1,d.onLoadStart())}));for(F in f=c,v.geometries)if("cube"===(U=v.geometries[F]).type)(i=new THREE.BoxGeometry(U.width,U.height,U.depth,U.widthSegments,U.heightSegments,U.depthSegments)).name=F,E.geometries[F]=i;else if("plane"===U.type)(i=new THREE.PlaneGeometry(U.width,U.height,U.widthSegments,U.heightSegments)).name=F,E.geometries[F]=i;else if("sphere"===U.type)(i=new THREE.SphereGeometry(U.radius,U.widthSegments,U.heightSegments)).name=F,E.geometries[F]=i;else if("cylinder"===U.type)(i=new THREE.CylinderGeometry(U.topRad,U.botRad,U.height,U.radSegs,U.heightSegs)).name=F,E.geometries[F]=i;else if("torus"===U.type)(i=new THREE.TorusGeometry(U.radius,U.tube,U.segmentsR,U.segmentsT)).name=F,E.geometries[F]=i;else if("icosahedron"===U.type)(i=new THREE.IcosahedronGeometry(U.radius,U.subdivisions)).name=F,E.geometries[F]=i;else if(U.type in this.geometryHandlers){var W={};for(var j in U)"type"!==j&&"url"!==j&&(W[j]=U[j]);this.geometryHandlers[U.type].loaderObject.load(_(U.url,v.urlBaseType),S(F),W)}else if("embedded"===U.type){var X=v.embeds[U.id];if(X.metadata=v.metadata,X){var q=this.geometryHandlers.ascii.loaderObject.parse(X,"");C(F)(q.geometry,q.materials)}}for(V in v.textures)if((z=v.textures[V]).url instanceof Array){u+=z.url.length;for(var Y=0;Y<z.url.length;Y++)d.onLoadStart()}else u+=1,d.onLoadStart();for(V in p=u,v.textures){if(void 0!==(z=v.textures[V]).mapping&&void 0!==THREE[z.mapping]&&(z.mapping=new THREE[z.mapping]),z.url instanceof Array){for(var K=z.url.length,Q=[],Z=0;Z<K;Z++)Q[Z]=_(z.url[Z],v.urlBaseType);s=(J=/\.dds$/i.test(Q[0]))?THREE.ImageUtils.loadCompressedTextureCube(Q,z.mapping,I(K)):THREE.ImageUtils.loadTextureCube(Q,z.mapping,I(K))}else{var J=/\.dds$/i.test(z.url),$=_(z.url,v.urlBaseType),ee=I(1);if(s=J?THREE.ImageUtils.loadCompressedTexture($,z.mapping,ee):THREE.ImageUtils.loadTexture($,z.mapping,ee),void 0!==THREE[z.minFilter]&&(s.minFilter=THREE[z.minFilter]),void 0!==THREE[z.magFilter]&&(s.magFilter=THREE[z.magFilter]),z.anisotropy&&(s.anisotropy=z.anisotropy),z.repeat&&(s.repeat.set(z.repeat[0],z.repeat[1]),1!==z.repeat[0]&&(s.wrapS=THREE.RepeatWrapping),1!==z.repeat[1]&&(s.wrapT=THREE.RepeatWrapping)),z.offset&&s.offset.set(z.offset[0],z.offset[1]),z.wrap){var te={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==te[z.wrap[0]]&&(s.wrapS=te[z.wrap[0]]),void 0!==te[z.wrap[1]]&&(s.wrapT=te[z.wrap[1]])}}E.textures[V]=s}for(B in v.materials){for(O in(N=v.materials[B]).parameters)if("envMap"===O||"map"===O||"lightMap"===O||"bumpMap"===O)N.parameters[O]=E.textures[N.parameters[O]];else if("shading"===O)N.parameters[O]="flat"===N.parameters[O]?THREE.FlatShading:THREE.SmoothShading;else if("side"===O)"double"==N.parameters[O]?N.parameters[O]=THREE.DoubleSide:"back"==N.parameters[O]?N.parameters[O]=THREE.BackSide:N.parameters[O]=THREE.FrontSide;else if("blending"===O)N.parameters[O]=N.parameters[O]in THREE?THREE[N.parameters[O]]:THREE.NormalBlending;else if("combine"===O)N.parameters[O]=N.parameters[O]in THREE?THREE[N.parameters[O]]:THREE.MultiplyOperation;else if("vertexColors"===O)"face"==N.parameters[O]?N.parameters[O]=THREE.FaceColors:N.parameters[O]&&(N.parameters[O]=THREE.VertexColors);else if("wrapRGB"===O){var re=N.parameters[O];N.parameters[O]=new THREE.Vector3(re[0],re[1],re[2])}if(void 0!==N.parameters.opacity&&N.parameters.opacity<1&&(N.parameters.transparent=!0),N.parameters.normalMap){var ie=THREE.ShaderLib.normalmap,oe=THREE.UniformsUtils.clone(ie.uniforms),ae=N.parameters.color,ne=N.parameters.specular,se=N.parameters.ambient,he=N.parameters.shininess;oe.tNormal.value=E.textures[N.parameters.normalMap],N.parameters.normalScale&&oe.uNormalScale.value.set(N.parameters.normalScale[0],N.parameters.normalScale[1]),N.parameters.map&&(oe.tDiffuse.value=N.parameters.map,oe.enableDiffuse.value=!0),N.parameters.envMap&&(oe.tCube.value=N.parameters.envMap,oe.enableReflection.value=!0,oe.reflectivity.value=N.parameters.reflectivity),N.parameters.lightMap&&(oe.tAO.value=N.parameters.lightMap,oe.enableAO.value=!0),N.parameters.specularMap&&(oe.tSpecular.value=E.textures[N.parameters.specularMap],oe.enableSpecular.value=!0),N.parameters.displacementMap&&(oe.tDisplacement.value=E.textures[N.parameters.displacementMap],oe.enableDisplacement.value=!0,oe.uDisplacementBias.value=N.parameters.displacementBias,oe.uDisplacementScale.value=N.parameters.displacementScale),oe.diffuse.value.setHex(ae),oe.specular.value.setHex(ne),oe.ambient.value.setHex(se),oe.shininess.value=he,N.parameters.opacity&&(oe.opacity.value=N.parameters.opacity);var le={fragmentShader:ie.fragmentShader,vertexShader:ie.vertexShader,uniforms:oe,lights:!0,fog:!0};o=new THREE.ShaderMaterial(le)}else o=new THREE[N.type](N.parameters);o.name=B,E.materials[B]=o}for(B in v.materials)if((N=v.materials[B]).parameters.materials){var ce=[];for(Z=0;Z<N.parameters.materials.length;Z++){var ue=N.parameters.materials[Z];ce.push(E.materials[ue])}E.materials[B].materials=ce}w(),E.cameras&&v.defaults.camera&&(E.currentCamera=E.cameras[v.defaults.camera]),E.fogs&&v.defaults.fog&&(E.scene.fog=E.fogs[v.defaults.fog]),d.callbackSync(E),L()}},THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,r,i){var o=new THREE.ImageLoader(this.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,(function(e){var r=new THREE.Texture(e);r.needsUpdate=!0,void 0!==t&&t(r)}))},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0!==r){if(t in this){var i=this[t];i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[t]="overdraw"==t?Number(r):r}}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},clone:function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var e=new THREE.MeshFaceMaterial,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e},THREE.ParticleSystemMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleSystemMaterial.prototype.clone=function(){var e=new THREE.ParticleSystemMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial,THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName="position",this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(e)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.rotation=this.rotation,e.fog=this.fog,e},THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial,THREE.Texture=function(e,t,r,i,o,a,n,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==o?o:THREE.LinearFilter,this.minFilter=void 0!==a?a:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==n?n:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update(),this._needsUpdate=e},clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,r,i,o,a,n,s,h,l,c){THREE.Texture.call(this,null,a,n,s,h,l,i,o,c),this.image={width:t,height:r},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,r,i,o,a,n,s,h,l,c){THREE.Texture.call(this,null,a,n,s,h,l,i,o,c),this.image={data:e,width:t,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.ParticleSystemMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var r,i=this.children.length;for(r=0;r<i;r++)this.children[r].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,r){var i,o,a,n,s,h;if(THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0===r||r,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[],this.geometry&&void 0!==this.geometry.bones){for(i=0;i<this.geometry.bones.length;i++)n=(a=this.geometry.bones[i]).pos,s=a.rotq,h=a.scl,(o=this.addBone()).name=a.name,o.position.set(n[0],n[1],n[2]),o.quaternion.set(s[0],s[1],s[2],s[3]),void 0!==h?o.scale.set(h[0],h[1],h[2]):o.scale.set(1,1,1);for(i=0;i<this.bones.length;i++)a=this.geometry.bones[i],o=this.bones[i],-1===a.parent?this.add(o):this.bones[a.parent].add(o);var l,c=this.bones.length;if(this.useVertexTexture)l=c>256?64:c>64?32:c>16?16:8,this.boneTextureWidth=l,this.boneTextureHeight=l,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1;else this.boneMatrices=new Float32Array(16*c);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var e=new THREE.Matrix4;return function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var r=0,i=this.children.length;r<i;r++){var o=this.children[r];o instanceof THREE.Bone?o.update(this.identityMatrix,!1):o.updateMatrixWorld(!0)}if(null==this.boneInverses){this.boneInverses=[];for(var a=0,n=this.bones.length;a<n;a++){var s=new THREE.Matrix4;s.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(s)}}for(a=0,n=this.bones.length;a<n;a++)e.multiplyMatrices(this.bones[a].skinMatrix,this.boneInverses[a]),e.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();r!==1/0?t.multiplyScalar(r):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,r=e.animations,i=/([a-z]+)(\d+)/,o=0,a=e.morphTargets.length;o<a;o++){var n=e.morphTargets[o].name.match(i);if(n&&n.length>1){var s=n[1];n[2];r[s]||(r[s]={start:1/0,end:-1/0});var h=r[s];o<h.start&&(h.start=o),o>h.end&&(h.end=o),t||(t=s)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var r=this.geometry.animations[e];r?(this.setFrameRange(r.start,r.end),this.duration=(r.end-r.start)/t*1e3,this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var r=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);r!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[r]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=r);var i=this.time%t/t;this.directionBackwards&&(i=1-i),this.morphTargetInfluences[this.currentKeyframe]=i,this.morphTargetInfluences[this.lastKeyframe]=1-i},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=0;r<this.objects.length&&!(t<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:t,object:e}),this.add(e)},THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,r=this.objects.length;t<r&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object},THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){if(this.objects.length>1){e.setFromMatrixPosition(r.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var i=e.distanceTo(t);this.objects[0].object.visible=!0;for(var o=1,a=this.objects.length;o<a&&i>=this.objects[o].distance;o++)this.objects[o-1].object.visible=!1,this.objects[o].object.visible=!0;for(;o<a;o++)this.objects[o].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(e){void 0===e&&(e=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,e);for(var t=0,r=this.objects.length;t<r;t++){var i=this.objects[t].object.clone();i.visible=0===t,e.addLevel(i,this.objects[t].distance)}return e},THREE.Sprite=function(){var e=new THREE.Geometry2(3);return e.vertices.set([-.5,-.5,0,.5,-.5,0,.5,.5,0]),function(t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)){this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}this.dispatchEvent({type:"objectAdded",object:e}),e.dispatchEvent({type:"addedToScene",scene:this});for(var r=0;r<e.children.length;r++)this.__addObject(e.children[r])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){if(-1!==(r=this.__lights.indexOf(e))&&this.__lights.splice(r,1),e.shadowCascadeArray)for(var t=0;t<e.shadowCascadeArray.length;t++)this.__removeObject(e.shadowCascadeArray[t])}else if(!(e instanceof THREE.Camera)){var r;this.__objectsRemoved.push(e),-1!==(r=this.__objectsAdded.indexOf(e))&&this.__objectsAdded.splice(r,1)}this.dispatchEvent({type:"objectRemoved",object:e}),e.dispatchEvent({type:"removedFromScene",scene:this});for(var i=0;i<e.children.length;i++)this.__removeObject(e.children[i])},THREE.Scene.prototype.clone=function(e){return void 0===e&&(e=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,e),null!==this.fog&&(e.fog=this.fog.clone()),null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone()),e.autoUpdate=this.autoUpdate,e.matrixAutoUpdate=this.matrixAutoUpdate,e},THREE.Fog=function(e,t,r){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){console.log("THREE.CanvasRenderer",THREE.REVISION);var t=THREE.Math.smoothstep;e=e||{};var r,i,o,a,n,s,h,l,c,u,f,p,E,d,m,g,v,T,y,R,x,H,_,w,b,M,S,A,C,L=this,P=new THREE.Projector,D=void 0!==e.canvas?e.canvas:document.createElement("canvas"),F=D.width,U=D.height,V=Math.floor(F/2),z=Math.floor(U/2),B=D.getContext("2d",{alpha:!0===e.alpha}),N=new THREE.Color(0),O=0,I=1,k=0,G=null,W=null,j=null,X=null,q=null,Y=null,K=0,Q=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),Z=new THREE.Color,J=new THREE.Color,$=new THREE.Color,ee=new THREE.Color,te=new THREE.Color,re=new THREE.Color,ie=new THREE.Color,oe={},ae=new THREE.Box2,ne=new THREE.Box2,se=new THREE.Box2,he=new THREE.Color,le=new THREE.Color,ce=new THREE.Color,ue=new THREE.Vector3,fe=new THREE.Vector3,pe=new THREE.Matrix3,Ee=16;function de(e,t,r){for(var i=0,a=o.length;i<a;i++){var n=o[i];if(ie.copy(n.color),n instanceof THREE.DirectionalLight){var s=ue.setFromMatrixPosition(n.matrixWorld).normalize();if((h=t.dot(s))<=0)continue;h*=n.intensity,r.add(ie.multiplyScalar(h))}else if(n instanceof THREE.PointLight){var h;s=ue.setFromMatrixPosition(n.matrixWorld);if((h=t.dot(ue.subVectors(s,e).normalize()))<=0)continue;if(0==(h*=0==n.distance?1:1-Math.min(e.distanceTo(s)/n.distance,1)))continue;h*=n.intensity,r.add(ie.multiplyScalar(h))}}}function me(e,t,r){Me(r.opacity),Se(r.blending);var i=t.scale.x*V,o=t.scale.y*z,a=.5*Math.sqrt(i*i+o*o);if(se.min.set(e.x-a,e.y-a),se.max.set(e.x+a,e.y+a),r instanceof THREE.SpriteMaterial||r instanceof THREE.ParticleSystemMaterial){var n=r.map;if(null!==n){!1===n.hasEventListener("update",Re)&&(void 0!==n.image&&n.image.width>0&&xe(n),n.addEventListener("update",Re));var s=oe[n.id];De(void 0!==s?s:"rgba( 0, 0, 0, 1 )");var h=n.image,l=h.width*n.offset.x,c=h.height*n.offset.y,u=h.width*n.repeat.x,f=h.height*n.repeat.y,p=i/u,E=o/f;B.save(),B.translate(e.x,e.y),0!==r.rotation&&B.rotate(r.rotation),B.translate(-i/2,-o/2),B.scale(p,E),B.translate(-l,-c),B.fillRect(l,c,u,f),B.restore()}else De(r.color.getStyle()),B.save(),B.translate(e.x,e.y),0!==r.rotation&&B.rotate(r.rotation),B.scale(i,-o),B.fillRect(-.5,-.5,1,1),B.restore()}else r instanceof THREE.SpriteCanvasMaterial&&(Pe(r.color.getStyle()),De(r.color.getStyle()),B.save(),B.translate(e.x,e.y),0!==r.rotation&&B.rotate(r.rotation),B.scale(i,o),r.program(B),B.restore())}function ge(e,t,r,i){if(Me(i.opacity),Se(i.blending),B.beginPath(),B.moveTo(e.positionScreen.x,e.positionScreen.y),B.lineTo(t.positionScreen.x,t.positionScreen.y),i instanceof THREE.LineBasicMaterial){if(Ae(i.linewidth),Ce(i.linecap),Le(i.linejoin),i.vertexColors!==THREE.VertexColors)Pe(i.color.getStyle());else{var o=r.vertexColors[0].getStyle(),a=r.vertexColors[1].getStyle();if(o===a)Pe(o);else{try{var n=B.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);n.addColorStop(0,o),n.addColorStop(1,a)}catch(e){n=o}Pe(n)}}B.stroke(),se.expandByScalar(2*i.linewidth)}else i instanceof THREE.LineDashedMaterial&&(Ae(i.linewidth),Ce(i.linecap),Le(i.linejoin),Pe(i.color.getStyle()),Fe(i.dashSize,i.gapSize),B.stroke(),se.expandByScalar(2*i.linewidth),Fe(null,null))}function ve(e,r,i,o,n,s,h,w){var b,M,S,A,C,P;L.info.render.vertices+=3,L.info.render.faces++,Me(w.opacity),Se(w.blending),l=e.positionScreen.x,c=e.positionScreen.y,u=r.positionScreen.x,f=r.positionScreen.y,p=i.positionScreen.x,E=i.positionScreen.y,b=l,M=c,S=u,A=f,C=p,P=E,B.beginPath(),B.moveTo(b,M),B.lineTo(S,A),B.lineTo(C,P),B.closePath(),(w instanceof THREE.MeshLambertMaterial||w instanceof THREE.MeshPhongMaterial)&&null===w.map?(te.copy(w.color),re.copy(w.emissive),w.vertexColors===THREE.FaceColors&&te.multiply(h.color),!1===w.wireframe&&w.shading===THREE.SmoothShading&&3===h.vertexNormalsLength?(Z.copy(he),J.copy(he),$.copy(he),de(h.v1.positionWorld,h.vertexNormalsModel[0],Z),de(h.v2.positionWorld,h.vertexNormalsModel[1],J),de(h.v3.positionWorld,h.vertexNormalsModel[2],$),Z.multiply(te).add(re),J.multiply(te).add(re),$.multiply(te).add(re),ee.addColors(J,$).multiplyScalar(.5),g=we(Z,J,$,ee),_e(l,c,u,f,p,E,0,0,1,0,0,1,g)):(Q.copy(he),de(h.centroidModel,h.normalModel,Q),Q.multiply(te).add(re),!0===w.wireframe?Te(Q,w.wireframeLinewidth,w.wireframeLinecap,w.wireframeLinejoin):ye(Q))):w instanceof THREE.MeshBasicMaterial||w instanceof THREE.MeshLambertMaterial||w instanceof THREE.MeshPhongMaterial?null!==w.map?w.map.mapping instanceof THREE.UVMapping&&(v=h.uvs[0],He(l,c,u,f,p,E,v[o].x,v[o].y,v[n].x,v[n].y,v[s].x,v[s].y,w.map)):null!==w.envMap?w.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(fe.copy(h.vertexNormalsModel[o]).applyMatrix3(pe),T=.5*fe.x+.5,y=.5*fe.y+.5,fe.copy(h.vertexNormalsModel[n]).applyMatrix3(pe),R=.5*fe.x+.5,x=.5*fe.y+.5,fe.copy(h.vertexNormalsModel[s]).applyMatrix3(pe),H=.5*fe.x+.5,_=.5*fe.y+.5,He(l,c,u,f,p,E,T,y,R,x,H,_,w.envMap)):(Q.copy(w.color),w.vertexColors===THREE.FaceColors&&Q.multiply(h.color),!0===w.wireframe?Te(Q,w.wireframeLinewidth,w.wireframeLinecap,w.wireframeLinejoin):ye(Q)):w instanceof THREE.MeshDepthMaterial?(d=a.near,m=a.far,Z.r=Z.g=Z.b=1-t(e.positionScreen.z*e.positionScreen.w,d,m),J.r=J.g=J.b=1-t(r.positionScreen.z*r.positionScreen.w,d,m),$.r=$.g=$.b=1-t(i.positionScreen.z*i.positionScreen.w,d,m),ee.addColors(J,$).multiplyScalar(.5),g=we(Z,J,$,ee),_e(l,c,u,f,p,E,0,0,1,0,0,1,g)):w instanceof THREE.MeshNormalMaterial&&(w.shading===THREE.FlatShading?(fe.copy(h.normalModel).applyMatrix3(pe),Q.setRGB(fe.x,fe.y,fe.z).multiplyScalar(.5).addScalar(.5),!0===w.wireframe?Te(Q,w.wireframeLinewidth,w.wireframeLinecap,w.wireframeLinejoin):ye(Q)):w.shading===THREE.SmoothShading&&(fe.copy(h.vertexNormalsModel[o]).applyMatrix3(pe),Z.setRGB(fe.x,fe.y,fe.z).multiplyScalar(.5).addScalar(.5),fe.copy(h.vertexNormalsModel[n]).applyMatrix3(pe),J.setRGB(fe.x,fe.y,fe.z).multiplyScalar(.5).addScalar(.5),fe.copy(h.vertexNormalsModel[s]).applyMatrix3(pe),$.setRGB(fe.x,fe.y,fe.z).multiplyScalar(.5).addScalar(.5),ee.addColors(J,$).multiplyScalar(.5),g=we(Z,J,$,ee),_e(l,c,u,f,p,E,0,0,1,0,0,1,g)))}function Te(e,t,r,i){Ae(t),Ce(r),Le(i),Pe(e.getStyle()),B.stroke(),se.expandByScalar(2*t)}function ye(e){De(e.getStyle()),B.fill()}function Re(e){xe(e.target)}function xe(e){var t=e.wrapS===THREE.RepeatWrapping,r=e.wrapT===THREE.RepeatWrapping,i=e.image,o=document.createElement("canvas");o.width=i.width,o.height=i.height;var a=o.getContext("2d");a.setTransform(1,0,0,-1,0,i.height),a.drawImage(i,0,0),oe[e.id]=B.createPattern(o,!0===t&&!0===r?"repeat":!0===t&&!1===r?"repeat-x":!1===t&&!0===r?"repeat-y":"no-repeat")}function He(e,t,r,i,o,a,n,s,h,l,c,u,f){if(!(f instanceof THREE.DataTexture)){!1===f.hasEventListener("update",Re)&&(void 0!==f.image&&f.image.width>0&&xe(f),f.addEventListener("update",Re));var p=oe[f.id];if(void 0===p)return De("rgba(0,0,0,1)"),void B.fill();De(p);var E,d,m,g,v,T,y,R,x=f.offset.x/f.repeat.x,H=f.offset.y/f.repeat.y,_=f.image.width*f.repeat.x,w=f.image.height*f.repeat.y;h=(h+x)*_,l=(l+H)*w,c=(c+x)*_,u=(u+H)*w,r-=e,i-=t,o-=e,a-=t,0!==(y=(h-=n=(n+x)*_)*(u-=s=(s+H)*w)-(c-=n)*(l-=s))&&(v=e-(E=(u*r-l*o)*(R=1/y))*n-(m=(h*o-c*r)*R)*s,T=t-(d=(u*i-l*a)*R)*n-(g=(h*a-c*i)*R)*s,B.save(),B.transform(E,d,m,g,v,T),B.fill(),B.restore())}}function _e(e,t,r,i,o,a,n,s,h,l,c,u,f){var p,E,d,m,g,v,T,y=f.width-1,R=f.height-1;h*=y,l*=R,c*=y,u*=R,g=e-(p=((u-=s*=R)*(r-=e)-(l-=s)*(o-=e))*(T=1/((h-=n*=y)*u-(c-=n)*l)))*n-(d=(h*o-c*r)*T)*s,v=t-(E=(u*(i-=t)-l*(a-=t))*T)*n-(m=(h*a-c*i)*T)*s,B.save(),B.transform(p,E,d,m,g,v),B.clip(),B.drawImage(f,0,0),B.restore()}function we(e,t,r,i){return S[0]=255*e.r|0,S[1]=255*e.g|0,S[2]=255*e.b|0,S[4]=255*t.r|0,S[5]=255*t.g|0,S[6]=255*t.b|0,S[8]=255*r.r|0,S[9]=255*r.g|0,S[10]=255*r.b|0,S[12]=255*i.r|0,S[13]=255*i.g|0,S[14]=255*i.b|0,b.putImageData(M,0,0),C.drawImage(w,0,0),A}function be(e,t,r){var i,o=t.x-e.x,a=t.y-e.y,n=o*o+a*a;0!==n&&(o*=i=r/Math.sqrt(n),a*=i,t.x+=o,t.y+=a,e.x-=o,e.y-=a)}function Me(e){I!==e&&(B.globalAlpha=e,I=e)}function Se(e){k!==e&&(e===THREE.NormalBlending?B.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?B.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(B.globalCompositeOperation="darker"),k=e)}function Ae(e){j!==e&&(B.lineWidth=e,j=e)}function Ce(e){X!==e&&(B.lineCap=e,X=e)}function Le(e){q!==e&&(B.lineJoin=e,q=e)}function Pe(e){G!==e&&(B.strokeStyle=e,G=e)}function De(e){W!==e&&(B.fillStyle=e,W=e)}function Fe(e,t){Y===e&&K===t||(B.setLineDash([e,t]),Y=e,K=t)}(w=document.createElement("canvas")).width=w.height=2,(b=w.getContext("2d")).fillStyle="rgba(0,0,0,1)",b.fillRect(0,0,2,2),M=b.getImageData(0,0,2,2),S=M.data,(A=document.createElement("canvas")).width=A.height=Ee,(C=A.getContext("2d")).translate(-Ee/2,-Ee/2),C.scale(Ee,Ee),Ee--,void 0===B.setLineDash&&(void 0!==B.mozDash?B.setLineDash=function(e){B.mozDash=null!==e[0]?e:null}:B.setLineDash=function(){}),this.domElement=D,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t,r){F=e*this.devicePixelRatio,U=t*this.devicePixelRatio,V=Math.floor(F/2),z=Math.floor(U/2),D.width=F,D.height=U,1!==this.devicePixelRatio&&!1!==r&&(D.style.width=e+"px",D.style.height=t+"px"),ae.min.set(-V,-z),ae.max.set(V,z),ne.min.set(-V,-z),ne.max.set(V,z),I=1,k=0,G=null,W=null,j=null,X=null,q=null},this.setClearColor=function(e,t){N.set(e),O=void 0!==t?t:1,ne.min.set(-V,-z),ne.max.set(V,z)},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){B.setTransform(1,0,0,-1,V,z),!1===ne.empty()&&(ne.intersect(ae),ne.expandByScalar(2),O<1&&B.clearRect(0|ne.min.x,0|ne.min.y,ne.max.x-ne.min.x|0,ne.max.y-ne.min.y|0),O>0&&(Se(THREE.NormalBlending),Me(1),De("rgba("+Math.floor(255*N.r)+","+Math.floor(255*N.g)+","+Math.floor(255*N.b)+","+O+")"),B.fillRect(0|ne.min.x,0|ne.min.y,ne.max.x-ne.min.x|0,ne.max.y-ne.min.y|0)),ne.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(e,t){if(t instanceof THREE.Camera!=!1){!0===this.autoClear&&this.clear(),B.setTransform(1,0,0,-1,V,z),L.info.render.vertices=0,L.info.render.faces=0,r=P.projectScene(e,t,this.sortObjects,this.sortElements),i=r.elements,o=r.lights,a=t,pe.getNormalMatrix(t.matrixWorldInverse),function(){he.setRGB(0,0,0),le.setRGB(0,0,0),ce.setRGB(0,0,0);for(var e=0,t=o.length;e<t;e++){var r=o[e],i=r.color;r instanceof THREE.AmbientLight?he.add(i):r instanceof THREE.DirectionalLight?le.add(i):r instanceof THREE.PointLight&&ce.add(i)}}();for(var l=0,c=i.length;l<c;l++){var u=i[l],f=u.material;if(void 0!==f&&!1!==f.visible){if(se.makeEmpty(),u instanceof THREE.RenderableSprite)(n=u).x*=V,n.y*=z,me(n,u,f);else if(u instanceof THREE.RenderableLine)n=u.v1,s=u.v2,n.positionScreen.x*=V,n.positionScreen.y*=z,s.positionScreen.x*=V,s.positionScreen.y*=z,se.setFromPoints([n.positionScreen,s.positionScreen]),!0===ae.isIntersectionBox(se)&&ge(n,s,u,f);else if(u instanceof THREE.RenderableFace){if(n=u.v1,s=u.v2,h=u.v3,n.positionScreen.z<-1||n.positionScreen.z>1)continue;if(s.positionScreen.z<-1||s.positionScreen.z>1)continue;if(h.positionScreen.z<-1||h.positionScreen.z>1)continue;n.positionScreen.x*=V,n.positionScreen.y*=z,s.positionScreen.x*=V,s.positionScreen.y*=z,h.positionScreen.x*=V,h.positionScreen.y*=z,f.overdraw>0&&(be(n.positionScreen,s.positionScreen,f.overdraw),be(s.positionScreen,h.positionScreen,f.overdraw),be(h.positionScreen,n.positionScreen,f.overdraw)),se.setFromPoints([n.positionScreen,s.positionScreen,h.positionScreen]),!0===ae.isIntersectionBox(se)&&ve(n,s,h,0,1,2,u,f)}ne.union(se)}}B.setTransform(1,0,0,1,0,0)}else console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.")}},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -vViewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","uniform int boneTextureWidth;","uniform int boneTextureHeight;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, float( boneTextureWidth ) );","float y = floor( j / float( boneTextureWidth ) );","float dx = 1.0 / float( boneTextureWidth );","float dy = 1.0 / float( boneTextureHeight );","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","mat4 boneMatZ = getBoneMatrix( skinIndex.z );","mat4 boneMatW = getBoneMatrix( skinIndex.w );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned      += boneMatY * skinVertex * skinWeight.y;","skinned      += boneMatZ * skinVertex * skinWeight.z;","skinned      += boneMatW * skinVertex * skinWeight.w;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix \t+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","vec3 shadowZ = vec3( shadowCoord.z );","shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));","shadowKernel[0] *= vec3(0.25);","shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));","shadowKernel[1] *= vec3(0.25);","shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));","shadowKernel[2] *= vec3(0.25);","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsUtils={merge:function(e){var t,r,i,o={};for(t=0;t<e.length;t++)for(r in i=this.clone(e[t]))o[r]=i[r];return o},clone:function(e){var t,r,i,o={};for(t in e)for(r in o[t]={},e[t])(i=e[t][r])instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?o[t][r]=i.clone():o[t][r]=i instanceof Array?i.slice():i;return o}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {","vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float refractionRatio;","uniform float reflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), opacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.WebGLRenderer=function(e){console.log("THREE.WebGLRenderer",THREE.REVISION);var t=void 0!==(e=e||{}).canvas?e.canvas:document.createElement("canvas"),r=void 0!==e.context?e.context:null,i=void 0!==e.precision?e.precision:"highp",o=void 0!==e.alpha&&e.alpha,a=void 0===e.premultipliedAlpha||e.premultipliedAlpha,n=void 0!==e.antialias&&e.antialias,s=void 0===e.stencil||e.stencil,h=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,l=new THREE.Color(0),c=0;this.domElement=t,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var u,f,p,E,d,m=this,g=[],v=0,T=null,y=null,R=-1,x=null,H=null,_=0,w=-1,b=-1,M=-1,S=-1,A=-1,C=-1,L=-1,P=-1,D=null,F=null,U=null,V=null,z=0,B=0,N=t.width,O=t.height,I=0,k=0,G=new Uint8Array(16),W=new THREE.Frustum,j=new THREE.Matrix4,X=new THREE.Matrix4,q=new THREE.Vector3,Y=new THREE.Vector3,K=!0,Q={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}};!function(){try{var e={alpha:o,premultipliedAlpha:a,antialias:n,stencil:s,preserveDrawingBuffer:h};if(null===(u=r||t.getContext("webgl",e)||t.getContext("experimental-webgl",e)))throw"Error creating WebGL context."}catch(e){console.error(e)}f=u.getExtension("OES_texture_float"),u.getExtension("OES_texture_float_linear"),p=u.getExtension("OES_standard_derivatives"),E=u.getExtension("EXT_texture_filter_anisotropic")||u.getExtension("MOZ_EXT_texture_filter_anisotropic")||u.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),d=u.getExtension("WEBGL_compressed_texture_s3tc")||u.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||u.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),f||console.log("THREE.WebGLRenderer: Float textures not supported.");p||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");E||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");d||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");void 0===u.getShaderPrecisionFormat&&(u.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}(),u.clearColor(0,0,0,1),u.clearDepth(1),u.clearStencil(0),u.enable(u.DEPTH_TEST),u.depthFunc(u.LEQUAL),u.frontFace(u.CCW),u.cullFace(u.BACK),u.enable(u.CULL_FACE),u.enable(u.BLEND),u.blendEquation(u.FUNC_ADD),u.blendFunc(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA),u.viewport(z,B,N,O),u.clearColor(l.r,l.g,l.b,c),this.context=u;var Z=u.getParameter(u.MAX_TEXTURE_IMAGE_UNITS),J=u.getParameter(u.MAX_VERTEX_TEXTURE_IMAGE_UNITS),$=(u.getParameter(u.MAX_TEXTURE_SIZE),u.getParameter(u.MAX_CUBE_MAP_TEXTURE_SIZE)),ee=E?u.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,te=J>0,re=te&&f,ie=(d&&u.getParameter(u.COMPRESSED_TEXTURE_FORMATS),u.getShaderPrecisionFormat(u.VERTEX_SHADER,u.HIGH_FLOAT)),oe=u.getShaderPrecisionFormat(u.VERTEX_SHADER,u.MEDIUM_FLOAT),ae=(u.getShaderPrecisionFormat(u.VERTEX_SHADER,u.LOW_FLOAT),u.getShaderPrecisionFormat(u.FRAGMENT_SHADER,u.HIGH_FLOAT)),ne=u.getShaderPrecisionFormat(u.FRAGMENT_SHADER,u.MEDIUM_FLOAT),se=(u.getShaderPrecisionFormat(u.FRAGMENT_SHADER,u.LOW_FLOAT),u.getShaderPrecisionFormat(u.VERTEX_SHADER,u.HIGH_INT),u.getShaderPrecisionFormat(u.VERTEX_SHADER,u.MEDIUM_INT),u.getShaderPrecisionFormat(u.VERTEX_SHADER,u.LOW_INT),u.getShaderPrecisionFormat(u.FRAGMENT_SHADER,u.HIGH_INT),u.getShaderPrecisionFormat(u.FRAGMENT_SHADER,u.MEDIUM_INT),u.getShaderPrecisionFormat(u.FRAGMENT_SHADER,u.LOW_INT),ie.precision>0&&ae.precision>0),he=oe.precision>0&&ne.precision>0;function le(e){var t,r;if(e.__webglVertexBuffer=u.createBuffer(),e.__webglNormalBuffer=u.createBuffer(),e.__webglTangentBuffer=u.createBuffer(),e.__webglColorBuffer=u.createBuffer(),e.__webglUVBuffer=u.createBuffer(),e.__webglUV2Buffer=u.createBuffer(),e.__webglSkinIndicesBuffer=u.createBuffer(),e.__webglSkinWeightsBuffer=u.createBuffer(),e.__webglFaceBuffer=u.createBuffer(),e.__webglLineBuffer=u.createBuffer(),e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],t=0,r=e.numMorphTargets;t<r;t++)e.__webglMorphTargetsBuffers.push(u.createBuffer());if(e.numMorphNormals)for(e.__webglMorphNormalsBuffers=[],t=0,r=e.numMorphNormals;t<r;t++)e.__webglMorphNormalsBuffers.push(u.createBuffer());m.info.memory.geometries++}"highp"!==i||se||(he?(i="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(i="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==i||he||(i="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return u},this.supportsVertexTextures=function(){return te},this.supportsFloatTextures=function(){return f},this.supportsStandardDerivatives=function(){return p},this.supportsCompressedTextureS3TC=function(){return d},this.getMaxAnisotropy=function(){return ee},this.getPrecision=function(){return i},this.setSize=function(e,r,i){t.width=e*this.devicePixelRatio,t.height=r*this.devicePixelRatio,1!==this.devicePixelRatio&&!1!==i&&(t.style.width=e+"px",t.style.height=r+"px"),this.setViewport(0,0,e,r)},this.setViewport=function(e,t,r,i){z=e*this.devicePixelRatio,B=t*this.devicePixelRatio,N=r*this.devicePixelRatio,O=i*this.devicePixelRatio,u.viewport(z,B,N,O)},this.setScissor=function(e,t,r,i){u.scissor(e*this.devicePixelRatio,t*this.devicePixelRatio,r*this.devicePixelRatio,i*this.devicePixelRatio)},this.enableScissorTest=function(e){e?u.enable(u.SCISSOR_TEST):u.disable(u.SCISSOR_TEST)},this.setClearColor=function(e,t){l.set(e),c=void 0!==t?t:1,u.clearColor(l.r,l.g,l.b,c)},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getClearColor=function(){return l},this.getClearAlpha=function(){return c},this.clear=function(e,t,r){var i=0;(void 0===e||e)&&(i|=u.COLOR_BUFFER_BIT),(void 0===t||t)&&(i|=u.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=u.STENCIL_BUFFER_BIT),u.clear(i)},this.clearColor=function(){u.clear(u.COLOR_BUFFER_BIT)},this.clearDepth=function(){u.clear(u.DEPTH_BUFFER_BIT)},this.clearStencil=function(){u.clear(u.STENCIL_BUFFER_BIT)},this.clearTarget=function(e,t,r,i){this.setRenderTarget(e),this.clear(t,r,i)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){T=null,M=-1,L=-1,P=-1,x=-1,R=-1,K=!0,w=-1,b=-1,this.shadowMapPlugin.update(e,t)};var ce=function(e){var t=e.target;t.removeEventListener("dispose",ce),de(t)},ue=function(e){var t=e.target;t.removeEventListener("dispose",ue),me(t),m.info.memory.textures--},fe=function(e){var t=e.target;t.removeEventListener("dispose",fe),ge(t),m.info.memory.textures--},pe=function(e){var t=e.target;t.removeEventListener("dispose",pe),ve(t)},Ee=function(e){if(void 0!==e.__webglVertexBuffer&&u.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&u.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&u.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&u.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&u.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&u.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&u.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&u.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&u.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&u.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&u.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)u.deleteBuffer(e.__webglCustomAttributesList[t].buffer);m.info.memory.geometries--},de=function(e){if(e.__webglInit=void 0,e instanceof THREE.BufferGeometry){var t=e.attributes;for(var r in t)void 0!==t[r].buffer&&u.deleteBuffer(t[r].buffer);m.info.memory.geometries--}else if(void 0!==e.geometryGroups)for(var i in e.geometryGroups){var o=e.geometryGroups[i];if(void 0!==o.numMorphTargets)for(var a=0,n=o.numMorphTargets;a<n;a++)u.deleteBuffer(o.__webglMorphTargetsBuffers[a]);if(void 0!==o.numMorphNormals)for(a=0,n=o.numMorphNormals;a<n;a++)u.deleteBuffer(o.__webglMorphNormalsBuffers[a]);Ee(o)}else Ee(e)},me=function(e){if(e.image&&e.image.__webglTextureCube)u.deleteTexture(e.image.__webglTextureCube);else{if(!e.__webglInit)return;e.__webglInit=!1,u.deleteTexture(e.__webglTexture)}},ge=function(e){if(e&&e.__webglTexture)if(u.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;t<6;t++)u.deleteFramebuffer(e.__webglFramebuffer[t]),u.deleteRenderbuffer(e.__webglRenderbuffer[t]);else u.deleteFramebuffer(e.__webglFramebuffer),u.deleteRenderbuffer(e.__webglRenderbuffer)},ve=function(e){var t=e.program;if(void 0!==t){var r,i,o;e.program=void 0;var a=!1;for(r=0,i=g.length;r<i;r++)if((o=g[r]).program===t){o.usedTimes--,0===o.usedTimes&&(a=!0);break}if(!0===a){var n=[];for(r=0,i=g.length;r<i;r++)(o=g[r]).program!==t&&n.push(o);g=n,u.deleteProgram(t),m.info.memory.programs--}}};function Te(e,t){var r=e.vertices.length,i=t.material;if(i.attributes)for(var o in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),i.attributes){var a=i.attributes[o];if(!a.__webglInitialized||a.createUniqueBuffers){a.__webglInitialized=!0;var n=1;"v2"===a.type?n=2:"v3"===a.type?n=3:"v4"===a.type?n=4:"c"===a.type&&(n=3),a.size=n,a.array=new Float32Array(r*n),a.buffer=u.createBuffer(),a.buffer.belongsToAttribute=o,a.needsUpdate=!0}e.__webglCustomAttributesList.push(a)}}function ye(e,t){var r,i,o=t.geometry,a=e.faces3,n=3*a.length,s=1*a.length,h=3*a.length,l=Re(t,e),c=_e(l),f=xe(l),p=He(l);if(e.__vertexArray=new Float32Array(3*n),f&&(e.__normalArray=new Float32Array(3*n)),o.hasTangents&&(e.__tangentArray=new Float32Array(4*n)),p&&(e.__colorArray=new Float32Array(3*n)),c&&(o.faceVertexUvs.length>0&&(e.__uvArray=new Float32Array(2*n)),o.faceVertexUvs.length>1&&(e.__uv2Array=new Float32Array(2*n))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*n),e.__skinWeightArray=new Float32Array(4*n)),e.__faceArray=new Uint16Array(3*s),e.__lineArray=new Uint16Array(2*h),e.numMorphTargets)for(e.__morphTargetsArrays=[],r=0,i=e.numMorphTargets;r<i;r++)e.__morphTargetsArrays.push(new Float32Array(3*n));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],r=0,i=e.numMorphNormals;r<i;r++)e.__morphNormalsArrays.push(new Float32Array(3*n));if(e.__webglFaceCount=3*s,e.__webglLineCount=2*h,l.attributes)for(var E in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),l.attributes){var d=l.attributes[E],m={};for(var g in d)m[g]=d[g];if(!m.__webglInitialized||m.createUniqueBuffers){m.__webglInitialized=!0;var v=1;"v2"===m.type?v=2:"v3"===m.type?v=3:"v4"===m.type?v=4:"c"===m.type&&(v=3),m.size=v,m.array=new Float32Array(n*v),m.buffer=u.createBuffer(),m.buffer.belongsToAttribute=E,d.needsUpdate=!0,m.__original=d}e.__webglCustomAttributesList.push(m)}e.__inittedArrays=!0}function Re(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function xe(e){return!(e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial)&&(function(e){return e&&void 0!==e.shading&&e.shading===THREE.SmoothShading}(e)?THREE.SmoothShading:THREE.FlatShading)}function He(e){return!!e.vertexColors&&e.vertexColors}function _e(e){return!!(e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial)}function we(e,t,r,i,o){if(e.__inittedArrays){var a,n,s,h,l,c,f,p,E,d,m,g,v,T,y,R,x,H,_,w,b,M,S,A,C,L,P,D,F,U,V,z,B,N,O,I,k,G,W,j,X,q=xe(o),Y=He(o),K=_e(o),Q=q===THREE.SmoothShading,Z=0,J=0,$=0,ee=0,te=0,re=0,ie=0,oe=0,ae=0,ne=0,se=0,he=0,le=e.__vertexArray,ce=e.__uvArray,ue=e.__uv2Array,fe=e.__normalArray,pe=e.__tangentArray,Ee=e.__colorArray,de=e.__skinIndexArray,me=e.__skinWeightArray,ge=e.__morphTargetsArrays,ve=e.__morphNormalsArrays,Te=e.__webglCustomAttributesList,ye=e.__faceArray,Re=e.__lineArray,we=t.geometry,be=we.verticesNeedUpdate,Me=we.elementsNeedUpdate,Se=we.uvsNeedUpdate,Ae=we.normalsNeedUpdate,Ce=we.tangentsNeedUpdate,Le=we.colorsNeedUpdate,Pe=we.morphTargetsNeedUpdate,De=we.vertices,Fe=e.faces3,Ue=we.faces,Ve=we.faceVertexUvs[0],ze=we.faceVertexUvs[1],Be=(we.colors,we.skinIndices),Ne=we.skinWeights,Oe=we.morphTargets,Ie=we.morphNormals;if(be){for(a=0,n=Fe.length;a<n;a++)m=De[(s=Ue[Fe[a]]).a],g=De[s.b],v=De[s.c],le[J]=m.x,le[J+1]=m.y,le[J+2]=m.z,le[J+3]=g.x,le[J+4]=g.y,le[J+5]=g.z,le[J+6]=v.x,le[J+7]=v.y,le[J+8]=v.z,J+=9;u.bindBuffer(u.ARRAY_BUFFER,e.__webglVertexBuffer),u.bufferData(u.ARRAY_BUFFER,le,r)}if(Pe)for(N=0,O=Oe.length;N<O;N++){for(se=0,a=0,n=Fe.length;a<n;a++)s=Ue[G=Fe[a]],m=Oe[N].vertices[s.a],g=Oe[N].vertices[s.b],v=Oe[N].vertices[s.c],(I=ge[N])[se]=m.x,I[se+1]=m.y,I[se+2]=m.z,I[se+3]=g.x,I[se+4]=g.y,I[se+5]=g.z,I[se+6]=v.x,I[se+7]=v.y,I[se+8]=v.z,o.morphNormals&&(Q?(x=(W=Ie[N].vertexNormals[G]).a,H=W.b,_=W.c):(H=x=Ie[N].faceNormals[G],_=x),(k=ve[N])[se]=x.x,k[se+1]=x.y,k[se+2]=x.z,k[se+3]=H.x,k[se+4]=H.y,k[se+5]=H.z,k[se+6]=_.x,k[se+7]=_.y,k[se+8]=_.z),se+=9;u.bindBuffer(u.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[N]),u.bufferData(u.ARRAY_BUFFER,ge[N],r),o.morphNormals&&(u.bindBuffer(u.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[N]),u.bufferData(u.ARRAY_BUFFER,ve[N],r))}if(Ne.length){for(a=0,n=Fe.length;a<n;a++)S=Ne[(s=Ue[Fe[a]]).a],A=Ne[s.b],C=Ne[s.c],me[ne]=S.x,me[ne+1]=S.y,me[ne+2]=S.z,me[ne+3]=S.w,me[ne+4]=A.x,me[ne+5]=A.y,me[ne+6]=A.z,me[ne+7]=A.w,me[ne+8]=C.x,me[ne+9]=C.y,me[ne+10]=C.z,me[ne+11]=C.w,L=Be[s.a],P=Be[s.b],D=Be[s.c],de[ne]=L.x,de[ne+1]=L.y,de[ne+2]=L.z,de[ne+3]=L.w,de[ne+4]=P.x,de[ne+5]=P.y,de[ne+6]=P.z,de[ne+7]=P.w,de[ne+8]=D.x,de[ne+9]=D.y,de[ne+10]=D.z,de[ne+11]=D.w,ne+=12;ne>0&&(u.bindBuffer(u.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),u.bufferData(u.ARRAY_BUFFER,de,r),u.bindBuffer(u.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),u.bufferData(u.ARRAY_BUFFER,me,r))}if(Le&&Y){for(a=0,n=Fe.length;a<n;a++)c=(s=Ue[Fe[a]]).vertexColors,f=s.color,3===c.length&&Y===THREE.VertexColors?(w=c[0],b=c[1],M=c[2]):(w=f,b=f,M=f),Ee[ae]=w.r,Ee[ae+1]=w.g,Ee[ae+2]=w.b,Ee[ae+3]=b.r,Ee[ae+4]=b.g,Ee[ae+5]=b.b,Ee[ae+6]=M.r,Ee[ae+7]=M.g,Ee[ae+8]=M.b,ae+=9;ae>0&&(u.bindBuffer(u.ARRAY_BUFFER,e.__webglColorBuffer),u.bufferData(u.ARRAY_BUFFER,Ee,r))}if(Ce&&we.hasTangents){for(a=0,n=Fe.length;a<n;a++)T=(p=(s=Ue[Fe[a]]).vertexTangents)[0],y=p[1],R=p[2],pe[ie]=T.x,pe[ie+1]=T.y,pe[ie+2]=T.z,pe[ie+3]=T.w,pe[ie+4]=y.x,pe[ie+5]=y.y,pe[ie+6]=y.z,pe[ie+7]=y.w,pe[ie+8]=R.x,pe[ie+9]=R.y,pe[ie+10]=R.z,pe[ie+11]=R.w,ie+=12;u.bindBuffer(u.ARRAY_BUFFER,e.__webglTangentBuffer),u.bufferData(u.ARRAY_BUFFER,pe,r)}if(Ae&&q){for(a=0,n=Fe.length;a<n;a++)if(h=(s=Ue[Fe[a]]).vertexNormals,l=s.normal,3===h.length&&Q)for(F=0;F<3;F++)V=h[F],fe[re]=V.x,fe[re+1]=V.y,fe[re+2]=V.z,re+=3;else for(F=0;F<3;F++)fe[re]=l.x,fe[re+1]=l.y,fe[re+2]=l.z,re+=3;u.bindBuffer(u.ARRAY_BUFFER,e.__webglNormalBuffer),u.bufferData(u.ARRAY_BUFFER,fe,r)}if(Se&&Ve&&K){for(a=0,n=Fe.length;a<n;a++)if(void 0!==(E=Ve[Fe[a]]))for(F=0;F<3;F++)z=E[F],ce[$]=z.x,ce[$+1]=z.y,$+=2;$>0&&(u.bindBuffer(u.ARRAY_BUFFER,e.__webglUVBuffer),u.bufferData(u.ARRAY_BUFFER,ce,r))}if(Se&&ze&&K){for(a=0,n=Fe.length;a<n;a++)if(void 0!==(d=ze[Fe[a]]))for(F=0;F<3;F++)B=d[F],ue[ee]=B.x,ue[ee+1]=B.y,ee+=2;ee>0&&(u.bindBuffer(u.ARRAY_BUFFER,e.__webglUV2Buffer),u.bufferData(u.ARRAY_BUFFER,ue,r))}if(Me){for(a=0,n=Fe.length;a<n;a++)ye[te]=Z,ye[te+1]=Z+1,ye[te+2]=Z+2,te+=3,Re[oe]=Z,Re[oe+1]=Z+1,Re[oe+2]=Z,Re[oe+3]=Z+2,Re[oe+4]=Z+1,Re[oe+5]=Z+2,oe+=6,Z+=3;u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),u.bufferData(u.ELEMENT_ARRAY_BUFFER,ye,r),u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),u.bufferData(u.ELEMENT_ARRAY_BUFFER,Re,r)}if(Te)for(F=0,U=Te.length;F<U;F++)if((X=Te[F]).__original.needsUpdate){if(he=0,0,1===X.size){if(void 0===X.boundTo||"vertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)s=Ue[Fe[a]],X.array[he]=X.value[s.a],X.array[he+1]=X.value[s.b],X.array[he+2]=X.value[s.c],he+=3;else if("faces"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)j=X.value[Fe[a]],X.array[he]=j,X.array[he+1]=j,X.array[he+2]=j,he+=3}else if(2===X.size){if(void 0===X.boundTo||"vertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)s=Ue[Fe[a]],m=X.value[s.a],g=X.value[s.b],v=X.value[s.c],X.array[he]=m.x,X.array[he+1]=m.y,X.array[he+2]=g.x,X.array[he+3]=g.y,X.array[he+4]=v.x,X.array[he+5]=v.y,he+=6;else if("faces"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)m=j=X.value[Fe[a]],g=j,v=j,X.array[he]=m.x,X.array[he+1]=m.y,X.array[he+2]=g.x,X.array[he+3]=g.y,X.array[he+4]=v.x,X.array[he+5]=v.y,he+=6}else if(3===X.size){var ke;if(ke="c"===X.type?["r","g","b"]:["x","y","z"],void 0===X.boundTo||"vertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)s=Ue[Fe[a]],m=X.value[s.a],g=X.value[s.b],v=X.value[s.c],X.array[he]=m[ke[0]],X.array[he+1]=m[ke[1]],X.array[he+2]=m[ke[2]],X.array[he+3]=g[ke[0]],X.array[he+4]=g[ke[1]],X.array[he+5]=g[ke[2]],X.array[he+6]=v[ke[0]],X.array[he+7]=v[ke[1]],X.array[he+8]=v[ke[2]],he+=9;else if("faces"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)m=j=X.value[Fe[a]],g=j,v=j,X.array[he]=m[ke[0]],X.array[he+1]=m[ke[1]],X.array[he+2]=m[ke[2]],X.array[he+3]=g[ke[0]],X.array[he+4]=g[ke[1]],X.array[he+5]=g[ke[2]],X.array[he+6]=v[ke[0]],X.array[he+7]=v[ke[1]],X.array[he+8]=v[ke[2]],he+=9;else if("faceVertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)m=(j=X.value[Fe[a]])[0],g=j[1],v=j[2],X.array[he]=m[ke[0]],X.array[he+1]=m[ke[1]],X.array[he+2]=m[ke[2]],X.array[he+3]=g[ke[0]],X.array[he+4]=g[ke[1]],X.array[he+5]=g[ke[2]],X.array[he+6]=v[ke[0]],X.array[he+7]=v[ke[1]],X.array[he+8]=v[ke[2]],he+=9}else if(4===X.size)if(void 0===X.boundTo||"vertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)s=Ue[Fe[a]],m=X.value[s.a],g=X.value[s.b],v=X.value[s.c],X.array[he]=m.x,X.array[he+1]=m.y,X.array[he+2]=m.z,X.array[he+3]=m.w,X.array[he+4]=g.x,X.array[he+5]=g.y,X.array[he+6]=g.z,X.array[he+7]=g.w,X.array[he+8]=v.x,X.array[he+9]=v.y,X.array[he+10]=v.z,X.array[he+11]=v.w,he+=12;else if("faces"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)m=j=X.value[Fe[a]],g=j,v=j,X.array[he]=m.x,X.array[he+1]=m.y,X.array[he+2]=m.z,X.array[he+3]=m.w,X.array[he+4]=g.x,X.array[he+5]=g.y,X.array[he+6]=g.z,X.array[he+7]=g.w,X.array[he+8]=v.x,X.array[he+9]=v.y,X.array[he+10]=v.z,X.array[he+11]=v.w,he+=12;else if("faceVertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)m=(j=X.value[Fe[a]])[0],g=j[1],v=j[2],X.array[he]=m.x,X.array[he+1]=m.y,X.array[he+2]=m.z,X.array[he+3]=m.w,X.array[he+4]=g.x,X.array[he+5]=g.y,X.array[he+6]=g.z,X.array[he+7]=g.w,X.array[he+8]=v.x,X.array[he+9]=v.y,X.array[he+10]=v.z,X.array[he+11]=v.w,he+=12;u.bindBuffer(u.ARRAY_BUFFER,X.buffer),u.bufferData(u.ARRAY_BUFFER,X.array,r)}i&&(delete e.__inittedArrays,delete e.__colorArray,delete e.__normalArray,delete e.__tangentArray,delete e.__uvArray,delete e.__uv2Array,delete e.__faceArray,delete e.__vertexArray,delete e.__lineArray,delete e.__skinIndexArray,delete e.__skinWeightArray)}}function be(e,t,r,i){var o,a,n,s;for(a in t)n=t[a],o=r[a],n>=0&&(o?(s=o.itemSize,u.bindBuffer(u.ARRAY_BUFFER,o.buffer),Me(n),u.vertexAttribPointer(n,s,u.FLOAT,!1,0,i*s*4)):e.defaultAttributeValues&&(2===e.defaultAttributeValues[a].length?u.vertexAttrib2fv(n,e.defaultAttributeValues[a]):3===e.defaultAttributeValues[a].length&&u.vertexAttrib3fv(n,e.defaultAttributeValues[a])))}function Me(e){0===G[e]&&(u.enableVertexAttribArray(e),G[e]=1)}function Se(){for(var e in G)1===G[e]&&(u.disableVertexAttribArray(e),G[e]=0)}function Ae(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function Ce(e,t){return t[0]-e[0]}function Le(e,t,r){if(e.length)for(var i=0,o=e.length;i<o;i++)T=null,H=null,M=-1,L=-1,P=-1,w=-1,b=-1,x=-1,R=-1,K=!0,e[i].render(t,r,I,k),T=null,H=null,M=-1,L=-1,P=-1,w=-1,b=-1,x=-1,R=-1,K=!0}function Pe(e,t,r,i,o,a,n,s){var h,l,c,u,f,p,E;t?(f=e.length-1,p=-1,E=-1):(f=0,p=e.length,E=1);for(var d=f;d!==p;d+=E)if((h=e[d]).render){if(l=h.object,c=h.buffer,s)u=s;else{if(!(u=h[r]))continue;n&&m.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),m.setDepthTest(u.depthTest),m.setDepthWrite(u.depthWrite),Ze(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}m.setMaterialFaces(u),c instanceof THREE.BufferGeometry?m.renderBufferDirect(i,o,a,u,c,l):m.renderBuffer(i,o,a,u,c,l)}}function De(e,t,r,i,o,a,n){for(var s,h,l,c=0,u=e.length;c<u;c++)if((h=(s=e[c]).object).visible){if(n)l=n;else{if(!(l=s[t]))continue;a&&m.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),m.setDepthTest(l.depthTest),m.setDepthWrite(l.depthWrite),Ze(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}m.renderImmediateObject(r,i,o,l,h)}}function Fe(e){var t=e.object.material;t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)}function Ue(e){var t=e.object,r=e.buffer,i=t.geometry,o=t.material;if(o instanceof THREE.MeshFaceMaterial){var a=i instanceof THREE.BufferGeometry?0:r.materialIndex;(o=o.materials[a]).transparent?(e.transparent=o,e.opaque=null):(e.opaque=o,e.transparent=null)}else o&&(o.transparent?(e.transparent=o,e.opaque=null):(e.opaque=o,e.transparent=null))}function Ve(e,t){var r,i,o,a;if(void 0===e.__webglInit)if(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,void 0!==e.geometry&&void 0===e.geometry.__webglInit&&(e.geometry.__webglInit=!0,e.geometry.addEventListener("dispose",ce)),void 0===(i=e.geometry));else if(i instanceof THREE.BufferGeometry)!function(e){var t,r,i;for(t in e.attributes)i="index"===t?u.ELEMENT_ARRAY_BUFFER:u.ARRAY_BUFFER,(r=e.attributes[t]).buffer=u.createBuffer(),u.bindBuffer(i,r.buffer),u.bufferData(i,r.array,u.STATIC_DRAW)}(i);else if(e instanceof THREE.Mesh)for(r in o=e.material,void 0===i.geometryGroups&&i.makeGroups(o instanceof THREE.MeshFaceMaterial),i.geometryGroups)(a=i.geometryGroups[r]).__webglVertexBuffer||(le(a),ye(a,e),i.verticesNeedUpdate=!0,i.morphTargetsNeedUpdate=!0,i.elementsNeedUpdate=!0,i.uvsNeedUpdate=!0,i.normalsNeedUpdate=!0,i.tangentsNeedUpdate=!0,i.colorsNeedUpdate=!0);else e instanceof THREE.Line?i.__webglVertexBuffer||(!function(e){e.__webglVertexBuffer=u.createBuffer(),e.__webglColorBuffer=u.createBuffer(),e.__webglLineDistanceBuffer=u.createBuffer(),m.info.memory.geometries++}(i),function(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__lineDistanceArray=new Float32Array(1*r),e.__webglLineCount=r,Te(e,t)}(i,e),i.verticesNeedUpdate=!0,i.colorsNeedUpdate=!0,i.lineDistancesNeedUpdate=!0):e instanceof THREE.ParticleSystem&&(i.__webglVertexBuffer||(!function(e){e.__webglVertexBuffer=u.createBuffer(),e.__webglColorBuffer=u.createBuffer(),m.info.memory.geometries++}(i),function(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__sortArray=[],e.__webglParticleCount=r,Te(e,t)}(i,e),i.verticesNeedUpdate=!0,i.colorsNeedUpdate=!0));if(void 0===e.__webglActive){if(e instanceof THREE.Mesh){if((i=e.geometry)instanceof THREE.BufferGeometry)ze(t.__webglObjects,i,e);else if(i instanceof THREE.Geometry)for(r in i.geometryGroups)a=i.geometryGroups[r],ze(t.__webglObjects,a,e)}else e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(i=e.geometry,ze(t.__webglObjects,i,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?function(e,t){e.push({id:null,object:t,opaque:null,transparent:null,z:0})}(t.__webglObjectsImmediate,e):e instanceof THREE.Sprite?t.__webglSprites.push(e):e instanceof THREE.LensFlare&&t.__webglFlares.push(e);e.__webglActive=!0}}function ze(e,t,r){e.push({id:null,buffer:t,object:r,opaque:null,transparent:null,z:0})}function Be(e){var t,r,i,o=e.geometry;if(o instanceof THREE.BufferGeometry)!function(e,t){var r,i,o=e.attributes;for(r in o)(i=o[r]).needsUpdate&&("index"===r?(u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,i.buffer),u.bufferData(u.ELEMENT_ARRAY_BUFFER,i.array,t)):(u.bindBuffer(u.ARRAY_BUFFER,i.buffer),u.bufferData(u.ARRAY_BUFFER,i.array,t)),i.needsUpdate=!1)}(o,u.DYNAMIC_DRAW);else if(e instanceof THREE.Mesh){for(var a=0,n=o.geometryGroupsList.length;a<n;a++)i=Re(e,t=o.geometryGroupsList[a]),o.buffersNeedUpdate&&ye(t,e),r=i.attributes&&Ne(i),(o.verticesNeedUpdate||o.morphTargetsNeedUpdate||o.elementsNeedUpdate||o.uvsNeedUpdate||o.normalsNeedUpdate||o.colorsNeedUpdate||o.tangentsNeedUpdate||r)&&we(t,e,u.DYNAMIC_DRAW,!o.dynamic,i);o.verticesNeedUpdate=!1,o.morphTargetsNeedUpdate=!1,o.elementsNeedUpdate=!1,o.uvsNeedUpdate=!1,o.normalsNeedUpdate=!1,o.colorsNeedUpdate=!1,o.tangentsNeedUpdate=!1,o.buffersNeedUpdate=!1,i.attributes&&Oe(i)}else e instanceof THREE.Line?(r=(i=Re(e,o)).attributes&&Ne(i),(o.verticesNeedUpdate||o.colorsNeedUpdate||o.lineDistancesNeedUpdate||r)&&function(e,t){var r,i,o,a,n,s,h,l,c,f,p,E,d=e.vertices,m=e.colors,g=e.lineDistances,v=d.length,T=m.length,y=g.length,R=e.__vertexArray,x=e.__colorArray,H=e.__lineDistanceArray,_=e.verticesNeedUpdate,w=e.colorsNeedUpdate,b=e.lineDistancesNeedUpdate,M=e.__webglCustomAttributesList;if(_){for(r=0;r<v;r++)a=d[r],R[n=3*r]=a.x,R[n+1]=a.y,R[n+2]=a.z;u.bindBuffer(u.ARRAY_BUFFER,e.__webglVertexBuffer),u.bufferData(u.ARRAY_BUFFER,R,t)}if(w){for(i=0;i<T;i++)s=m[i],x[n=3*i]=s.r,x[n+1]=s.g,x[n+2]=s.b;u.bindBuffer(u.ARRAY_BUFFER,e.__webglColorBuffer),u.bufferData(u.ARRAY_BUFFER,x,t)}if(b){for(o=0;o<y;o++)H[o]=g[o];u.bindBuffer(u.ARRAY_BUFFER,e.__webglLineDistanceBuffer),u.bufferData(u.ARRAY_BUFFER,H,t)}if(M)for(h=0,l=M.length;h<l;h++)if((E=M[h]).needsUpdate&&(void 0===E.boundTo||"vertices"===E.boundTo)){if(n=0,f=E.value.length,1===E.size)for(c=0;c<f;c++)E.array[c]=E.value[c];else if(2===E.size)for(c=0;c<f;c++)p=E.value[c],E.array[n]=p.x,E.array[n+1]=p.y,n+=2;else if(3===E.size)if("c"===E.type)for(c=0;c<f;c++)p=E.value[c],E.array[n]=p.r,E.array[n+1]=p.g,E.array[n+2]=p.b,n+=3;else for(c=0;c<f;c++)p=E.value[c],E.array[n]=p.x,E.array[n+1]=p.y,E.array[n+2]=p.z,n+=3;else if(4===E.size)for(c=0;c<f;c++)p=E.value[c],E.array[n]=p.x,E.array[n+1]=p.y,E.array[n+2]=p.z,E.array[n+3]=p.w,n+=4;u.bindBuffer(u.ARRAY_BUFFER,E.buffer),u.bufferData(u.ARRAY_BUFFER,E.array,t)}}(o,u.DYNAMIC_DRAW),o.verticesNeedUpdate=!1,o.colorsNeedUpdate=!1,o.lineDistancesNeedUpdate=!1,i.attributes&&Oe(i)):e instanceof THREE.ParticleSystem&&(r=(i=Re(e,o)).attributes&&Ne(i),(o.verticesNeedUpdate||o.colorsNeedUpdate||e.sortParticles||r)&&function(e,t,r){var i,o,a,n,s,h,l,c,f,p,E,d,m=e.vertices,g=m.length,v=e.colors,T=v.length,y=e.__vertexArray,R=e.__colorArray,x=e.__sortArray,H=e.verticesNeedUpdate,_=(e.elementsNeedUpdate,e.colorsNeedUpdate),w=e.__webglCustomAttributesList;if(r.sortParticles){for(X.copy(j),X.multiply(r.matrixWorld),i=0;i<g;i++)a=m[i],q.copy(a),q.applyProjection(X),x[i]=[q.z,i];for(x.sort(Ce),i=0;i<g;i++)a=m[x[i][1]],y[n=3*i]=a.x,y[n+1]=a.y,y[n+2]=a.z;for(o=0;o<T;o++)n=3*o,h=v[x[o][1]],R[n]=h.r,R[n+1]=h.g,R[n+2]=h.b;if(w)for(l=0,c=w.length;l<c;l++)if(void 0===(d=w[l]).boundTo||"vertices"===d.boundTo)if(n=0,p=d.value.length,1===d.size)for(f=0;f<p;f++)s=x[f][1],d.array[f]=d.value[s];else if(2===d.size)for(f=0;f<p;f++)s=x[f][1],E=d.value[s],d.array[n]=E.x,d.array[n+1]=E.y,n+=2;else if(3===d.size)if("c"===d.type)for(f=0;f<p;f++)s=x[f][1],E=d.value[s],d.array[n]=E.r,d.array[n+1]=E.g,d.array[n+2]=E.b,n+=3;else for(f=0;f<p;f++)s=x[f][1],E=d.value[s],d.array[n]=E.x,d.array[n+1]=E.y,d.array[n+2]=E.z,n+=3;else if(4===d.size)for(f=0;f<p;f++)s=x[f][1],E=d.value[s],d.array[n]=E.x,d.array[n+1]=E.y,d.array[n+2]=E.z,d.array[n+3]=E.w,n+=4}else{if(H)for(i=0;i<g;i++)a=m[i],y[n=3*i]=a.x,y[n+1]=a.y,y[n+2]=a.z;if(_)for(o=0;o<T;o++)h=v[o],R[n=3*o]=h.r,R[n+1]=h.g,R[n+2]=h.b;if(w)for(l=0,c=w.length;l<c;l++)if((d=w[l]).needsUpdate&&(void 0===d.boundTo||"vertices"===d.boundTo))if(p=d.value.length,n=0,1===d.size)for(f=0;f<p;f++)d.array[f]=d.value[f];else if(2===d.size)for(f=0;f<p;f++)E=d.value[f],d.array[n]=E.x,d.array[n+1]=E.y,n+=2;else if(3===d.size)if("c"===d.type)for(f=0;f<p;f++)E=d.value[f],d.array[n]=E.r,d.array[n+1]=E.g,d.array[n+2]=E.b,n+=3;else for(f=0;f<p;f++)E=d.value[f],d.array[n]=E.x,d.array[n+1]=E.y,d.array[n+2]=E.z,n+=3;else if(4===d.size)for(f=0;f<p;f++)E=d.value[f],d.array[n]=E.x,d.array[n+1]=E.y,d.array[n+2]=E.z,d.array[n+3]=E.w,n+=4}if((H||r.sortParticles)&&(u.bindBuffer(u.ARRAY_BUFFER,e.__webglVertexBuffer),u.bufferData(u.ARRAY_BUFFER,y,t)),(_||r.sortParticles)&&(u.bindBuffer(u.ARRAY_BUFFER,e.__webglColorBuffer),u.bufferData(u.ARRAY_BUFFER,R,t)),w)for(l=0,c=w.length;l<c;l++)((d=w[l]).needsUpdate||r.sortParticles)&&(u.bindBuffer(u.ARRAY_BUFFER,d.buffer),u.bufferData(u.ARRAY_BUFFER,d.array,t))}(o,u.DYNAMIC_DRAW,e),o.verticesNeedUpdate=!1,o.colorsNeedUpdate=!1,i.attributes&&Oe(i))}function Ne(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function Oe(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function Ie(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Line?ke(t.__webglObjects,e):e instanceof THREE.Sprite?Ge(t.__webglSprites,e):e instanceof THREE.LensFlare?Ge(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&ke(t.__webglObjectsImmediate,e),delete e.__webglActive}function ke(e,t){for(var r=e.length-1;r>=0;r--)e[r].object===t&&e.splice(r,1)}function Ge(e,t){for(var r=e.length-1;r>=0;r--)e[r]===t&&e.splice(r,1)}function We(e,r,i,o,a){_=0,o.needsUpdate&&(o.program&&ve(o),m.initMaterial(o,r,i,a),o.needsUpdate=!1),o.morphTargets&&(a.__webglMorphTargetInfluences||(a.__webglMorphTargetInfluences=new Float32Array(m.maxMorphTargets)));var n=!1,s=o.program,h=s.uniforms,l=o.uniforms;if(s!==T&&(u.useProgram(s),T=s,n=!0),o.id!==R&&(R=o.id,n=!0),(n||e!==H)&&(u.uniformMatrix4fv(h.projectionMatrix,!1,e.projectionMatrix.elements),e!==H&&(H=e)),o.skinning)if(re&&a.useVertexTexture){if(null!==h.boneTexture){var c=Xe();u.uniform1i(h.boneTexture,c),m.setTexture(a.boneTexture,c)}null!==h.boneTextureWidth&&u.uniform1i(h.boneTextureWidth,a.boneTextureWidth),null!==h.boneTextureHeight&&u.uniform1i(h.boneTextureHeight,a.boneTextureHeight)}else null!==h.boneGlobalMatrices&&u.uniformMatrix4fv(h.boneGlobalMatrices,!1,a.boneMatrices);return n&&(i&&o.fog&&function(e,t){e.fogColor.value=t.color,t instanceof THREE.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof THREE.FogExp2&&(e.fogDensity.value=t.density)}(l,i),(o instanceof THREE.MeshPhongMaterial||o instanceof THREE.MeshLambertMaterial||o.lights)&&(K&&(!function(e,t){var r,i,o,a,n,s,h,l,c,u=0,f=0,p=0,E=Q,d=E.directional.colors,g=E.directional.positions,v=E.point.colors,T=E.point.positions,y=E.point.distances,R=E.spot.colors,x=E.spot.positions,H=E.spot.distances,_=E.spot.directions,w=E.spot.anglesCos,b=E.spot.exponents,M=E.hemi.skyColors,S=E.hemi.groundColors,A=E.hemi.positions,C=0,L=0,P=0,D=0,F=0,U=0,V=0,z=0,B=0,N=0,O=0,I=0;for(r=0,i=t.length;r<i;r++)if(!(o=t[r]).onlyShadow)if(a=o.color,h=o.intensity,c=o.distance,o instanceof THREE.AmbientLight){if(!o.visible)continue;m.gammaInput?(u+=a.r*a.r,f+=a.g*a.g,p+=a.b*a.b):(u+=a.r,f+=a.g,p+=a.b)}else if(o instanceof THREE.DirectionalLight){if(F+=1,!o.visible)continue;if(Y.setFromMatrixPosition(o.matrixWorld),q.setFromMatrixPosition(o.target.matrixWorld),Y.sub(q),Y.normalize(),0===Y.x&&0===Y.y&&0===Y.z)continue;g[B=3*C]=Y.x,g[B+1]=Y.y,g[B+2]=Y.z,m.gammaInput?Ye(d,B,a,h*h):Ke(d,B,a,h),C+=1}else if(o instanceof THREE.PointLight){if(U+=1,!o.visible)continue;N=3*L,m.gammaInput?Ye(v,N,a,h*h):Ke(v,N,a,h),q.setFromMatrixPosition(o.matrixWorld),T[N]=q.x,T[N+1]=q.y,T[N+2]=q.z,y[L]=c,L+=1}else if(o instanceof THREE.SpotLight){if(V+=1,!o.visible)continue;O=3*P,m.gammaInput?Ye(R,O,a,h*h):Ke(R,O,a,h),q.setFromMatrixPosition(o.matrixWorld),x[O]=q.x,x[O+1]=q.y,x[O+2]=q.z,H[P]=c,Y.copy(q),q.setFromMatrixPosition(o.target.matrixWorld),Y.sub(q),Y.normalize(),_[O]=Y.x,_[O+1]=Y.y,_[O+2]=Y.z,w[P]=Math.cos(o.angle),b[P]=o.exponent,P+=1}else if(o instanceof THREE.HemisphereLight){if(z+=1,!o.visible)continue;if(Y.setFromMatrixPosition(o.matrixWorld),Y.normalize(),0===Y.x&&0===Y.y&&0===Y.z)continue;A[I=3*D]=Y.x,A[I+1]=Y.y,A[I+2]=Y.z,n=o.color,s=o.groundColor,m.gammaInput?(Ye(M,I,n,l=h*h),Ye(S,I,s,l)):(Ke(M,I,n,h),Ke(S,I,s,h)),D+=1}for(r=3*C,i=Math.max(d.length,3*F);r<i;r++)d[r]=0;for(r=3*L,i=Math.max(v.length,3*U);r<i;r++)v[r]=0;for(r=3*P,i=Math.max(R.length,3*V);r<i;r++)R[r]=0;for(r=3*D,i=Math.max(M.length,3*z);r<i;r++)M[r]=0;for(r=3*D,i=Math.max(S.length,3*z);r<i;r++)S[r]=0;E.directional.length=C,E.point.length=L,E.spot.length=P,E.hemi.length=D,E.ambient[0]=u,E.ambient[1]=f,E.ambient[2]=p}(0,r),K=!1),function(e,t){e.ambientLightColor.value=t.ambient,e.directionalLightColor.value=t.directional.colors,e.directionalLightDirection.value=t.directional.positions,e.pointLightColor.value=t.point.colors,e.pointLightPosition.value=t.point.positions,e.pointLightDistance.value=t.point.distances,e.spotLightColor.value=t.spot.colors,e.spotLightPosition.value=t.spot.positions,e.spotLightDistance.value=t.spot.distances,e.spotLightDirection.value=t.spot.directions,e.spotLightAngleCos.value=t.spot.anglesCos,e.spotLightExponent.value=t.spot.exponents,e.hemisphereLightSkyColor.value=t.hemi.skyColors,e.hemisphereLightGroundColor.value=t.hemi.groundColors,e.hemisphereLightDirection.value=t.hemi.positions}(l,Q)),(o instanceof THREE.MeshBasicMaterial||o instanceof THREE.MeshLambertMaterial||o instanceof THREE.MeshPhongMaterial)&&function(e,t){e.opacity.value=t.opacity,m.gammaInput?e.diffuse.value.copyGammaToLinear(t.color):e.diffuse.value=t.color;e.map.value=t.map,e.lightMap.value=t.lightMap,e.specularMap.value=t.specularMap,t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale);t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale));var r;t.map?r=t.map:t.specularMap?r=t.specularMap:t.normalMap?r=t.normalMap:t.bumpMap&&(r=t.bumpMap);if(void 0!==r){var i=r.offset,o=r.repeat;e.offsetRepeat.value.set(i.x,i.y,o.x,o.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,m.gammaInput,e.reflectivity.value=t.reflectivity;e.refractionRatio.value=t.refractionRatio,e.combine.value=t.combine,e.useRefract.value=t.envMap&&t.envMap.mapping instanceof THREE.CubeRefractionMapping}(l,o),o instanceof THREE.LineBasicMaterial?je(l,o):o instanceof THREE.LineDashedMaterial?(je(l,o),function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(l,o)):o instanceof THREE.ParticleSystemMaterial?function(e,r){e.psColor.value=r.color,e.opacity.value=r.opacity,e.size.value=r.size,e.scale.value=t.height/2,e.map.value=r.map}(l,o):o instanceof THREE.MeshPhongMaterial?function(e,t){e.shininess.value=t.shininess,m.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive),e.specular.value.copyGammaToLinear(t.specular)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive,e.specular.value=t.specular);t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}(l,o):o instanceof THREE.MeshLambertMaterial?function(e,t){m.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive);t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}(l,o):o instanceof THREE.MeshDepthMaterial?(l.mNear.value=e.near,l.mFar.value=e.far,l.opacity.value=o.opacity):o instanceof THREE.MeshNormalMaterial&&(l.opacity.value=o.opacity),a.receiveShadow&&!o._shadowPass&&function(e,t){if(e.shadowMatrix)for(var r=0,i=0,o=t.length;i<o;i++){var a=t[i];a.castShadow&&((a instanceof THREE.SpotLight||a instanceof THREE.DirectionalLight&&!a.shadowCascade)&&(e.shadowMap.value[r]=a.shadowMap,e.shadowMapSize.value[r]=a.shadowMapSize,e.shadowMatrix.value[r]=a.shadowMatrix,e.shadowDarkness.value[r]=a.shadowDarkness,e.shadowBias.value[r]=a.shadowBias,r++))}}(l,r),function(e,t){var r,i,o,a,n,s,h,l,c,f,p;for(c=0,f=t.length;c<f;c++)if(a=e.uniforms[t[c][1]])if(o=(r=t[c][0]).type,i=r.value,"i"===o)u.uniform1i(a,i);else if("f"===o)u.uniform1f(a,i);else if("v2"===o)u.uniform2f(a,i.x,i.y);else if("v3"===o)u.uniform3f(a,i.x,i.y,i.z);else if("v4"===o)u.uniform4f(a,i.x,i.y,i.z,i.w);else if("c"===o)u.uniform3f(a,i.r,i.g,i.b);else if("iv1"===o)u.uniform1iv(a,i);else if("iv"===o)u.uniform3iv(a,i);else if("fv1"===o)u.uniform1fv(a,i);else if("fv"===o)u.uniform3fv(a,i);else if("v2v"===o){for(void 0===r._array&&(r._array=new Float32Array(2*i.length)),h=0,l=i.length;h<l;h++)p=2*h,r._array[p]=i[h].x,r._array[p+1]=i[h].y;u.uniform2fv(a,r._array)}else if("v3v"===o){for(void 0===r._array&&(r._array=new Float32Array(3*i.length)),h=0,l=i.length;h<l;h++)p=3*h,r._array[p]=i[h].x,r._array[p+1]=i[h].y,r._array[p+2]=i[h].z;u.uniform3fv(a,r._array)}else if("v4v"===o){for(void 0===r._array&&(r._array=new Float32Array(4*i.length)),h=0,l=i.length;h<l;h++)p=4*h,r._array[p]=i[h].x,r._array[p+1]=i[h].y,r._array[p+2]=i[h].z,r._array[p+3]=i[h].w;u.uniform4fv(a,r._array)}else if("m4"===o)void 0===r._array&&(r._array=new Float32Array(16)),i.flattenToArray(r._array),u.uniformMatrix4fv(a,!1,r._array);else if("m4v"===o){for(void 0===r._array&&(r._array=new Float32Array(16*i.length)),h=0,l=i.length;h<l;h++)i[h].flattenToArrayOffset(r._array,16*h);u.uniformMatrix4fv(a,!1,r._array)}else if("t"===o){if(n=i,s=Xe(),u.uniform1i(a,s),!n)continue;n.image instanceof Array&&6===n.image.length?tt(n,s):n instanceof THREE.WebGLRenderTargetCube?rt(n,s):m.setTexture(n,s)}else if("tv"===o){for(void 0===r._array&&(r._array=[]),h=0,l=r.value.length;h<l;h++)r._array[h]=Xe();for(u.uniform1iv(a,r._array),h=0,l=r.value.length;h<l;h++)n=r.value[h],s=r._array[h],n&&m.setTexture(n,s)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+o)}(s,o.uniformsList),(o instanceof THREE.ShaderMaterial||o instanceof THREE.MeshPhongMaterial||o.envMap)&&null!==h.cameraPosition&&(q.setFromMatrixPosition(e.matrixWorld),u.uniform3f(h.cameraPosition,q.x,q.y,q.z)),(o instanceof THREE.MeshPhongMaterial||o instanceof THREE.MeshLambertMaterial||o instanceof THREE.ShaderMaterial||o.skinning)&&null!==h.viewMatrix&&u.uniformMatrix4fv(h.viewMatrix,!1,e.matrixWorldInverse.elements)),function(e,t){u.uniformMatrix4fv(e.modelViewMatrix,!1,t._modelViewMatrix.elements),e.normalMatrix&&u.uniformMatrix3fv(e.normalMatrix,!1,t._normalMatrix.elements)}(h,a),null!==h.modelMatrix&&u.uniformMatrix4fv(h.modelMatrix,!1,a.matrixWorld.elements),s}function je(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function Xe(){var e=_;return e>=Z&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Z),_+=1,e}function qe(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getNormalMatrix(e._modelViewMatrix)}function Ye(e,t,r,i){e[t]=r.r*r.r*i,e[t+1]=r.g*r.g*i,e[t+2]=r.b*r.b*i}function Ke(e,t,r,i){e[t]=r.r*i,e[t+1]=r.g*i,e[t+2]=r.b*i}function Qe(e){e!==V&&(u.lineWidth(e),V=e)}function Ze(e,t,r){D!==e&&(e?u.enable(u.POLYGON_OFFSET_FILL):u.disable(u.POLYGON_OFFSET_FILL),D=e),!e||F===t&&U===r||(u.polygonOffset(t,r),F=t,U=r)}function Je(e,t){var r;return"fragment"===e?r=u.createShader(u.FRAGMENT_SHADER):"vertex"===e&&(r=u.createShader(u.VERTEX_SHADER)),u.shaderSource(r,t),u.compileShader(r),u.getShaderParameter(r,u.COMPILE_STATUS)?r:(console.error(u.getShaderInfoLog(r)),console.error(function(e){for(var t=e.split("\n"),r=0,i=t.length;r<i;r++)t[r]=r+1+": "+t[r];return t.join("\n")}(t)),null)}function $e(e,t,r){r?(u.texParameteri(e,u.TEXTURE_WRAP_S,nt(t.wrapS)),u.texParameteri(e,u.TEXTURE_WRAP_T,nt(t.wrapT)),u.texParameteri(e,u.TEXTURE_MAG_FILTER,nt(t.magFilter)),u.texParameteri(e,u.TEXTURE_MIN_FILTER,nt(t.minFilter))):(u.texParameteri(e,u.TEXTURE_WRAP_S,u.CLAMP_TO_EDGE),u.texParameteri(e,u.TEXTURE_WRAP_T,u.CLAMP_TO_EDGE),u.texParameteri(e,u.TEXTURE_MAG_FILTER,at(t.magFilter)),u.texParameteri(e,u.TEXTURE_MIN_FILTER,at(t.minFilter))),E&&t.type!==THREE.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&(u.texParameterf(e,E.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,ee)),t.__oldAnisotropy=t.anisotropy)}function et(e,t){if(e.width<=t&&e.height<=t)return e;var r=Math.max(e.width,e.height),i=Math.floor(e.width*t/r),o=Math.floor(e.height*t/r),a=document.createElement("canvas");return a.width=i,a.height=o,a.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,i,o),a}function tt(e,t){if(6===e.image.length)if(e.needsUpdate){e.image.__webglTextureCube||(e.addEventListener("dispose",ue),e.image.__webglTextureCube=u.createTexture(),m.info.memory.textures++),u.activeTexture(u.TEXTURE0+t),u.bindTexture(u.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),u.pixelStorei(u.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var r=e instanceof THREE.CompressedTexture,i=[],o=0;o<6;o++)m.autoScaleCubemaps&&!r?i[o]=et(e.image[o],$):i[o]=e.image[o];var a=i[0],n=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),s=nt(e.format),h=nt(e.type);$e(u.TEXTURE_CUBE_MAP,e,n);for(o=0;o<6;o++)if(r)for(var l,c=i[o].mipmaps,f=0,p=c.length;f<p;f++)l=c[f],e.format!==THREE.RGBAFormat?u.compressedTexImage2D(u.TEXTURE_CUBE_MAP_POSITIVE_X+o,f,s,l.width,l.height,0,l.data):u.texImage2D(u.TEXTURE_CUBE_MAP_POSITIVE_X+o,f,s,l.width,l.height,0,s,h,l.data);else u.texImage2D(u.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,s,s,h,i[o]);e.generateMipmaps&&n&&u.generateMipmap(u.TEXTURE_CUBE_MAP),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else u.activeTexture(u.TEXTURE0+t),u.bindTexture(u.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}function rt(e,t){u.activeTexture(u.TEXTURE0+t),u.bindTexture(u.TEXTURE_CUBE_MAP,e.__webglTexture)}function it(e,t,r){u.bindFramebuffer(u.FRAMEBUFFER,e),u.framebufferTexture2D(u.FRAMEBUFFER,u.COLOR_ATTACHMENT0,r,t.__webglTexture,0)}function ot(e,t){u.bindRenderbuffer(u.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(u.renderbufferStorage(u.RENDERBUFFER,u.DEPTH_COMPONENT16,t.width,t.height),u.framebufferRenderbuffer(u.FRAMEBUFFER,u.DEPTH_ATTACHMENT,u.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(u.renderbufferStorage(u.RENDERBUFFER,u.DEPTH_STENCIL,t.width,t.height),u.framebufferRenderbuffer(u.FRAMEBUFFER,u.DEPTH_STENCIL_ATTACHMENT,u.RENDERBUFFER,e)):u.renderbufferStorage(u.RENDERBUFFER,u.RGBA4,t.width,t.height)}function at(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?u.NEAREST:u.LINEAR}function nt(e){if(e===THREE.RepeatWrapping)return u.REPEAT;if(e===THREE.ClampToEdgeWrapping)return u.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return u.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return u.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return u.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return u.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return u.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return u.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return u.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return u.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return u.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return u.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return u.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return u.BYTE;if(e===THREE.ShortType)return u.SHORT;if(e===THREE.UnsignedShortType)return u.UNSIGNED_SHORT;if(e===THREE.IntType)return u.INT;if(e===THREE.UnsignedIntType)return u.UNSIGNED_INT;if(e===THREE.FloatType)return u.FLOAT;if(e===THREE.AlphaFormat)return u.ALPHA;if(e===THREE.RGBFormat)return u.RGB;if(e===THREE.RGBAFormat)return u.RGBA;if(e===THREE.LuminanceFormat)return u.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return u.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return u.FUNC_ADD;if(e===THREE.SubtractEquation)return u.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return u.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return u.ZERO;if(e===THREE.OneFactor)return u.ONE;if(e===THREE.SrcColorFactor)return u.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return u.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return u.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return u.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return u.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return u.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return u.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return u.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return u.SRC_ALPHA_SATURATE;if(void 0!==d){if(e===THREE.RGB_S3TC_DXT1_Format)return d.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return d.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return d.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return d.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}this.renderBufferImmediate=function(e,t,r){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=u.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=u.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=u.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=u.createBuffer()),e.hasPositions&&(u.bindBuffer(u.ARRAY_BUFFER,e.__webglVertexBuffer),u.bufferData(u.ARRAY_BUFFER,e.positionArray,u.DYNAMIC_DRAW),u.enableVertexAttribArray(t.attributes.position),u.vertexAttribPointer(t.attributes.position,3,u.FLOAT,!1,0,0)),e.hasNormals){if(u.bindBuffer(u.ARRAY_BUFFER,e.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,o,a,n,s,h,l,c,f,p,E,d=3*e.count;for(E=0;E<d;E+=9)n=(p=e.normalArray)[E],h=p[E+1],c=p[E+2],s=p[E+3],l=p[E+4],f=p[E+5],i=(n+s+p[E+6])/3,o=(h+l+p[E+7])/3,a=(c+f+p[E+8])/3,p[E]=i,p[E+1]=o,p[E+2]=a,p[E+3]=i,p[E+4]=o,p[E+5]=a,p[E+6]=i,p[E+7]=o,p[E+8]=a}u.bufferData(u.ARRAY_BUFFER,e.normalArray,u.DYNAMIC_DRAW),u.enableVertexAttribArray(t.attributes.normal),u.vertexAttribPointer(t.attributes.normal,3,u.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(u.bindBuffer(u.ARRAY_BUFFER,e.__webglUvBuffer),u.bufferData(u.ARRAY_BUFFER,e.uvArray,u.DYNAMIC_DRAW),u.enableVertexAttribArray(t.attributes.uv),u.vertexAttribPointer(t.attributes.uv,2,u.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==THREE.NoColors&&(u.bindBuffer(u.ARRAY_BUFFER,e.__webglColorBuffer),u.bufferData(u.ARRAY_BUFFER,e.colorArray,u.DYNAMIC_DRAW),u.enableVertexAttribArray(t.attributes.color),u.vertexAttribPointer(t.attributes.color,3,u.FLOAT,!1,0,0)),u.drawArrays(u.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,i,o,a){if(!1!==i.visible){var n,s,h,l,c=We(e,t,r,i,a),f=c.attributes,p=o.attributes,E=!1,d=i.wireframe?1:0,g=16777215*o.id+2*c.id+d;if(g!==x&&(x=g,E=!0),E&&Se(),a instanceof THREE.Mesh)if(H=p.index){(w=o.offsets).length>1&&(E=!0);for(var v=0,T=w.length;v<T;v++){var y=w[v].index;if(E){for(s in f)h=f[s],n=p[s],h>=0&&(n?(l=n.itemSize,u.bindBuffer(u.ARRAY_BUFFER,n.buffer),Me(h),u.vertexAttribPointer(h,l,u.FLOAT,!1,0,y*l*4)):i.defaultAttributeValues&&(2===i.defaultAttributeValues[s].length?u.vertexAttrib2fv(h,i.defaultAttributeValues[s]):3===i.defaultAttributeValues[s].length&&u.vertexAttrib3fv(h,i.defaultAttributeValues[s])));u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,H.buffer)}u.drawElements(u.TRIANGLES,w[v].count,u.UNSIGNED_SHORT,2*w[v].start),m.info.render.calls++,m.info.render.vertices+=w[v].count,m.info.render.faces+=w[v].count/3}}else{if(E)for(s in f)"index"!==s&&(h=f[s],n=p[s],h>=0&&(n?(l=n.itemSize,u.bindBuffer(u.ARRAY_BUFFER,n.buffer),Me(h),u.vertexAttribPointer(h,l,u.FLOAT,!1,0,0)):i.defaultAttributeValues&&i.defaultAttributeValues[s]&&(2===i.defaultAttributeValues[s].length?u.vertexAttrib2fv(h,i.defaultAttributeValues[s]):3===i.defaultAttributeValues[s].length&&u.vertexAttrib3fv(h,i.defaultAttributeValues[s]))));var R=o.attributes.position;u.drawArrays(u.TRIANGLES,0,R.array.length/3),m.info.render.calls++,m.info.render.vertices+=R.array.length/3,m.info.render.faces+=R.array.length/3/3}else if(a instanceof THREE.ParticleSystem){if(E)for(s in f)h=f[s],n=p[s],h>=0&&(n?(l=n.itemSize,u.bindBuffer(u.ARRAY_BUFFER,n.buffer),Me(h),u.vertexAttribPointer(h,l,u.FLOAT,!1,0,0)):i.defaultAttributeValues&&i.defaultAttributeValues[s]&&(2===i.defaultAttributeValues[s].length?u.vertexAttrib2fv(h,i.defaultAttributeValues[s]):3===i.defaultAttributeValues[s].length&&u.vertexAttrib3fv(h,i.defaultAttributeValues[s])));R=p.position;u.drawArrays(u.POINTS,0,R.array.length/3),m.info.render.calls++,m.info.render.points+=R.array.length/3}else if(a instanceof THREE.Line){var H,_=a.type===THREE.LineStrip?u.LINE_STRIP:u.LINES;if(Qe(i.linewidth),H=p.index){var w;(w=o.offsets).length>1&&(E=!0);for(v=0,T=w.length;v<T;v++){y=w[v].index;E&&(be(i,f,p,y),u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,H.buffer)),u.drawElements(u.LINES,w[v].count,u.UNSIGNED_SHORT,2*w[v].start),m.info.render.calls++,m.info.render.vertices+=w[v].count}}else{E&&be(i,f,p,0);R=p.position;u.drawArrays(_,0,R.array.length/3),m.info.render.calls++,m.info.render.points+=R.array.length}}}},this.renderBuffer=function(e,t,r,i,o,a){if(!1!==i.visible){var n,s,h,l=We(e,t,r,i,a),c=l.attributes,f=!1,p=i.wireframe?1:0,E=16777215*o.id+2*l.id+p;if(E!==x&&(x=E,f=!0),f&&Se(),!i.morphTargets&&c.position>=0?f&&(u.bindBuffer(u.ARRAY_BUFFER,o.__webglVertexBuffer),Me(c.position),u.vertexAttribPointer(c.position,3,u.FLOAT,!1,0,0)):a.morphTargetBase&&function(e,t,r){var i=e.program.attributes;-1!==r.morphTargetBase&&i.position>=0?(u.bindBuffer(u.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[r.morphTargetBase]),Me(i.position),u.vertexAttribPointer(i.position,3,u.FLOAT,!1,0,0)):i.position>=0&&(u.bindBuffer(u.ARRAY_BUFFER,t.__webglVertexBuffer),Me(i.position),u.vertexAttribPointer(i.position,3,u.FLOAT,!1,0,0));if(r.morphTargetForcedOrder.length)for(var o=0,a=r.morphTargetForcedOrder,n=r.morphTargetInfluences;o<e.numSupportedMorphTargets&&o<a.length;)i["morphTarget"+o]>=0&&(u.bindBuffer(u.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[a[o]]),Me(i["morphTarget"+o]),u.vertexAttribPointer(i["morphTarget"+o],3,u.FLOAT,!1,0,0)),i["morphNormal"+o]>=0&&e.morphNormals&&(u.bindBuffer(u.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[a[o]]),Me(i["morphNormal"+o]),u.vertexAttribPointer(i["morphNormal"+o],3,u.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[o]=n[a[o]],o++;else{var s,h,l=[],c=(n=r.morphTargetInfluences).length;for(h=0;h<c;h++)(s=n[h])>0&&l.push([s,h]);l.length>e.numSupportedMorphTargets?(l.sort(Ce),l.length=e.numSupportedMorphTargets):l.length>e.numSupportedMorphNormals?l.sort(Ce):0===l.length&&l.push([0,0]);var f;for(o=0;o<e.numSupportedMorphTargets;)l[o]?(f=l[o][1],i["morphTarget"+o]>=0&&(u.bindBuffer(u.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[f]),Me(i["morphTarget"+o]),u.vertexAttribPointer(i["morphTarget"+o],3,u.FLOAT,!1,0,0)),i["morphNormal"+o]>=0&&e.morphNormals&&(u.bindBuffer(u.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[f]),Me(i["morphNormal"+o]),u.vertexAttribPointer(i["morphNormal"+o],3,u.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[o]=n[f]):r.__webglMorphTargetInfluences[o]=0,o++}null!==e.program.uniforms.morphTargetInfluences&&u.uniform1fv(e.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}(i,o,a),f){if(o.__webglCustomAttributesList)for(s=0,h=o.__webglCustomAttributesList.length;s<h;s++)c[(n=o.__webglCustomAttributesList[s]).buffer.belongsToAttribute]>=0&&(u.bindBuffer(u.ARRAY_BUFFER,n.buffer),Me(c[n.buffer.belongsToAttribute]),u.vertexAttribPointer(c[n.buffer.belongsToAttribute],n.size,u.FLOAT,!1,0,0));c.color>=0&&(a.geometry.colors.length>0||a.geometry.faces.length>0?(u.bindBuffer(u.ARRAY_BUFFER,o.__webglColorBuffer),Me(c.color),u.vertexAttribPointer(c.color,3,u.FLOAT,!1,0,0)):i.defaultAttributeValues&&u.vertexAttrib3fv(c.color,i.defaultAttributeValues.color)),c.normal>=0&&(u.bindBuffer(u.ARRAY_BUFFER,o.__webglNormalBuffer),Me(c.normal),u.vertexAttribPointer(c.normal,3,u.FLOAT,!1,0,0)),c.tangent>=0&&(u.bindBuffer(u.ARRAY_BUFFER,o.__webglTangentBuffer),Me(c.tangent),u.vertexAttribPointer(c.tangent,4,u.FLOAT,!1,0,0)),c.uv>=0&&(a.geometry.faceVertexUvs[0]?(u.bindBuffer(u.ARRAY_BUFFER,o.__webglUVBuffer),Me(c.uv),u.vertexAttribPointer(c.uv,2,u.FLOAT,!1,0,0)):i.defaultAttributeValues&&u.vertexAttrib2fv(c.uv,i.defaultAttributeValues.uv)),c.uv2>=0&&(a.geometry.faceVertexUvs[1]?(u.bindBuffer(u.ARRAY_BUFFER,o.__webglUV2Buffer),Me(c.uv2),u.vertexAttribPointer(c.uv2,2,u.FLOAT,!1,0,0)):i.defaultAttributeValues&&u.vertexAttrib2fv(c.uv2,i.defaultAttributeValues.uv2)),i.skinning&&c.skinIndex>=0&&c.skinWeight>=0&&(u.bindBuffer(u.ARRAY_BUFFER,o.__webglSkinIndicesBuffer),Me(c.skinIndex),u.vertexAttribPointer(c.skinIndex,4,u.FLOAT,!1,0,0),u.bindBuffer(u.ARRAY_BUFFER,o.__webglSkinWeightsBuffer),Me(c.skinWeight),u.vertexAttribPointer(c.skinWeight,4,u.FLOAT,!1,0,0)),c.lineDistance>=0&&(u.bindBuffer(u.ARRAY_BUFFER,o.__webglLineDistanceBuffer),Me(c.lineDistance),u.vertexAttribPointer(c.lineDistance,1,u.FLOAT,!1,0,0))}if(a instanceof THREE.Mesh)i.wireframe?(Qe(i.wireframeLinewidth),f&&u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,o.__webglLineBuffer),u.drawElements(u.LINES,o.__webglLineCount,u.UNSIGNED_SHORT,0)):(f&&u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,o.__webglFaceBuffer),u.drawElements(u.TRIANGLES,o.__webglFaceCount,u.UNSIGNED_SHORT,0)),m.info.render.calls++,m.info.render.vertices+=o.__webglFaceCount,m.info.render.faces+=o.__webglFaceCount/3;else if(a instanceof THREE.Line){var d=a.type===THREE.LineStrip?u.LINE_STRIP:u.LINES;Qe(i.linewidth),u.drawArrays(d,0,o.__webglLineCount),m.info.render.calls++}else a instanceof THREE.ParticleSystem&&(u.drawArrays(u.POINTS,0,o.__webglParticleCount),m.info.render.calls++,m.info.render.points+=o.__webglParticleCount)}},this.render=function(e,t,r,i){if(t instanceof THREE.Camera!=!1){var o,a,n,s,h,l=e.__lights,c=e.fog;for(R=-1,K=!0,!0===e.autoUpdate&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),j.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),W.setFromMatrix(j),this.autoUpdateObjects&&this.initWebGLObjects(e),Le(this.renderPluginsPre,e,t),m.info.render.calls=0,m.info.render.vertices=0,m.info.render.faces=0,m.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),o=0,a=(h=e.__webglObjects).length;o<a;o++)s=(n=h[o]).object,n.id=o,n.render=!1,s.visible&&((s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)&&s.frustumCulled&&!W.intersectsObject(s)||(qe(s,t),Ue(n),n.render=!0,!0===this.sortObjects&&(null!==s.renderDepth?n.z=s.renderDepth:(q.setFromMatrixPosition(s.matrixWorld),q.applyProjection(j),n.z=q.z))));for(this.sortObjects&&h.sort(Ae),o=0,a=(h=e.__webglObjectsImmediate).length;o<a;o++)(s=(n=h[o]).object).visible&&(qe(s,t),Fe(n));if(e.overrideMaterial){var f=e.overrideMaterial;this.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst),this.setDepthTest(f.depthTest),this.setDepthWrite(f.depthWrite),Ze(f.polygonOffset,f.polygonOffsetFactor,f.polygonOffsetUnits),Pe(e.__webglObjects,!1,"",t,l,c,!0,f),De(e.__webglObjectsImmediate,"",t,l,c,!1,f)}else{f=null;this.setBlending(THREE.NoBlending),Pe(e.__webglObjects,!0,"opaque",t,l,c,!1,f),De(e.__webglObjectsImmediate,"opaque",t,l,c,!1,f),Pe(e.__webglObjects,!1,"transparent",t,l,c,!0,f),De(e.__webglObjectsImmediate,"transparent",t,l,c,!0,f)}Le(this.renderPluginsPost,e,t),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&function(e){e instanceof THREE.WebGLRenderTargetCube?(u.bindTexture(u.TEXTURE_CUBE_MAP,e.__webglTexture),u.generateMipmap(u.TEXTURE_CUBE_MAP),u.bindTexture(u.TEXTURE_CUBE_MAP,null)):(u.bindTexture(u.TEXTURE_2D,e.__webglTexture),u.generateMipmap(u.TEXTURE_2D),u.bindTexture(u.TEXTURE_2D,null))}(r),this.setDepthTest(!0),this.setDepthWrite(!0)}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.renderImmediateObject=function(e,t,r,i,o){var a=We(e,t,r,i,o);x=-1,m.setMaterialFaces(i),o.immediateRenderCallback?o.immediateRenderCallback(a,u,W):o.render((function(e){m.renderBufferImmediate(e,a,i)}))},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;)Ve(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)Ie(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,r=e.__webglObjects.length;t<r;t++){var i=e.__webglObjects[t].object;void 0===i.__webglInit&&(void 0!==i.__webglActive&&Ie(i,e),Ve(i,e)),Be(i)}},this.initMaterial=function(e,t,r,o){var a,n,s,h,l,c,f;e.addEventListener("dispose",pe),e instanceof THREE.MeshDepthMaterial?f="depth":e instanceof THREE.MeshNormalMaterial?f="normal":e instanceof THREE.MeshBasicMaterial?f="basic":e instanceof THREE.MeshLambertMaterial?f="lambert":e instanceof THREE.MeshPhongMaterial?f="phong":e instanceof THREE.LineBasicMaterial?f="basic":e instanceof THREE.LineDashedMaterial?f="dashed":e instanceof THREE.ParticleSystemMaterial&&(f="particle_basic"),f&&function(e,t){e.uniforms=THREE.UniformsUtils.clone(t.uniforms),e.vertexShader=t.vertexShader,e.fragmentShader=t.fragmentShader}(e,THREE.ShaderLib[f]),h=function(e){for(var t=0,r=0,i=0,o=0,a=0,n=e.length;a<n;a++){var s=e[a];s.onlyShadow||!1===s.visible||(s instanceof THREE.DirectionalLight&&t++,s instanceof THREE.PointLight&&r++,s instanceof THREE.SpotLight&&i++,s instanceof THREE.HemisphereLight&&o++)}return{directional:t,point:r,spot:i,hemi:o}}(t),c=function(e){for(var t=0,r=0,i=e.length;r<i;r++){var o=e[r];o.castShadow&&(o instanceof THREE.SpotLight&&t++,o instanceof THREE.DirectionalLight&&!o.shadowCascade&&t++)}return t}(t),l=function(e){if(re&&e&&e.useVertexTexture)return 1024;var t=u.getParameter(u.MAX_VERTEX_UNIFORM_VECTORS),r=Math.floor((t-20)/4);return void 0!==e&&e instanceof THREE.SkinnedMesh&&(r=Math.min(e.bones.length,r))<e.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.bones.length+", this GPU supports just "+r+" (try OpenGL instead of ANGLE)"),r}(o),s={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:r,useFog:e.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:l,useVertexTexture:re&&o&&o.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:h.directional,maxPointLights:h.point,maxSpotLights:h.spot,maxHemiLights:h.hemi,maxShadows:c,shadowMapEnabled:this.shadowMapEnabled&&o.receiveShadow&&c>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},e.program=function(e,t,r,o,a,n,s,h){var l,c,f,p,E,d=[];e?d.push(e):(d.push(t),d.push(r));for(f in n)d.push(f),d.push(n[f]);for(l in s)d.push(l),d.push(s[l]);for(E=d.join(),l=0,c=g.length;l<c;l++){var T=g[l];if(T.code===E)return T.usedTimes++,T.program}var y="SHADOWMAP_TYPE_BASIC";s.shadowMapType===THREE.PCFShadowMap?y="SHADOWMAP_TYPE_PCF":s.shadowMapType===THREE.PCFSoftShadowMap&&(y="SHADOWMAP_TYPE_PCF_SOFT");var R=function(e){var t,r,i=[];for(var o in e)!1!==(t=e[o])&&(r="#define "+o+" "+t,i.push(r));return i.join("\n")}(n);p=u.createProgram();var x,H,_,w,b=["precision "+i+" float;","precision "+i+" int;",R,te?"#define VERTEX_TEXTURES":"",m.gammaInput?"#define GAMMA_INPUT":"",m.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,"#define MAX_BONES "+s.maxBones,s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.vertexColors?"#define USE_COLOR":"",s.skinning?"#define USE_SKINNING":"",s.useVertexTexture?"#define BONE_TEXTURE":"",s.morphTargets?"#define USE_MORPHTARGETS":"",s.morphNormals?"#define USE_MORPHNORMALS":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+y:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),M=["precision "+i+" float;","precision "+i+" int;",s.bumpMap||s.normalMap?"#extension GL_OES_standard_derivatives : enable":"",R,"#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,s.alphaTest?"#define ALPHATEST "+s.alphaTest:"",m.gammaInput?"#define GAMMA_INPUT":"",m.gammaOutput?"#define GAMMA_OUTPUT":"",s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.vertexColors?"#define USE_COLOR":"",s.metal?"#define METAL":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+y:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"),S=Je("vertex",b+r),A=Je("fragment",M+t);u.attachShader(p,S),u.attachShader(p,A),void 0!==h&&u.bindAttribLocation(p,0,h);u.linkProgram(p),!1===u.getProgramParameter(p,u.LINK_STATUS)&&(console.error("Could not initialise shader"),console.error("gl.VALIDATE_STATUS",u.getProgramParameter(p,u.VALIDATE_STATUS)),console.error("gl.getError()",u.getError()));""!==u.getProgramInfoLog(p)&&console.error("gl.getProgramInfoLog()",u.getProgramInfoLog(p));u.deleteShader(A),u.deleteShader(S),p.uniforms={},p.attributes={},x=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],s.useVertexTexture?(x.push("boneTexture"),x.push("boneTextureWidth"),x.push("boneTextureHeight")):x.push("boneGlobalMatrices");for(H in o)x.push(H);for(function(e,t){var r,i,o;for(r=0,i=t.length;r<i;r++)o=t[r],e.uniforms[o]=u.getUniformLocation(e,o)}(p,x),x=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],w=0;w<s.maxMorphTargets;w++)x.push("morphTarget"+w);for(w=0;w<s.maxMorphNormals;w++)x.push("morphNormal"+w);for(_ in a)x.push(_);return function(e,t){var r,i,o;for(r=0,i=t.length;r<i;r++)o=t[r],e.attributes[o]=u.getAttribLocation(e,o)}(p,x),p.id=v++,g.push({program:p,code:E,usedTimes:1}),m.info.memory.programs=g.length,p}(f,e.fragmentShader,e.vertexShader,e.uniforms,e.attributes,e.defines,s,e.index0AttributeName);var p=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;var E="morphTarget";for(n=0;n<this.maxMorphTargets;n++)p[E+n]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;E="morphNormal";for(n=0;n<this.maxMorphNormals;n++)p[E+n]>=0&&e.numSupportedMorphNormals++}for(a in e.uniformsList=[],e.uniforms)e.uniformsList.push([e.uniforms[a],a])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?u.disable(u.CULL_FACE):(t===THREE.FrontFaceDirectionCW?u.frontFace(u.CW):u.frontFace(u.CCW),e===THREE.CullFaceBack?u.cullFace(u.BACK):e===THREE.CullFaceFront?u.cullFace(u.FRONT):u.cullFace(u.FRONT_AND_BACK),u.enable(u.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,r=e.side===THREE.BackSide;w!==t&&(t?u.disable(u.CULL_FACE):u.enable(u.CULL_FACE),w=t),b!==r&&(r?u.frontFace(u.CW):u.frontFace(u.CCW),b=r)},this.setDepthTest=function(e){L!==e&&(e?u.enable(u.DEPTH_TEST):u.disable(u.DEPTH_TEST),L=e)},this.setDepthWrite=function(e){P!==e&&(u.depthMask(e),P=e)},this.setBlending=function(e,t,r,i){e!==M&&(e===THREE.NoBlending?u.disable(u.BLEND):e===THREE.AdditiveBlending?(u.enable(u.BLEND),u.blendEquation(u.FUNC_ADD),u.blendFunc(u.SRC_ALPHA,u.ONE)):e===THREE.SubtractiveBlending?(u.enable(u.BLEND),u.blendEquation(u.FUNC_ADD),u.blendFunc(u.ZERO,u.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(u.enable(u.BLEND),u.blendEquation(u.FUNC_ADD),u.blendFunc(u.ZERO,u.SRC_COLOR)):e===THREE.CustomBlending?u.enable(u.BLEND):(u.enable(u.BLEND),u.blendEquationSeparate(u.FUNC_ADD,u.FUNC_ADD),u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA)),M=e),e===THREE.CustomBlending?(t!==S&&(u.blendEquation(nt(t)),S=t),r===A&&i===C||(u.blendFunc(nt(r),nt(i)),A=r,C=i)):(S=null,A=null,C=null)},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",ue),e.__webglTexture=u.createTexture(),m.info.memory.textures++),u.activeTexture(u.TEXTURE0+t),u.bindTexture(u.TEXTURE_2D,e.__webglTexture),u.pixelStorei(u.UNPACK_FLIP_Y_WEBGL,e.flipY),u.pixelStorei(u.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),u.pixelStorei(u.UNPACK_ALIGNMENT,e.unpackAlignment);var r=e.image,i=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height),o=nt(e.format),a=nt(e.type);$e(u.TEXTURE_2D,e,i);var n,s=e.mipmaps;if(e instanceof THREE.DataTexture)if(s.length>0&&i){for(var h=0,l=s.length;h<l;h++)n=s[h],u.texImage2D(u.TEXTURE_2D,h,o,n.width,n.height,0,o,a,n.data);e.generateMipmaps=!1}else u.texImage2D(u.TEXTURE_2D,0,o,r.width,r.height,0,o,a,r.data);else if(e instanceof THREE.CompressedTexture)for(h=0,l=s.length;h<l;h++)n=s[h],e.format!==THREE.RGBAFormat?u.compressedTexImage2D(u.TEXTURE_2D,h,o,n.width,n.height,0,n.data):u.texImage2D(u.TEXTURE_2D,h,o,n.width,n.height,0,o,a,n.data);else if(s.length>0&&i){for(h=0,l=s.length;h<l;h++)n=s[h],u.texImage2D(u.TEXTURE_2D,h,o,o,a,n);e.generateMipmaps=!1}else u.texImage2D(u.TEXTURE_2D,0,o,o,a,e.image);e.generateMipmaps&&i&&u.generateMipmap(u.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else u.activeTexture(u.TEXTURE0+t),u.bindTexture(u.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t,r,i,o,a,n=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",fe),e.__webglTexture=u.createTexture(),m.info.memory.textures++;var s=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height),h=nt(e.format),l=nt(e.type);if(n){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],u.bindTexture(u.TEXTURE_CUBE_MAP,e.__webglTexture),$e(u.TEXTURE_CUBE_MAP,e,s);for(var c=0;c<6;c++)e.__webglFramebuffer[c]=u.createFramebuffer(),e.__webglRenderbuffer[c]=u.createRenderbuffer(),u.texImage2D(u.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,h,e.width,e.height,0,h,l,null),it(e.__webglFramebuffer[c],e,u.TEXTURE_CUBE_MAP_POSITIVE_X+c),ot(e.__webglRenderbuffer[c],e);s&&u.generateMipmap(u.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=u.createFramebuffer(),e.shareDepthFrom?e.__webglRenderbuffer=e.shareDepthFrom.__webglRenderbuffer:e.__webglRenderbuffer=u.createRenderbuffer(),u.bindTexture(u.TEXTURE_2D,e.__webglTexture),$e(u.TEXTURE_2D,e,s),u.texImage2D(u.TEXTURE_2D,0,h,e.width,e.height,0,h,l,null),it(e.__webglFramebuffer,e,u.TEXTURE_2D),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?u.framebufferRenderbuffer(u.FRAMEBUFFER,u.DEPTH_ATTACHMENT,u.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&u.framebufferRenderbuffer(u.FRAMEBUFFER,u.DEPTH_STENCIL_ATTACHMENT,u.RENDERBUFFER,e.__webglRenderbuffer):ot(e.__webglRenderbuffer,e),s&&u.generateMipmap(u.TEXTURE_2D);n?u.bindTexture(u.TEXTURE_CUBE_MAP,null):u.bindTexture(u.TEXTURE_2D,null),u.bindRenderbuffer(u.RENDERBUFFER,null),u.bindFramebuffer(u.FRAMEBUFFER,null)}e?(t=n?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,r=e.width,i=e.height,o=0,a=0):(t=null,r=N,i=O,o=z,a=B),t!==y&&(u.bindFramebuffer(u.FRAMEBUFFER,t),u.viewport(o,a,r,i),y=t),I=r,k=i},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,r){this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=null,this.material=null,this.uvs=[[]],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(e,t,r){var i,o,a=e.vertices.length,n=(e.faceVertexUvs[0].length,t instanceof THREE.Mesh?t.geometry:t),s=e.vertices,h=n.vertices,l=e.faces,c=n.faces,u=e.faceVertexUvs[0],f=n.faceVertexUvs[0];void 0===r&&(r=0),t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,o=(new THREE.Matrix3).getNormalMatrix(i));for(var p=0,E=h.length;p<E;p++){var d=h[p].clone();i&&d.applyMatrix4(i),s.push(d)}for(p=0,E=c.length;p<E;p++){var m,g,v,T=c[p],y=T.vertexNormals,R=T.vertexColors;(m=new THREE.Face3(T.a+a,T.b+a,T.c+a)).normal.copy(T.normal),o&&m.normal.applyMatrix3(o).normalize();for(var x=0,H=y.length;x<H;x++)g=y[x].clone(),o&&g.applyMatrix3(o).normalize(),m.vertexNormals.push(g);m.color.copy(T.color);for(x=0,H=R.length;x<H;x++)v=R[x],m.vertexColors.push(v.clone());m.materialIndex=T.materialIndex+r,m.centroid.copy(T.centroid),i&&m.centroid.applyMatrix4(i),l.push(m)}for(p=0,E=f.length;p<E;p++){var _=f[p],w=[];for(x=0,H=_.length;x<H;x++)w.push(new THREE.Vector2(_[x].x,_[x].y));u.push(w)}},randomPointInTriangle:function(){var e=new THREE.Vector3;return function(t,r,i){var o=new THREE.Vector3,a=THREE.Math.random16(),n=THREE.Math.random16();a+n>1&&(a=1-a,n=1-n);var s=1-a-n;return o.copy(t),o.multiplyScalar(a),e.copy(r),e.multiplyScalar(n),o.add(e),e.copy(i),e.multiplyScalar(s),o.add(e),o}}(),randomPointInFace:function(e,t,r){var i,o,a;return i=t.vertices[e.a],o=t.vertices[e.b],a=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(i,o,a)},randomPointsInGeometry:function(e,t){var r,i,o,a,n,s=e.faces,h=e.vertices,l=s.length,c=0,u=[];for(i=0;i<l;i++)o=h[(r=s[i]).a],a=h[r.b],n=h[r.c],r._area=THREE.GeometryUtils.triangleArea(o,a,n),c+=r._area,u[i]=c;function f(e){var t=function t(r,i){if(i<r)return r;var o=r+Math.floor((i-r)/2);return u[o]>e?t(r,o-1):u[o]<e?t(o+1,i):o}(0,u.length-1);return t}var p,E=[],d={};for(i=0;i<t;i++)p=f(THREE.Math.random16()*c),E[i]=THREE.GeometryUtils.randomPointInFace(s[p],e,!0),d[p]?d[p]+=1:d[p]=1;return E},triangleArea:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,o){return e.subVectors(i,r),t.subVectors(o,r),e.cross(t),.5*e.length()}}(),center:function(e){e.computeBoundingBox();var t=e.boundingBox,r=new THREE.Vector3;return r.addVectors(t.min,t.max),r.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(r.x,r.y,r.z)),e.computeBoundingBox(),r},triangulateQuads:function(e){var t,r,i,o,a=[],n=[];for(t=0,r=e.faceVertexUvs.length;t<r;t++)n[t]=[];for(t=0,r=e.faces.length;t<r;t++){var s=e.faces[t];for(a.push(s),i=0,o=e.faceVertexUvs.length;i<o;i++)n[i].push(e.faceVertexUvs[i][t])}e.faces=a,e.faceVertexUvs=n,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,r,i){var o=new THREE.ImageLoader;o.crossOrigin=this.crossOrigin;var a=new THREE.Texture(void 0,t),n=o.load(e,(function(){a.needsUpdate=!0,r&&r(a)}));return a.image=n,a.sourceFile=e,a},loadCompressedTexture:function(e,t,r,i){var o=new THREE.CompressedTexture;o.mapping=t;var a=new XMLHttpRequest;return a.onload=function(){var e=a.response,t=THREE.ImageUtils.parseDDS(e,!0);o.format=t.format,o.mipmaps=t.mipmaps,o.image.width=t.width,o.image.height=t.height,o.generateMipmaps=!1,o.needsUpdate=!0,r&&r(o)},a.onerror=i,a.open("GET",e,!0),a.responseType="arraybuffer",a.send(null),o},loadTextureCube:function(e,t,r,i){var o=[];o.loadCount=0;var a=new THREE.Texture;a.image=o,void 0!==t&&(a.mapping=t),a.flipY=!1;for(var n=0,s=e.length;n<s;++n){var h=new Image;o[n]=h,h.onload=function(){o.loadCount+=1,6===o.loadCount&&(a.needsUpdate=!0,r&&r(a))},h.onerror=i,h.crossOrigin=this.crossOrigin,h.src=e[n]}return a},loadCompressedTextureCube:function(e,t,r,i){var o=[];o.loadCount=0;var a=new THREE.CompressedTexture;a.image=o,void 0!==t&&(a.mapping=t),a.flipY=!1,a.generateMipmaps=!1;var n=function(e,t){return function(){var i=e.response,n=THREE.ImageUtils.parseDDS(i,!0);t.format=n.format,t.mipmaps=n.mipmaps,t.width=n.width,t.height=n.height,o.loadCount+=1,6===o.loadCount&&(a.format=n.format,a.needsUpdate=!0,r&&r(a))}};if(e instanceof Array)for(var s=0,h=e.length;s<h;++s){var l={};o[s]=l,(u=new XMLHttpRequest).onload=n(u,l),u.onerror=i;var c=e[s];u.open("GET",c,!0),u.responseType="arraybuffer",u.send(null)}else{var u;c=e;(u=new XMLHttpRequest).onload=function(){var e=u.response,t=THREE.ImageUtils.parseDDS(e,!0);if(t.isCubemap){for(var i=t.mipmaps.length/t.mipmapCount,n=0;n<i;n++){o[n]={mipmaps:[]};for(var s=0;s<t.mipmapCount;s++)o[n].mipmaps.push(t.mipmaps[n*t.mipmapCount+s]),o[n].format=t.format,o[n].width=t.width,o[n].height=t.height}a.format=t.format,a.needsUpdate=!0,r&&r(a)}},u.onerror=i,u.open("GET",c,!0),u.responseType="arraybuffer",u.send(null)}return a},loadDDSTexture:function(e,t,r,i){var o=[];o.loadCount=0;var a=new THREE.CompressedTexture;a.image=o,void 0!==t&&(a.mapping=t),a.flipY=!1,a.generateMipmaps=!1;var n=new XMLHttpRequest;return n.onload=function(){var e=n.response,t=THREE.ImageUtils.parseDDS(e,!0);if(t.isCubemap)for(var i=t.mipmaps.length/t.mipmapCount,s=0;s<i;s++){o[s]={mipmaps:[]};for(var h=0;h<t.mipmapCount;h++)o[s].mipmaps.push(t.mipmaps[s*t.mipmapCount+h]),o[s].format=t.format,o[s].width=t.width,o[s].height=t.height}else a.image.width=t.width,a.image.height=t.height,a.mipmaps=t.mipmaps;a.format=t.format,a.needsUpdate=!0,r&&r(a)},n.onerror=i,n.open("GET",e,!0),n.responseType="arraybuffer",n.send(null),a},parseDDS:function(e,t){var r={mipmaps:[],width:0,height:0,format:null,mipmapCount:1};function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function o(e,t,r,i){for(var o=r*i*4,a=new Uint8Array(e,t,o),n=new Uint8Array(o),s=0,h=0,l=0;l<i;l++)for(var c=0;c<r;c++){var u=a[h],f=a[++h],p=a[++h],E=a[++h];h++,n[s]=p,n[++s]=f,n[++s]=u,n[++s]=E,s++}return n}var a,n=i("DXT1"),s=i("DXT3"),h=i("DXT5"),l=new Int32Array(e,0,31);if(542327876!==l[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),r;if(4&!l[20])return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),r;var c,u=l[21],f=!1;switch(u){case n:a=8,r.format=THREE.RGB_S3TC_DXT1_Format;break;case s:a=16,r.format=THREE.RGBA_S3TC_DXT3_Format;break;case h:a=16,r.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(!(32==l[22]&&16711680&l[23]&&65280&l[24]&&255&l[25]&&4278190080&l[26]))return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",(c=u,String.fromCharCode(255&c,c>>8&255,c>>16&255,c>>24&255))),r;f=!0,a=64,r.format=THREE.RGBAFormat}r.mipmapCount=1,131072&l[2]&&!1!==t&&(r.mipmapCount=Math.max(1,l[7])),r.isCubemap=!!(512&l[28]),r.width=l[4],r.height=l[3];for(var p=l[1]+4,E=r.width,d=r.height,m=r.isCubemap?6:1,g=0;g<m;g++){for(var v=0;v<r.mipmapCount;v++){if(f)var T=(y=o(e,p,E,d)).length;else{T=Math.max(4,E)/4*Math.max(4,d)/4*a;var y=new Uint8Array(e,p,T)}var R={data:y,width:E,height:d};r.mipmaps.push(R),p+=T,E=Math.max(.5*E,1),d=Math.max(.5*d,1)}E=r.width,d=r.height}return r},getNormalMap:function(e,t){var r=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]},i=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t|=1;var o=e.width,a=e.height,n=document.createElement("canvas");n.width=o,n.height=a;var s=n.getContext("2d");s.drawImage(e,0,0);for(var h,l,c=s.getImageData(0,0,o,a).data,u=s.createImageData(o,a),f=u.data,p=0;p<o;p++)for(var E=0;E<a;E++){var d=E-1<0?0:E-1,m=E+1>a-1?a-1:E+1,g=p-1<0?0:p-1,v=p+1>o-1?o-1:p+1,T=[],y=[0,0,c[4*(E*o+p)]/255*t];T.push([-1,0,c[4*(E*o+g)]/255*t]),T.push([-1,-1,c[4*(d*o+g)]/255*t]),T.push([0,-1,c[4*(d*o+p)]/255*t]),T.push([1,-1,c[4*(d*o+v)]/255*t]),T.push([1,0,c[4*(E*o+v)]/255*t]),T.push([1,1,c[4*(m*o+v)]/255*t]),T.push([0,1,c[4*(m*o+p)]/255*t]),T.push([-1,1,c[4*(m*o+g)]/255*t]);for(var R=[],x=T.length,H=0;H<x;H++){var _=T[H],w=T[(H+1)%x];_=r(_,y),w=r(w,y),R.push(i((l=w,[(h=_)[1]*l[2]-h[2]*l[1],h[2]*l[0]-h[0]*l[2],h[0]*l[1]-h[1]*l[0]])))}var b=[0,0,0];for(H=0;H<R.length;H++)b[0]+=R[H][0],b[1]+=R[H][1],b[2]+=R[H][2];b[0]/=R.length,b[1]/=R.length,b[2]/=R.length;var M=4*(E*o+p);f[M]=(b[0]+1)/2*255|0,f[M+1]=(b[1]+1)/2*255|0,f[M+2]=255*b[2]|0,f[M+3]=255}return s.putImageData(u,0,0),n},generateDataTexture:function(e,t,r){for(var i=e*t,o=new Uint8Array(3*i),a=Math.floor(255*r.r),n=Math.floor(255*r.g),s=Math.floor(255*r.b),h=0;h<i;h++)o[3*h]=a,o[3*h+1]=n,o[3*h+2]=s;var l=new THREE.DataTexture(o,e,t,THREE.RGBFormat);return l.needsUpdate=!0,l}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new THREE.Object3D,i=0,o=t.length;i<o;i++)r.add(new THREE.Mesh(e,t[i]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),e.applyMatrix(i),t.remove(e),r.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase(),r=this;r.faces[t]=r.faces[t]||{},r.faces[t][e.cssFontWeight]=r.faces[t][e.cssFontWeight]||{},r.faces[t][e.cssFontWeight][e.cssFontStyle]=e;r.faces[t][e.cssFontWeight][e.cssFontStyle]=e;return e},drawText:function(e){var t,r=this.getFace(),i=this.size/r.resolution,o=0,a=String(e).split(""),n=a.length,s=[];for(t=0;t<n;t++){var h=new THREE.Path,l=this.extractGlyphPoints(a[t],r,i,o,h);o+=l.offset,s.push(l.path)}return{paths:s,offset:o/2}},extractGlyphPoints:function(e,t,r,i,o){var a,n,s,h,l,c,u,f,p,E,d,m,g,v,T,y,R,x,H=[],_=t.glyphs[e]||t.glyphs["?"];if(_){if(_.o)for(l=(h=_._cachedOutline||(_._cachedOutline=_.o.split(" "))).length,c=r,u=r,a=0;a<l;)switch(h[a++]){case"m":f=h[a++]*c+i,p=h[a++]*u,o.moveTo(f,p);break;case"l":f=h[a++]*c+i,p=h[a++]*u,o.lineTo(f,p);break;case"q":if(E=h[a++]*c+i,d=h[a++]*u,v=h[a++]*c+i,T=h[a++]*u,o.quadraticCurveTo(v,T,E,d),x=H[H.length-1])for(m=x.x,g=x.y,n=1,s=this.divisions;n<=s;n++){var w=n/s;THREE.Shape.Utils.b2(w,m,v,E),THREE.Shape.Utils.b2(w,g,T,d)}break;case"b":if(E=h[a++]*c+i,d=h[a++]*u,v=h[a++]*c+i,T=h[a++]*-u,y=h[a++]*c+i,R=h[a++]*-u,o.bezierCurveTo(E,d,v,T,y,R),x=H[H.length-1])for(m=x.x,g=x.y,n=1,s=this.divisions;n<=s;n++)w=n/s,THREE.Shape.Utils.b3(w,m,v,y,E),THREE.Shape.Utils.b3(w,g,T,R,d)}return{offset:_.ha*r,path:o}}}},THREE.FontUtils.generateShapes=function(e,t){var r=void 0!==(t=t||{}).size?t.size:100,i=void 0!==t.curveSegments?t.curveSegments:4,o=void 0!==t.font?t.font:"helvetiker",a=void 0!==t.weight?t.weight:"normal",n=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=r,THREE.FontUtils.divisions=i,THREE.FontUtils.face=o,THREE.FontUtils.weight=a,THREE.FontUtils.style=n;for(var s=THREE.FontUtils.drawText(e).paths,h=[],l=0,c=s.length;l<c;l++)Array.prototype.push.apply(h,s[l].toShapes());return h},function(e){var t=1e-10,r=function(e){for(var t=e.length,r=0,i=t-1,o=0;o<t;i=o++)r+=e[i].x*e[o].y-e[o].x*e[i].y;return.5*r},i=function(e,r,i,o,a,n){var s,h,l,c,u,f,p,E,d,m,g,v,T,y,R;if(h=e[n[r]].x,l=e[n[r]].y,c=e[n[i]].x,u=e[n[i]].y,f=e[n[o]].x,p=e[n[o]].y,t>(c-h)*(p-l)-(u-l)*(f-h))return!1;for(m=f-c,g=p-u,v=h-f,T=l-p,y=c-h,R=u-l,s=0;s<a;s++)if(E=e[n[s]].x,d=e[n[s]].y,!(E===h&&d===l||E===c&&d===u||E===f&&d===p)&&m*(d-u)-g*(E-c)>=-1e-10&&v*(d-p)-T*(E-f)>=-1e-10&&y*(d-l)-R*(E-h)>=-1e-10)return!1;return!0};e.Triangulate=function(e,t){var o=e.length;if(o<3)return null;var a,n,s,h=[],l=[],c=[];if(r(e)>0)for(n=0;n<o;n++)l[n]=n;else for(n=0;n<o;n++)l[n]=o-1-n;var u=o,f=2*u;for(n=u-1;u>2;){if(f--<=0)return console.log("Warning, unable to triangulate polygon!"),t?c:h;if(u<=(a=n)&&(a=0),u<=(n=a+1)&&(n=0),u<=(s=n+1)&&(s=0),i(e,a,n,s,u,l)){var p,E,d,m,g;for(p=l[a],E=l[n],d=l[s],h.push([e[p],e[E],e[d]]),c.push([l[a],l[n],l[s]]),m=n,g=n+1;g<u;m++,g++)l[m]=l[g];f=2*--u}}return t?c:h},e.Triangulate.area=r}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(e){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,r=[];for(t=0;t<=e;t++)r.push(this.getPoint(t/e));return r},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,r=[];for(t=0;t<=e;t++)r.push(this.getPointAt(t/e));return r},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,r,i=[],o=this.getPoint(0),a=0;for(i.push(0),r=1;r<=e;r++)a+=(t=this.getPoint(r/e)).distanceTo(o),i.push(a),o=t;return this.cacheArcLengths=i,i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var r,i=this.getLengths(),o=0,a=i.length;r=t||e*i[a-1];for(var n,s=0,h=a-1;s<=h;)if((n=i[o=Math.floor(s+(h-s)/2)]-r)<0)s=o+1;else{if(!(n>0)){h=o;break}h=o-1}if(i[o=h]==r)return o/(a-1);var l=i[o];return(o+(r-l)/(i[o+1]-l))/(a-1)},THREE.Curve.prototype.getTangent=function(e){var t=1e-4,r=e-t,i=e+t;r<0&&(r=0),i>1&&(i=1);var o=this.getPoint(r);return this.getPoint(i).clone().sub(o).normalize()},THREE.Curve.prototype.getTangentAt=function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,r,i){return 2*(1-e)*(r-t)+2*e*(i-r)},tangentCubicBezier:function(e,t,r,i,o){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*o},tangentSpline:function(e,t,r,i,o){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,r,i,o){var a=.5*(r-e),n=.5*(i-t),s=o*o;return(2*t-2*r+a+n)*(o*s)+(-3*t+3*r-2*a-n)*s+a*o+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t,r=e*this.getLength(),i=this.getCurveLengths(),o=0;o<i.length;){if(i[o]>=r){var a=1-(i[o]-r)/(t=this.curves[o]).getLength();return t.getPointAt(a)}o++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],r=0,i=this.curves.length;for(e=0;e<i;e++)r+=this.curves[e].getLength(),t.push(r);return this.cacheLengths=t,t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,r,i,o,a,n,s,h,l,c=this.getPoints();e=t=Number.NEGATIVE_INFINITY,i=o=Number.POSITIVE_INFINITY;var u=c[0]instanceof THREE.Vector3;for(l=u?new THREE.Vector3:new THREE.Vector2,s=0,h=c.length;s<h;s++)(n=c[s]).x>e?e=n.x:n.x<i&&(i=n.x),n.y>t?t=n.y:n.y<o&&(o=n.y),u&&(n.z>r?r=n.z:n.z<a&&(a=n.z)),l.add(n);var f={minX:i,minY:o,maxX:e,maxY:t,centroid:l.divideScalar(h)};return u&&(f.maxZ=r,f.minZ=a),f},THREE.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,r=0;r<e.length;r++)t.vertices.push(new THREE.Vector3(e[r].x,e[r].y,e[r].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var r,i,o=this.getPoints(e);for(t||(t=this.bends),r=0,i=t.length;r<i;r++)o=this.getWrapPoints(o,t[r]);return o},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var r,i,o=this.getSpacedPoints(e);for(t||(t=this.bends),r=0,i=t.length;r<i;r++)o=this.getWrapPoints(o,t[r]);return o},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var r,i,o,a,n,s,h=this.getBoundingBox();for(r=0,i=e.length;r<i;r++){a=(o=e[r]).x,n=o.y,s=a/h.maxX,s=t.getUtoTmapping(s,a);var l=t.getPoint(s),c=t.getTangent(s);c.set(-c.y,c.x).multiplyScalar(n),o.x=l.x+c.x,o.y=l.y+c.y}return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var r=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})},THREE.Path.prototype.lineTo=function(e,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,o=i[i.length-2],a=i[i.length-1],n=new THREE.LineCurve(new THREE.Vector2(o,a),new THREE.Vector2(e,t));this.curves.push(n),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(e,t,r,i){var o=Array.prototype.slice.call(arguments),a=this.actions[this.actions.length-1].args,n=a[a.length-2],s=a[a.length-1],h=new THREE.QuadraticBezierCurve(new THREE.Vector2(n,s),new THREE.Vector2(e,t),new THREE.Vector2(r,i));this.curves.push(h),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:o})},THREE.Path.prototype.bezierCurveTo=function(e,t,r,i,o,a){var n=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(h,l),new THREE.Vector2(e,t),new THREE.Vector2(r,i),new THREE.Vector2(o,a));this.curves.push(c),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:n})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],o=r[r.length-1],a=[new THREE.Vector2(i,o)];Array.prototype.push.apply(a,e);var n=new THREE.SplineCurve(a);this.curves.push(n),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,r,i,o,a){var n=this.actions[this.actions.length-1].args,s=n[n.length-2],h=n[n.length-1];this.absarc(e+s,t+h,r,i,o,a)},THREE.Path.prototype.absarc=function(e,t,r,i,o,a){this.absellipse(e,t,r,r,i,o,a)},THREE.Path.prototype.ellipse=function(e,t,r,i,o,a,n){var s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1];this.absellipse(e+h,t+l,r,i,o,a,n)},THREE.Path.prototype.absellipse=function(e,t,r,i,o,a,n){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,r,i,o,a,n);this.curves.push(h);var l=h.getPoint(1);s.push(l.x),s.push(l.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var r=[],i=0;i<e;i++)r.push(this.getPoint(i/e));return r},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var r,i,o,a,n,s,h,l,c,u,f,p,E,d,m,g,v,T,y=[];for(r=0,i=this.actions.length;r<i;r++)switch(a=(o=this.actions[r]).action,n=o.args,a){case THREE.PathActions.MOVE_TO:case THREE.PathActions.LINE_TO:y.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(s=n[2],h=n[3],u=n[0],f=n[1],y.length>0?(p=(d=y[y.length-1]).x,E=d.y):(p=(d=this.actions[r-1].args)[d.length-2],E=d[d.length-1]),m=1;m<=e;m++)g=m/e,v=THREE.Shape.Utils.b2(g,p,u,s),T=THREE.Shape.Utils.b2(g,E,f,h),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.BEZIER_CURVE_TO:for(s=n[4],h=n[5],u=n[0],f=n[1],l=n[2],c=n[3],y.length>0?(p=(d=y[y.length-1]).x,E=d.y):(p=(d=this.actions[r-1].args)[d.length-2],E=d[d.length-1]),m=1;m<=e;m++)g=m/e,v=THREE.Shape.Utils.b3(g,p,u,l,s),T=THREE.Shape.Utils.b3(g,E,f,c,h),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.CSPLINE_THRU:d=this.actions[r-1].args;var R=[new THREE.Vector2(d[d.length-2],d[d.length-1])],x=e*n[0].length;R=R.concat(n[0]);var H=new THREE.SplineCurve(R);for(m=1;m<=x;m++)y.push(H.getPointAt(m/x));break;case THREE.PathActions.ARC:var _=n[0],w=n[1],b=n[2],M=n[3],S=n[4],A=!!n[5],C=S-M,L=2*e;for(m=1;m<=L;m++)g=m/L,A||(g=1-g),P=M+g*C,v=_+b*Math.cos(P),T=w+b*Math.sin(P),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.ELLIPSE:_=n[0],w=n[1];var P,D=n[2],F=n[3];M=n[4],S=n[5],A=!!n[6],C=S-M,L=2*e;for(m=1;m<=L;m++)g=m/L,A||(g=1-g),P=M+g*C,v=_+D*Math.cos(P),T=w+F*Math.sin(P),y.push(new THREE.Vector2(v,T))}var U=y[y.length-1];return Math.abs(U.x-y[0].x)<1e-10&&Math.abs(U.y-y[0].y)<1e-10&&y.splice(y.length-1,1),t&&y.push(y[0]),y},THREE.Path.prototype.toShapes=function(e){function t(e,t){for(var r=t.length,i=!1,o=r-1,a=0;a<r;o=a++){var n=t[o],s=t[a],h=s.x-n.x,l=s.y-n.y;if(Math.abs(l)>1e-10){if(l<0&&(n=t[a],h=-h,s=t[o],l=-l),e.y<n.y||e.y>s.y)continue;if(e.y==n.y){if(e.x==n.x)return!0}else{var c=l*(e.x-n.x)-h*(e.y-n.y);if(0==c)return!0;if(c<0)continue;i=!i}}else{if(e.y!=n.y)continue;if(s.x<=e.x&&e.x<=n.x||n.x<=e.x&&e.x<=s.x)return!0}}return i}var r,i,o,a,n,s=[],h=new THREE.Path;for(r=0,i=this.actions.length;r<i;r++)n=(o=this.actions[r]).args,(a=o.action)==THREE.PathActions.MOVE_TO&&0!=h.actions.length&&(s.push(h),h=new THREE.Path),h[a].apply(h,n);if(0!=h.actions.length&&s.push(h),0==s.length)return[];var l,c,u,f=[];if(1==s.length)return c=s[0],(u=new THREE.Shape).actions=c.actions,u.curves=c.curves,f.push(u),f;var p=!THREE.Shape.Utils.isClockWise(s[0].getPoints());p=e?!p:p;var E,d,m,g,v=[],T=[],y=[],R=0;for(T[R]=void 0,y[R]=[],r=0,i=s.length;r<i;r++)E=(c=s[r]).getPoints(),l=THREE.Shape.Utils.isClockWise(E),(l=e?!l:l)?(!p&&T[R]&&R++,T[R]={s:new THREE.Shape,p:E},T[R].s.actions=c.actions,T[R].s.curves=c.curves,p&&R++,y[R]=[]):y[R].push({h:c,p:E[0]});if(T.length>1){for(var x=!1,H=[],_=0,w=T.length;_<w;_++)v[_]=[];for(_=0,w=T.length;_<w;_++){T[_];for(var b=y[_],M=0;M<b.length;M++){for(var S=b[M],A=!0,C=0;C<T.length;C++)t(S.p,T[C].p)&&(_!=C&&H.push({froms:_,tos:C,hole:M}),A?(A=!1,v[C].push(S)):x=!0);A&&v[_].push(S)}}H.length>0&&(x||(y=v))}for(r=0,i=T.length;r<i;r++)for(u=T[r].s,f.push(u),m=0,g=(d=y[r]).length;m<g;m++)u.holes.push(d[m].h);return f},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;t<r;t++)i[t]=this.holes[t].getTransformedPoints(e,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;t<r;t++)i[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={triangulateShape:function(e,t){function r(e,t,r){return e.x!=t.x?e.x<t.x?e.x<=r.x&&r.x<=t.x:t.x<=r.x&&r.x<=e.x:e.y<t.y?e.y<=r.y&&r.y<=t.y:t.y<=r.y&&r.y<=e.y}function i(e,t,i,o,a){var n=t.x-e.x,s=t.y-e.y,h=o.x-i.x,l=o.y-i.y,c=e.x-i.x,u=e.y-i.y,f=s*h-n*l,p=s*c-n*u;if(Math.abs(f)>1e-10){var E;if(f>0){if(p<0||p>f)return[];if((E=l*c-h*u)<0||E>f)return[]}else{if(p>0||p<f)return[];if((E=l*c-h*u)>0||E<f)return[]}if(0==E)return!a||0!=p&&p!=f?[e]:[];if(E==f)return!a||0!=p&&p!=f?[t]:[];if(0==p)return[i];if(p==f)return[o];var d=E/f;return[{x:e.x+d*n,y:e.y+d*s}]}if(0!=p||l*c!=h*u)return[];var m,g,v,T,y,R,x,H,_=0==n&&0==s,w=0==h&&0==l;return _&&w?e.x!=i.x||e.y!=i.y?[]:[e]:_?r(i,o,e)?[e]:[]:w?r(e,t,i)?[i]:[]:(0!=n?(e.x<t.x?(m=e,v=e.x,g=t,T=t.x):(m=t,v=t.x,g=e,T=e.x),i.x<o.x?(y=i,x=i.x,R=o,H=o.x):(y=o,x=o.x,R=i,H=i.x)):(e.y<t.y?(m=e,v=e.y,g=t,T=t.y):(m=t,v=t.y,g=e,T=e.y),i.y<o.y?(y=i,x=i.y,R=o,H=o.y):(y=o,x=o.y,R=i,H=i.y)),v<=x?T<x?[]:T==x?a?[]:[y]:T<=H?[y,g]:[y,R]:v>H?[]:v==H?a?[]:[m]:T<=H?[m,g]:[m,R])}function o(e,t,r,i){var o=t.x-e.x,a=t.y-e.y,n=r.x-e.x,s=r.y-e.y,h=i.x-e.x,l=i.y-e.y,c=o*s-a*n,u=o*l-a*h;if(Math.abs(c)>1e-10){var f=h*s-l*n;return c>0?u>=0&&f>=0:u>=0||f>=0}return u>0}for(var a,n,s,h,l,c,u={},f=e.concat(),p=0,E=t.length;p<E;p++)Array.prototype.push.apply(f,t[p]);for(a=0,n=f.length;a<n;a++)void 0!==u[l=f[a].x+":"+f[a].y]&&console.log("Duplicate point",l),u[l]=a;var d=function(e,t){var r,a=e.concat();function n(e,t){var i=a.length-1,n=e-1;n<0&&(n=i);var s=e+1;s>i&&(s=0);var h=o(a[e],a[n],a[s],r[t]);if(!h)return!1;var l=r.length-1,c=t-1;c<0&&(c=l);var u=t+1;return u>l&&(u=0),!!(h=o(r[t],r[c],r[u],a[e]))}function s(e,t){var r,o;for(r=0;r<a.length;r++)if(o=r+1,o%=a.length,i(e,t,a[r],a[o],!0).length>0)return!0;return!1}var h=[];function l(e,r){var o,a,n,s;for(o=0;o<h.length;o++)for(a=t[h[o]],n=0;n<a.length;n++)if(s=n+1,s%=a.length,i(e,r,a[n],a[s],!0).length>0)return!0;return!1}for(var c,u,f,p,E,d,m,g,v,T,y=[],R=0,x=t.length;R<x;R++)h.push(R);for(var H=2*h.length;h.length>0;){if(--H<0){console.log("Infinite Loop! Holes left:"+h.length+", Probably Hole outside Shape!");break}for(u=0;u<a.length;u++){f=a[u],c=-1;for(R=0;R<h.length;R++)if(E=h[R],void 0===y[d=f.x+":"+f.y+":"+E]){r=t[E];for(var _=0;_<r.length;_++)if(p=r[_],n(u,_)&&!s(f,p)&&!l(f,p)){c=_,h.splice(R,1),m=a.slice(0,u+1),g=a.slice(u),v=r.slice(c),T=r.slice(0,c+1),a=m.concat(v).concat(T).concat(g);break}if(c>=0)break;y[d]=!0}if(c>=0)break}}return a}(e,t),m=THREE.FontUtils.Triangulate(d,!1);for(a=0,n=m.length;a<n;a++)for(h=m[a],s=0;s<3;s++)void 0!==(c=u[l=h[s].x+":"+h[s].y])&&(h[s]=c);return m.concat()},isClockWise:function(e){return THREE.FontUtils.Triangulate.area(e)<0},b2p0:function(e,t){var r=1-e;return r*r*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,r,i){return this.b2p0(e,t)+this.b2p1(e,r)+this.b2p2(e,i)},b3p0:function(e,t){var r=1-e;return r*r*r*t},b3p1:function(e,t){var r=1-e;return 3*r*r*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,r,i,o){return this.b3p0(e,t)+this.b3p1(e,r)+this.b3p2(e,i)+this.b3p3(e,o)}},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,r)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.CubicBezierCurve=function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,r)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.SplineCurve=function(e){this.points=null==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t,r,i,o=new THREE.Vector2,a=[],n=this.points;return i=(t=(n.length-1)*e)-(r=Math.floor(t)),a[0]=0==r?r:r-1,a[1]=r,a[2]=r>n.length-2?n.length-1:r+1,a[3]=r>n.length-3?n.length-1:r+2,o.x=THREE.Curve.Utils.interpolate(n[a[0]].x,n[a[1]].x,n[a[2]].x,n[a[3]].x,i),o.y=THREE.Curve.Utils.interpolate(n[a[0]].y,n[a[1]].y,n[a[2]].y,n[a[3]].y,i),o},THREE.EllipseCurve=function(e,t,r,i,o,a,n){this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=o,this.aEndAngle=a,this.aClockwise=n},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t,r=this.aEndAngle-this.aStartAngle;r<0&&(r+=2*Math.PI),r>2*Math.PI&&(r-=2*Math.PI),t=!0===this.aClockwise?this.aEndAngle+(1-e)*(2*Math.PI-r):this.aStartAngle+e*r;var i=this.aX+this.xRadius*Math.cos(t),o=this.aY+this.yRadius*Math.sin(t);return new THREE.Vector2(i,o)},THREE.ArcCurve=function(e,t,r,i,o,a){THREE.EllipseCurve.call(this,e,t,r,r,i,o,a)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create((function(e,t){this.v1=e,this.v2=t}),(function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t})),THREE.QuadraticBezierCurve3=THREE.Curve.create((function(e,t,r){this.v0=e,this.v1=t,this.v2=r}),(function(e){var t,r,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),i=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,r,i)})),THREE.CubicBezierCurve3=THREE.Curve.create((function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i}),(function(e){var t,r,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),i=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,r,i)})),THREE.SplineCurve3=THREE.Curve.create((function(e){this.points=null==e?[]:e}),(function(e){var t,r,i,o=new THREE.Vector3,a=[],n=this.points;i=(t=(n.length-1)*e)-(r=Math.floor(t)),a[0]=0==r?r:r-1,a[1]=r,a[2]=r>n.length-2?n.length-1:r+1,a[3]=r>n.length-3?n.length-1:r+2;var s=n[a[0]],h=n[a[1]],l=n[a[2]],c=n[a[3]];return o.x=THREE.Curve.Utils.interpolate(s.x,h.x,l.x,c.x,i),o.y=THREE.Curve.Utils.interpolate(s.y,h.y,l.y,c.y,i),o.z=THREE.Curve.Utils.interpolate(s.z,h.z,l.z,c.z,i),o})),THREE.ClosedSplineCurve3=THREE.Curve.create((function(e){this.points=null==e?[]:e}),(function(e){var t,r,i,o=new THREE.Vector3,a=[],n=this.points;return i=(t=(n.length-0)*e)-(r=Math.floor(t)),r+=r>0?0:(Math.floor(Math.abs(r)/n.length)+1)*n.length,a[0]=(r-1)%n.length,a[1]=r%n.length,a[2]=(r+1)%n.length,a[3]=(r+2)%n.length,o.x=THREE.Curve.Utils.interpolate(n[a[0]].x,n[a[1]].x,n[a[2]].x,n[a[3]].x,i),o.y=THREE.Curve.Utils.interpolate(n[a[0]].y,n[a[1]].y,n[a[2]].y,n[a[3]].y,i),o.z=THREE.Curve.Utils.interpolate(n[a[0]].z,n[a[1]].z,n[a[2]].z,n[a[3]].z,i),o})),THREE.AnimationHandler=function(){var e=[],t={},r={update:function(t){for(var r=0;r<e.length;r++)e[r].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){var r=e.indexOf(t);-1!==r&&e.splice(r,1)},add:function(e){void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e,o(e)},get:function(e){if("string"==typeof e)return t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null)},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var r=0;r<e.bones.length;r++)t.push(e.bones[r]);else i(e,t);return t}},i=function(e,t){t.push(e);for(var r=0;r<e.children.length;r++)i(e.children[r],t)},o=function(e){if(!0!==e.initialized){for(var t=0;t<e.hierarchy.length;t++){for(var r=0;r<e.hierarchy[t].keys.length;r++)if(e.hierarchy[t].keys[r].time<0&&(e.hierarchy[t].keys[r].time=0),void 0!==e.hierarchy[t].keys[r].rot&&!(e.hierarchy[t].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[t].keys[r].rot;e.hierarchy[t].keys[r].rot=new THREE.Quaternion(i[0],i[1],i[2],i[3])}if(e.hierarchy[t].keys.length&&void 0!==e.hierarchy[t].keys[0].morphTargets){var o={};for(r=0;r<e.hierarchy[t].keys.length;r++)for(var a=0;a<e.hierarchy[t].keys[r].morphTargets.length;a++){o[s=e.hierarchy[t].keys[r].morphTargets[a]]=-1}e.hierarchy[t].usedMorphTargets=o;for(r=0;r<e.hierarchy[t].keys.length;r++){var n={};for(var s in o){for(a=0;a<e.hierarchy[t].keys[r].morphTargets.length;a++)if(e.hierarchy[t].keys[r].morphTargets[a]===s){n[s]=e.hierarchy[t].keys[r].morphTargetsInfluences[a];break}a===e.hierarchy[t].keys[r].morphTargets.length&&(n[s]=0)}e.hierarchy[t].keys[r].morphTargetsInfluences=n}}for(r=1;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].time===e.hierarchy[t].keys[r-1].time&&(e.hierarchy[t].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].index=r}e.initialized=!0}};return r.LINEAR=0,r.CATMULLROM=1,r.CATMULLROM_FORWARD=2,r}(),THREE.Animation=function(e,t){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype.play=function(e){this.currentTime=void 0!==e?e:0,!1===this.isPlaying&&(this.isPlaying=!0,this.reset(),this.update(0)),this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.reset=function(){for(var e=0,t=this.hierarchy.length;e<t;e++){var r=this.hierarchy[e];r.matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={},r.animationCache.prevKey={pos:0,rot:0,scl:0},r.animationCache.nextKey={pos:0,rot:0,scl:0},r.animationCache.originalMatrix=r instanceof THREE.Bone?r.skinMatrix:r.matrix);var i=r.animationCache.prevKey,o=r.animationCache.nextKey;i.pos=this.data.hierarchy[e].keys[0],i.rot=this.data.hierarchy[e].keys[0],i.scl=this.data.hierarchy[e].keys[0],o.pos=this.getNextKeyWith("pos",e,1),o.rot=this.getNextKeyWith("rot",e,1),o.scl=this.getNextKeyWith("scl",e,1)}},THREE.Animation.prototype.update=function(){var e=[],t=new THREE.Vector3,r=function(e,t){var r,o,a,n,s,h,l,c,u,f=[],p=[];return a=(r=(e.length-1)*t)-(o=Math.floor(r)),f[0]=0===o?o:o-1,f[1]=o,f[2]=o>e.length-2?o:o+1,f[3]=o>e.length-3?o:o+2,h=e[f[0]],l=e[f[1]],c=e[f[2]],u=e[f[3]],s=a*(n=a*a),p[0]=i(h[0],l[0],c[0],u[0],a,n,s),p[1]=i(h[1],l[1],c[1],u[1],a,n,s),p[2]=i(h[2],l[2],c[2],u[2],a,n,s),p},i=function(e,t,r,i,o,a,n){var s=.5*(r-e),h=.5*(i-t);return(2*(t-r)+s+h)*n+(-3*(t-r)-2*s-h)*a+s*o+t};return function(i){if(!1!==this.isPlaying){var o;this.currentTime+=i*this.timeScale;var a=["pos","rot","scl"],n=this.data.length;if(!0===this.loop&&this.currentTime>n)this.currentTime%=n,this.reset();else if(!1===this.loop&&this.currentTime>n)return void this.stop();this.currentTime=Math.min(this.currentTime,n);for(var s=0,h=this.hierarchy.length;s<h;s++)for(var l=this.hierarchy[s],c=l.animationCache,u=0;u<3;u++){var f=a[u],p=c.prevKey[f],E=c.nextKey[f];if(E.time<=this.currentTime){for(p=this.data.hierarchy[s].keys[0],E=this.getNextKeyWith(f,s,1);E.time<this.currentTime&&E.index>p.index;)p=E,E=this.getNextKeyWith(f,s,E.index+1);c.prevKey[f]=p,c.nextKey[f]=E}l.matrixAutoUpdate=!0,l.matrixWorldNeedsUpdate=!0;var d=(this.currentTime-p.time)/(E.time-p.time),m=p[f],g=E[f];if(d<0&&(d=0),d>1&&(d=1),"pos"===f){if(o=l.position,this.interpolationType===THREE.AnimationHandler.LINEAR)o.x=m[0]+(g[0]-m[0])*d,o.y=m[1]+(g[1]-m[1])*d,o.z=m[2]+(g[2]-m[2])*d;else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){e[0]=this.getPrevKeyWith("pos",s,p.index-1).pos,e[1]=m,e[2]=g,e[3]=this.getNextKeyWith("pos",s,E.index+1).pos;var v=r(e,d=.33*d+.33);if(o.x=v[0],o.y=v[1],o.z=v[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){var T=r(e,1.01*d);t.set(T[0],T[1],T[2]),t.sub(o),t.y=0,t.normalize();var y=Math.atan2(t.x,t.z);l.rotation.set(0,y,0)}}}else"rot"===f?THREE.Quaternion.slerp(m,g,l.quaternion,d):"scl"===f&&((o=l.scale).x=m[0]+(g[0]-m[0])*d,o.y=m[1]+(g[1]-m[1])*d,o.z=m[2]+(g[2]-m[2])*d)}}}}(),THREE.Animation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r=r<i.length-1?r:i.length-1:r%=i.length;r<i.length;r++)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[i.length-1]},THREE.KeyFrameAnimation=function(e,t){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0;for(var r=0,i=this.hierarchy.length;r<i;r++){var o=this.data.hierarchy[r].keys,a=this.data.hierarchy[r].sids,n=this.hierarchy[r];if(o.length&&a){for(var s=0;s<a.length;s++){var h=a[s],l=this.getNextKeyWith(h,r,0);l&&l.apply(h)}n.matrixAutoUpdate=!1,this.data.hierarchy[r].node.updateMatrix(),n.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e){if(this.currentTime=void 0!==e?e:0,!1===this.isPlaying){this.isPlaying=!0;var t,r,i,o=this.hierarchy.length;for(t=0;t<o;t++){r=this.hierarchy[t],void 0===(i=this.data.hierarchy[t]).animationCache&&(i.animationCache={},i.animationCache.prevKey=null,i.animationCache.nextKey=null,i.animationCache.originalMatrix=r instanceof THREE.Bone?r.skinMatrix:r.matrix);var a=this.data.hierarchy[t].keys;a.length&&(i.animationCache.prevKey=a[0],i.animationCache.nextKey=a[1],this.startTime=Math.min(a[0].time,this.startTime),this.endTime=Math.max(a[a.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],r=this.data.hierarchy[e];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;t instanceof THREE.Bone?(i.copy(t.skinMatrix),t.skinMatrix=i):(i.copy(t.matrix),t.matrix=i),delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(!1!==this.isPlaying){this.currentTime+=e*this.timeScale;var t=this.data.length;!0===this.loop&&this.currentTime>t&&(this.currentTime%=t),this.currentTime=Math.min(this.currentTime,t);for(var r=0,i=this.hierarchy.length;r<i;r++){var o=this.hierarchy[r],a=this.data.hierarchy[r],n=a.keys,s=a.animationCache;if(n.length){var h=s.prevKey,l=s.nextKey;if(l.time<=this.currentTime){for(;l.time<this.currentTime&&l.index>h.index;)l=n[(h=l).index+1];s.prevKey=h,s.nextKey=l}l.time>=this.currentTime?h.interpolate(l,this.currentTime):h.interpolate(l,l.time),this.data.hierarchy[r].node.updateMatrix(),o.matrixWorldNeedsUpdate=!0}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r%=i.length;r<i.length;r++)if(i[r].hasTarget(e))return i[r];return i[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=r>=0?r:r+i.length;r>=0;r--)if(i[r].hasTarget(e))return i[r];return i[i.length-1]},THREE.MorphAnimation=function(e){this.mesh=e,this.frames=e.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.isPlaying=!1},THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var e=0,t=0;return function(r){if(!1!==this.isPlaying){this.currentTime+=r,!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration);var i=this.duration/this.frames,o=Math.floor(this.currentTime/i);o!=t&&(this.mesh.morphTargetInfluences[e]=0,this.mesh.morphTargetInfluences[t]=1,this.mesh.morphTargetInfluences[o]=0,e=t,t=o),this.mesh.morphTargetInfluences[o]=this.currentTime%i/i,this.mesh.morphTargetInfluences[e]=1-this.mesh.morphTargetInfluences[o]}}}()},THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this);var i=90,o=new THREE.PerspectiveCamera(i,1,e,t);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(1,0,0)),this.add(o);var a=new THREE.PerspectiveCamera(i,1,e,t);a.up.set(0,-1,0),a.lookAt(new THREE.Vector3(-1,0,0)),this.add(a);var n=new THREE.PerspectiveCamera(i,1,e,t);n.up.set(0,0,1),n.lookAt(new THREE.Vector3(0,1,0)),this.add(n);var s=new THREE.PerspectiveCamera(i,1,e,t);s.up.set(0,0,-1),s.lookAt(new THREE.Vector3(0,-1,0)),this.add(s);var h=new THREE.PerspectiveCamera(i,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,1)),this.add(h);var l=new THREE.PerspectiveCamera(i,1,e,t);l.up.set(0,-1,0),l.lookAt(new THREE.Vector3(0,0,-1)),this.add(l),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var r=this.renderTarget,i=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,e.render(t,o,r),r.activeCubeFace=1,e.render(t,a,r),r.activeCubeFace=2,e.render(t,n,r),r.activeCubeFace=3,e.render(t,s,r),r.activeCubeFace=4,e.render(t,h,r),r.generateMipmaps=i,r.activeCubeFace=5,e.render(t,l,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,r,i,o,a,n){THREE.Camera.call(this),this.fov=r,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,a,n),this.cameraP=new THREE.PerspectiveCamera(r,e/t,i,o),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.fov,t=this.cameraP.aspect,r=(this.cameraP.near+this.cameraP.far)/2,i=Math.tan(e/2)*r,o=2*i*t/2;i/=this.zoom,o/=this.zoom,this.cameraO.left=-o,this.cameraO.right=o,this.cameraO.top=i,this.cameraO.bottom=-i,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var r=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(r),r},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.BoxGeometry=function(e,t,r,i,o,a){THREE.Geometry.call(this);var n=this;this.width=e,this.height=t,this.depth=r,this.widthSegments=i||1,this.heightSegments=o||1,this.depthSegments=a||1;var s=this.width/2,h=this.height/2,l=this.depth/2;function c(e,t,r,i,o,a,s,h){var l,c,u,f=n.widthSegments,p=n.heightSegments,E=o/2,d=a/2,m=n.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?l="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(l="y",p=n.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(l="x",f=n.depthSegments);var g=f+1,v=p+1,T=o/f,y=a/p,R=new THREE.Vector3;for(R[l]=s>0?1:-1,u=0;u<v;u++)for(c=0;c<g;c++){var x=new THREE.Vector3;x[e]=(c*T-E)*r,x[t]=(u*y-d)*i,x[l]=s,n.vertices.push(x)}for(u=0;u<p;u++)for(c=0;c<f;c++){var H=c+g*u,_=c+g*(u+1),w=c+1+g*(u+1),b=c+1+g*u,M=new THREE.Vector2(c/f,1-u/p),S=new THREE.Vector2(c/f,1-(u+1)/p),A=new THREE.Vector2((c+1)/f,1-(u+1)/p),C=new THREE.Vector2((c+1)/f,1-u/p),L=new THREE.Face3(H+m,_+m,b+m);L.normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,n.faces.push(L),n.faceVertexUvs[0].push([M,S,C]),(L=new THREE.Face3(_+m,w+m,b+m)).normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,n.faces.push(L),n.faceVertexUvs[0].push([S.clone(),A,C.clone()])}}c("z","y",-1,-1,this.depth,this.height,s,0),c("z","y",1,-1,this.depth,this.height,-s,1),c("x","z",1,1,this.width,this.depth,h,2),c("x","z",1,-1,this.width,this.depth,-h,3),c("x","y",1,-1,this.width,this.height,l,4),c("x","y",-1,-1,this.width,this.height,-l,5),this.computeCentroids(),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.radius=e=e||50,this.segments=t=void 0!==t?Math.max(3,t):8,this.thetaStart=r=void 0!==r?r:0,this.thetaLength=i=void 0!==i?i:2*Math.PI;var o,a=[],n=new THREE.Vector3,s=new THREE.Vector2(.5,.5);for(this.vertices.push(n),a.push(s),o=0;o<=t;o++){var h=new THREE.Vector3,l=r+o/t*i;h.x=e*Math.cos(l),h.y=e*Math.sin(l),this.vertices.push(h),a.push(new THREE.Vector2((h.x/e+1)/2,(h.y/e+1)/2))}var c=new THREE.Vector3(0,0,1);for(o=1;o<=t;o++){var u=o,f=o+1;this.faces.push(new THREE.Face3(u,f,0,[c.clone(),c.clone(),c.clone()])),this.faceVertexUvs[0].push([a[o].clone(),a[o+1].clone(),s.clone()])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=THREE.BoxGeometry,THREE.CylinderGeometry=function(e,t,r,i,o,a){THREE.Geometry.call(this),this.radiusTop=e=void 0!==e?e:20,this.radiusBottom=t=void 0!==t?t:20,this.height=r=void 0!==r?r:100,this.radialSegments=i=i||8,this.heightSegments=o=o||1,this.openEnded=a=void 0!==a&&a;var n,s,h=r/2,l=[],c=[];for(s=0;s<=o;s++){var u=[],f=[],p=s/o,E=p*(t-e)+e;for(n=0;n<=i;n++){var d=n/i,m=new THREE.Vector3;m.x=E*Math.sin(d*Math.PI*2),m.y=-p*r+h,m.z=E*Math.cos(d*Math.PI*2),this.vertices.push(m),u.push(this.vertices.length-1),f.push(new THREE.Vector2(d,1-p))}l.push(u),c.push(f)}var g,v,T=(t-e)/r;for(n=0;n<i;n++)for(0!==e?(g=this.vertices[l[0][n]].clone(),v=this.vertices[l[0][n+1]].clone()):(g=this.vertices[l[1][n]].clone(),v=this.vertices[l[1][n+1]].clone()),g.setY(Math.sqrt(g.x*g.x+g.z*g.z)*T).normalize(),v.setY(Math.sqrt(v.x*v.x+v.z*v.z)*T).normalize(),s=0;s<o;s++){var y=l[s][n],R=l[s+1][n],x=l[s+1][n+1],H=l[s][n+1],_=g.clone(),w=g.clone(),b=v.clone(),M=v.clone(),S=c[s][n].clone(),A=c[s+1][n].clone(),C=c[s+1][n+1].clone(),L=c[s][n+1].clone();this.faces.push(new THREE.Face3(y,R,H,[_,w,M])),this.faceVertexUvs[0].push([S,A,L]),this.faces.push(new THREE.Face3(R,x,H,[w.clone(),b,M.clone()])),this.faceVertexUvs[0].push([A.clone(),C,L.clone()])}if(!1===a&&e>0)for(this.vertices.push(new THREE.Vector3(0,h,0)),n=0;n<i;n++){y=l[0][n],R=l[0][n+1],x=this.vertices.length-1,_=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),b=new THREE.Vector3(0,1,0),S=c[0][n].clone(),A=c[0][n+1].clone(),C=new THREE.Vector2(A.x,0);this.faces.push(new THREE.Face3(y,R,x,[_,w,b])),this.faceVertexUvs[0].push([S,A,C])}if(!1===a&&t>0)for(this.vertices.push(new THREE.Vector3(0,-h,0)),n=0;n<i;n++){y=l[s][n+1],R=l[s][n],x=this.vertices.length-1,_=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,-1,0),b=new THREE.Vector3(0,-1,0),S=c[s][n+1].clone(),A=c[s][n].clone(),C=new THREE.Vector2(A.x,1);this.faces.push(new THREE.Face3(y,R,x,[_,w,b])),this.faceVertexUvs[0].push([S,A,C])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){void 0!==e?(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()):e=[]},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,i=0;i<r;i++){var o=e[i];this.addShape(o,t)}},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){var r,i,o,a,n,s,h,l,c=void 0!==t.amount?t.amount:100,u=void 0!==t.bevelThickness?t.bevelThickness:6,f=void 0!==t.bevelSize?t.bevelSize:u-2,p=void 0!==t.bevelSegments?t.bevelSegments:3,E=void 0===t.bevelEnabled||t.bevelEnabled,d=void 0!==t.curveSegments?t.curveSegments:12,m=void 0!==t.steps?t.steps:1,g=t.extrudePath,v=!1,T=t.material,y=t.extrudeMaterial,R=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;this.shapebb;g&&(r=g.getSpacedPoints(m),v=!0,E=!1,i=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(g,m,!1),o=new THREE.Vector3,a=new THREE.Vector3,n=new THREE.Vector3),E||(p=0,u=0,f=0);var x=this,H=this.vertices.length,_=e.extractPoints(d),w=_.shape,b=_.holes,M=!THREE.Shape.Utils.isClockWise(w);if(M){for(w=w.reverse(),h=0,l=b.length;h<l;h++)s=b[h],THREE.Shape.Utils.isClockWise(s)&&(b[h]=s.reverse());M=!1}var S=THREE.Shape.Utils.triangulateShape(w,b),A=w;for(h=0,l=b.length;h<l;h++)s=b[h],w=w.concat(s);function C(e,t,r){return t||console.log("die"),t.clone().multiplyScalar(r).add(e)}var L,P,D,F,U,V,z=w.length,B=S.length;A.length,Math.PI;function N(e,t,r){var i,o,a=1e-10,n=THREE.Math.sign,s=1,h=e.x-t.x,l=e.y-t.y,c=r.x-e.x,u=r.y-e.y,f=h*h+l*l,p=h*u-l*c;if(Math.abs(p)>a){var E=Math.sqrt(f),d=Math.sqrt(c*c+u*u),m=t.x-l/E,g=t.y+h/E,v=((r.x-u/d-m)*u-(r.y+c/d-g)*c)/(h*u-l*c),T=(i=m+h*v-e.x)*i+(o=g+l*v-e.y)*o;if(T<=2)return new THREE.Vector2(i,o);s=Math.sqrt(T/2)}else{var y=!1;h>a?c>a&&(y=!0):h<-1e-10?c<-1e-10&&(y=!0):n(l)==n(u)&&(y=!0),y?(i=-l,o=h,s=Math.sqrt(f)):(i=h,o=l,s=Math.sqrt(f/2))}return new THREE.Vector2(i/s,o/s)}for(var O=[],I=0,k=A.length,G=k-1,W=I+1;I<k;I++,G++,W++){G===k&&(G=0),W===k&&(W=0);A[I],A[G],A[W];O[I]=N(A[I],A[G],A[W])}var j,X,q=[],Y=O.concat();for(h=0,l=b.length;h<l;h++){for(s=b[h],j=[],I=0,G=(k=s.length)-1,W=I+1;I<k;I++,G++,W++)G===k&&(G=0),W===k&&(W=0),j[I]=N(s[I],s[G],s[W]);q.push(j),Y=Y.concat(j)}for(L=0;L<p;L++){for(F=u*(1-(D=L/p)),P=f*Math.sin(D*Math.PI/2),I=0,k=A.length;I<k;I++)Q((U=C(A[I],O[I],P)).x,U.y,-F);for(h=0,l=b.length;h<l;h++)for(s=b[h],j=q[h],I=0,k=s.length;I<k;I++)Q((U=C(s[I],j[I],P)).x,U.y,-F)}for(P=f,I=0;I<z;I++)U=E?C(w[I],Y[I],P):w[I],v?(a.copy(i.normals[0]).multiplyScalar(U.x),o.copy(i.binormals[0]).multiplyScalar(U.y),n.copy(r[0]).add(a).add(o),Q(n.x,n.y,n.z)):Q(U.x,U.y,0);for(X=1;X<=m;X++)for(I=0;I<z;I++)U=E?C(w[I],Y[I],P):w[I],v?(a.copy(i.normals[X]).multiplyScalar(U.x),o.copy(i.binormals[X]).multiplyScalar(U.y),n.copy(r[X]).add(a).add(o),Q(n.x,n.y,n.z)):Q(U.x,U.y,c/m*X);for(L=p-1;L>=0;L--){for(F=u*(1-(D=L/p)),P=f*Math.sin(D*Math.PI/2),I=0,k=A.length;I<k;I++)Q((U=C(A[I],O[I],P)).x,U.y,c+F);for(h=0,l=b.length;h<l;h++)for(s=b[h],j=q[h],I=0,k=s.length;I<k;I++)U=C(s[I],j[I],P),v?Q(U.x,U.y+r[m-1].y,r[m-1].x+F):Q(U.x,U.y,c+F)}function K(e,t){var r,i;for(I=e.length;--I>=0;){r=I,(i=I-1)<0&&(i=e.length-1);var o=0,a=m+2*p;for(o=0;o<a;o++){var n=z*o,s=z*(o+1);J(t+r+n,t+i+n,t+i+s,t+r+s,e,o,a,r,i)}}}function Q(e,t,r){x.vertices.push(new THREE.Vector3(e,t,r))}function Z(r,i,o,a){r+=H,i+=H,o+=H,x.faces.push(new THREE.Face3(r,i,o,null,null,T));var n=a?R.generateBottomUV(x,e,t,r,i,o):R.generateTopUV(x,e,t,r,i,o);x.faceVertexUvs[0].push(n)}function J(r,i,o,a,n,s,h,l,c){r+=H,i+=H,o+=H,a+=H,x.faces.push(new THREE.Face3(r,i,a,null,null,y)),x.faces.push(new THREE.Face3(i,o,a,null,null,y));var u=R.generateSideWallUV(x,e,n,t,r,i,o,a,s,h,l,c);x.faceVertexUvs[0].push([u[0],u[1],u[3]]),x.faceVertexUvs[0].push([u[1],u[2],u[3]])}!function(){if(E){var e=0,t=z*e;for(I=0;I<B;I++)Z((V=S[I])[2]+t,V[1]+t,V[0]+t,!0);for(t=z*(e=m+2*p),I=0;I<B;I++)Z((V=S[I])[0]+t,V[1]+t,V[2]+t,!1)}else{for(I=0;I<B;I++)Z((V=S[I])[2],V[1],V[0],!0);for(I=0;I<B;I++)Z((V=S[I])[0]+z*m,V[1]+z*m,V[2]+z*m,!1)}}(),function(){var e=0;for(K(A,e),e+=A.length,h=0,l=b.length;h<l;h++)K(s=b[h],e),e+=s.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,i,o,a){var n=e.vertices[i].x,s=e.vertices[i].y,h=e.vertices[o].x,l=e.vertices[o].y,c=e.vertices[a].x,u=e.vertices[a].y;return[new THREE.Vector2(n,s),new THREE.Vector2(h,l),new THREE.Vector2(c,u)]},generateBottomUV:function(e,t,r,i,o,a){return this.generateTopUV(e,t,r,i,o,a)},generateSideWallUV:function(e,t,r,i,o,a,n,s,h,l,c,u){var f=e.vertices[o].x,p=e.vertices[o].y,E=e.vertices[o].z,d=e.vertices[a].x,m=e.vertices[a].y,g=e.vertices[a].z,v=e.vertices[n].x,T=e.vertices[n].y,y=e.vertices[n].z,R=e.vertices[s].x,x=e.vertices[s].y,H=e.vertices[s].z;return Math.abs(p-m)<.01?[new THREE.Vector2(f,1-E),new THREE.Vector2(d,1-g),new THREE.Vector2(v,1-y),new THREE.Vector2(R,1-H)]:[new THREE.Vector2(p,1-E),new THREE.Vector2(m,1-g),new THREE.Vector2(T,1-y),new THREE.Vector2(x,1-H)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),e instanceof Array==!1&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,i=e.length;r<i;r++)this.addShape(e[r],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r,i,o,a=void 0!==t.curveSegments?t.curveSegments:12,n=t.material,s=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,h=(this.shapebb,this.vertices.length),l=e.extractPoints(a),c=l.shape,u=l.holes,f=!THREE.Shape.Utils.isClockWise(c);if(f){for(c=c.reverse(),r=0,i=u.length;r<i;r++)o=u[r],THREE.Shape.Utils.isClockWise(o)&&(u[r]=o.reverse());f=!1}var p=THREE.Shape.Utils.triangulateShape(c,u),E=c;for(r=0,i=u.length;r<i;r++)o=u[r],c=c.concat(o);var d,m,g=c.length,v=p.length;E.length;for(r=0;r<g;r++)d=c[r],this.vertices.push(new THREE.Vector3(d.x,d.y,0));for(r=0;r<v;r++){var T=(m=p[r])[0]+h,y=m[1]+h,R=m[2]+h;this.faces.push(new THREE.Face3(T,y,R,null,null,n)),this.faceVertexUvs[0].push(s.generateBottomUV(this,e,t,T,y,R))}},THREE.LatheGeometry=function(e,t,r,i){THREE.Geometry.call(this),t=t||12,r=r||0,i=i||2*Math.PI;for(var o=1/(e.length-1),a=1/t,n=0,s=t;n<=s;n++)for(var h=r+n*a*i,l=Math.cos(h),c=Math.sin(h),u=0,f=e.length;u<f;u++){var p=e[u],E=new THREE.Vector3;E.x=l*p.x-c*p.y,E.y=c*p.x+l*p.y,E.z=p.z,this.vertices.push(E)}var d=e.length;for(n=0,s=t;n<s;n++)for(u=0,f=e.length-1;u<f;u++){var m=u+d*n,g=m,v=m+d,T=(l=m+1+d,m+1),y=n*a,R=u*o,x=y+a,H=R+o;this.faces.push(new THREE.Face3(g,v,T)),this.faceVertexUvs[0].push([new THREE.Vector2(y,R),new THREE.Vector2(x,R),new THREE.Vector2(y,H)]),this.faces.push(new THREE.Face3(v,l,T)),this.faceVertexUvs[0].push([new THREE.Vector2(x,R),new THREE.Vector2(x,H),new THREE.Vector2(y,H)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,r,i){var o,a;THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=r||1,this.heightSegments=i||1;var n=e/2,s=t/2,h=this.widthSegments,l=this.heightSegments,c=h+1,u=l+1,f=this.width/h,p=this.height/l,E=new THREE.Vector3(0,0,1);for(a=0;a<u;a++)for(o=0;o<c;o++){var d=o*f-n,m=a*p-s;this.vertices.push(new THREE.Vector3(d,-m,0))}for(a=0;a<l;a++)for(o=0;o<h;o++){var g=o+c*a,v=o+c*(a+1),T=o+1+c*(a+1),y=o+1+c*a,R=new THREE.Vector2(o/h,1-a/l),x=new THREE.Vector2(o/h,1-(a+1)/l),H=new THREE.Vector2((o+1)/h,1-(a+1)/l),_=new THREE.Vector2((o+1)/h,1-a/l),w=new THREE.Face3(g,v,y);w.normal.copy(E),w.vertexNormals.push(E.clone(),E.clone(),E.clone()),this.faces.push(w),this.faceVertexUvs[0].push([R,x,_]),(w=new THREE.Face3(v,T,y)).normal.copy(E),w.vertexNormals.push(E.clone(),E.clone(),E.clone()),this.faces.push(w),this.faceVertexUvs[0].push([x.clone(),H,_.clone()])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(e,t,r,i,o,a){THREE.Geometry.call(this),e=e||0,t=t||50,o=void 0!==o?o:0,a=void 0!==a?a:2*Math.PI,r=void 0!==r?Math.max(3,r):8;var n,s,h=[],l=e,c=(t-e)/(i=void 0!==i?Math.max(3,i):8);for(n=0;n<=i;n++){for(s=0;s<=r;s++){var u=new THREE.Vector3,f=o+s/r*a;u.x=l*Math.cos(f),u.y=l*Math.sin(f),this.vertices.push(u),h.push(new THREE.Vector2((u.x/t+1)/2,(u.y/t+1)/2))}l+=c}var p=new THREE.Vector3(0,0,1);for(n=0;n<i;n++){var E=n*r;for(s=0;s<=r;s++){var d=(f=s+E)+n,m=f+r+n,g=f+r+1+n;this.faces.push(new THREE.Face3(d,m,g,[p.clone(),p.clone(),p.clone()])),this.faceVertexUvs[0].push([h[d].clone(),h[m].clone(),h[g].clone()]),d=f+n,m=f+r+1+n,g=f+1+n,this.faces.push(new THREE.Face3(d,m,g,[p.clone(),p.clone(),p.clone()])),this.faceVertexUvs[0].push([h[d].clone(),h[m].clone(),h[g].clone()])}}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,l)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,r,i,o,a,n){THREE.Geometry.call(this),this.radius=e=e||50,this.widthSegments=t=Math.max(3,Math.floor(t)||8),this.heightSegments=r=Math.max(2,Math.floor(r)||6),this.phiStart=i=void 0!==i?i:0,this.phiLength=o=void 0!==o?o:2*Math.PI,this.thetaStart=a=void 0!==a?a:0,this.thetaLength=n=void 0!==n?n:Math.PI;var s,h,l=[],c=[];for(h=0;h<=r;h++){var u=[],f=[];for(s=0;s<=t;s++){var p=s/t,E=h/r,d=new THREE.Vector3;d.x=-e*Math.cos(i+p*o)*Math.sin(a+E*n),d.y=e*Math.cos(a+E*n),d.z=e*Math.sin(i+p*o)*Math.sin(a+E*n),this.vertices.push(d),u.push(this.vertices.length-1),f.push(new THREE.Vector2(p,1-E))}l.push(u),c.push(f)}for(h=0;h<this.heightSegments;h++)for(s=0;s<this.widthSegments;s++){var m=l[h][s+1],g=l[h][s],v=l[h+1][s],T=l[h+1][s+1],y=this.vertices[m].clone().normalize(),R=this.vertices[g].clone().normalize(),x=this.vertices[v].clone().normalize(),H=this.vertices[T].clone().normalize(),_=c[h][s+1].clone(),w=c[h][s].clone(),b=c[h+1][s].clone(),M=c[h+1][s+1].clone();Math.abs(this.vertices[m].y)===this.radius?(_.x=(_.x+w.x)/2,this.faces.push(new THREE.Face3(m,v,T,[y,x,H])),this.faceVertexUvs[0].push([_,b,M])):Math.abs(this.vertices[v].y)===this.radius?(b.x=(b.x+M.x)/2,this.faces.push(new THREE.Face3(m,g,v,[y,R,x])),this.faceVertexUvs[0].push([_,w,b])):(this.faces.push(new THREE.Face3(m,g,T,[y,R,H])),this.faceVertexUvs[0].push([_,w,M]),this.faces.push(new THREE.Face3(g,v,T,[R.clone(),x,H.clone()])),this.faceVertexUvs[0].push([w.clone(),b,M.clone()]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){t=t||{};var r=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,r,i,o){THREE.Geometry.call(this);this.radius=e||100,this.tube=t||40,this.radialSegments=r||8,this.tubularSegments=i||6,this.arc=o||2*Math.PI;for(var a=new THREE.Vector3,n=[],s=[],h=0;h<=this.radialSegments;h++)for(var l=0;l<=this.tubularSegments;l++){var c=l/this.tubularSegments*this.arc,u=h/this.radialSegments*Math.PI*2;a.x=this.radius*Math.cos(c),a.y=this.radius*Math.sin(c);var f=new THREE.Vector3;f.x=(this.radius+this.tube*Math.cos(u))*Math.cos(c),f.y=(this.radius+this.tube*Math.cos(u))*Math.sin(c),f.z=this.tube*Math.sin(u),this.vertices.push(f),n.push(new THREE.Vector2(l/this.tubularSegments,h/this.radialSegments)),s.push(f.clone().sub(a).normalize())}for(h=1;h<=this.radialSegments;h++)for(l=1;l<=this.tubularSegments;l++){var p=(this.tubularSegments+1)*h+l-1,E=(this.tubularSegments+1)*(h-1)+l-1,d=(this.tubularSegments+1)*(h-1)+l,m=(this.tubularSegments+1)*h+l,g=new THREE.Face3(p,E,m,[s[p].clone(),s[E].clone(),s[m].clone()]);this.faces.push(g),this.faceVertexUvs[0].push([n[p].clone(),n[E].clone(),n[m].clone()]),g=new THREE.Face3(E,d,m,[s[E].clone(),s[d].clone(),s[m].clone()]),this.faces.push(g),this.faceVertexUvs[0].push([n[E].clone(),n[d].clone(),n[m].clone()])}this.computeCentroids(),this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,r,i,o,a,n){THREE.Geometry.call(this);this.radius=e||100,this.tube=t||40,this.radialSegments=r||64,this.tubularSegments=i||8,this.p=o||2,this.q=a||3,this.heightScale=n||1,this.grid=new Array(this.radialSegments);for(var s=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3,c=0;c<this.radialSegments;++c){this.grid[c]=new Array(this.tubularSegments);var u=c/this.radialSegments*2*this.p*Math.PI,f=A(u,this.q,this.p,this.radius,this.heightScale),p=A(u+.01,this.q,this.p,this.radius,this.heightScale);s.subVectors(p,f),h.addVectors(p,f),l.crossVectors(s,h),h.crossVectors(l,s),l.normalize(),h.normalize();for(var E=0;E<this.tubularSegments;++E){var d=E/this.tubularSegments*2*Math.PI,m=-this.tube*Math.cos(d),g=this.tube*Math.sin(d),v=new THREE.Vector3;v.x=f.x+m*h.x+g*l.x,v.y=f.y+m*h.y+g*l.y,v.z=f.z+m*h.z+g*l.z,this.grid[c][E]=this.vertices.push(v)-1}}for(c=0;c<this.radialSegments;++c)for(E=0;E<this.tubularSegments;++E){var T=(c+1)%this.radialSegments,y=(E+1)%this.tubularSegments,R=this.grid[c][E],x=this.grid[T][E],H=this.grid[T][y],_=this.grid[c][y],w=new THREE.Vector2(c/this.radialSegments,E/this.tubularSegments),b=new THREE.Vector2((c+1)/this.radialSegments,E/this.tubularSegments),M=new THREE.Vector2((c+1)/this.radialSegments,(E+1)/this.tubularSegments),S=new THREE.Vector2(c/this.radialSegments,(E+1)/this.tubularSegments);this.faces.push(new THREE.Face3(R,x,_)),this.faceVertexUvs[0].push([w,b,S]),this.faces.push(new THREE.Face3(x,H,_)),this.faceVertexUvs[0].push([b.clone(),M,S.clone()])}function A(e,t,r,i,o){var a=Math.cos(e),n=Math.sin(e),s=t/r*e,h=Math.cos(s),l=i*(2+h)*.5*a,c=i*(2+h)*n*.5,u=o*i*Math.sin(s)*.5;return new THREE.Vector3(l,c,u)}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,r,i,o){THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=r||1,this.radialSegments=i||8,this.closed=o||!1,this.grid=[];var a,n,s,h,l,c,u,f,p,E,d,m,g,v,T,y,R,x,H,_=this,w=this.segments+1,b=new THREE.Vector3,M=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),S=M.tangents,A=M.normals,C=M.binormals;function L(e,t,r){return _.vertices.push(new THREE.Vector3(e,t,r))-1}for(this.tangents=S,this.normals=A,this.binormals=C,f=0;f<w;f++)for(this.grid[f]=[],s=f/(w-1),u=e.getPointAt(s),S[f],a=A[f],n=C[f],p=0;p<this.radialSegments;p++)h=p/this.radialSegments*2*Math.PI,l=-this.radius*Math.cos(h),c=this.radius*Math.sin(h),b.copy(u),b.x+=l*a.x+c*n.x,b.y+=l*a.y+c*n.y,b.z+=l*a.z+c*n.z,this.grid[f][p]=L(b.x,b.y,b.z);for(f=0;f<this.segments;f++)for(p=0;p<this.radialSegments;p++)E=this.closed?(f+1)%this.segments:f+1,d=(p+1)%this.radialSegments,m=this.grid[f][p],g=this.grid[E][p],v=this.grid[E][d],T=this.grid[f][d],y=new THREE.Vector2(f/this.segments,p/this.radialSegments),R=new THREE.Vector2((f+1)/this.segments,p/this.radialSegments),x=new THREE.Vector2((f+1)/this.segments,(p+1)/this.radialSegments),H=new THREE.Vector2(f/this.segments,(p+1)/this.radialSegments),this.faces.push(new THREE.Face3(m,g,T)),this.faceVertexUvs[0].push([y,R,H]),this.faces.push(new THREE.Face3(g,v,T)),this.faceVertexUvs[0].push([R.clone(),x,H.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,r){new THREE.Vector3;var i,o,a,n,s,h,l,c=new THREE.Vector3,u=(new THREE.Vector3,[]),f=[],p=[],E=new THREE.Vector3,d=new THREE.Matrix4,m=t+1,g=1e-4;for(this.tangents=u,this.normals=f,this.binormals=p,h=0;h<m;h++)l=h/(m-1),u[h]=e.getTangentAt(l),u[h].normalize();for(function(){f[0]=new THREE.Vector3,p[0]=new THREE.Vector3,o=Number.MAX_VALUE,a=Math.abs(u[0].x),n=Math.abs(u[0].y),s=Math.abs(u[0].z),a<=o&&(o=a,c.set(1,0,0));n<=o&&(o=n,c.set(0,1,0));s<=o&&c.set(0,0,1);E.crossVectors(u[0],c).normalize(),f[0].crossVectors(u[0],E),p[0].crossVectors(u[0],f[0])}(),h=1;h<m;h++)f[h]=f[h-1].clone(),p[h]=p[h-1].clone(),E.crossVectors(u[h-1],u[h]),E.length()>g&&(E.normalize(),i=Math.acos(THREE.Math.clamp(u[h-1].dot(u[h]),-1,1)),f[h].applyMatrix4(d.makeRotationAxis(E,i))),p[h].crossVectors(u[h],f[h]);if(r)for(i=Math.acos(THREE.Math.clamp(f[0].dot(f[m-1]),-1,1)),i/=m-1,u[0].dot(E.crossVectors(f[0],f[m-1]))>0&&(i=-i),h=1;h<m;h++)f[h].applyMatrix4(d.makeRotationAxis(u[h],i*h)),p[h].crossVectors(u[h],f[h])},THREE.PolyhedronGeometry=function(e,t,r,i){THREE.Geometry.call(this),r=r||1,i=i||0;for(var o=this,a=0,n=e.length;a<n;a++)v(new THREE.Vector3(e[a][0],e[a][1],e[a][2]));var s=this.vertices,h=[];for(a=0,n=t.length;a<n;a++){var l=s[t[a][0]],c=s[t[a][1]],u=s[t[a][2]];h[a]=new THREE.Face3(l.index,c.index,u.index,[l.clone(),c.clone(),u.clone()])}for(a=0,n=h.length;a<n;a++)y(h[a],i);for(a=0,n=this.faceVertexUvs[0].length;a<n;a++){var f=this.faceVertexUvs[0][a],p=f[0].x,E=f[1].x,d=f[2].x,m=Math.max(p,Math.max(E,d)),g=Math.min(p,Math.min(E,d));m>.9&&g<.1&&(p<.2&&(f[0].x+=1),E<.2&&(f[1].x+=1),d<.2&&(f[2].x+=1))}for(a=0,n=this.vertices.length;a<n;a++)this.vertices[a].multiplyScalar(r);function v(e){var t=e.normalize().clone();t.index=o.vertices.push(t)-1;var r=R(e)/2/Math.PI+.5,i=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(e)/Math.PI+.5;return t.uv=new THREE.Vector2(r,1-i),t}function T(e,t,r){var i=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);i.centroid.add(e).add(t).add(r).divideScalar(3),o.faces.push(i);var a=R(i.centroid);o.faceVertexUvs[0].push([x(e.uv,e,a),x(t.uv,t,a),x(r.uv,r,a)])}function y(e,t){for(var r=Math.pow(2,t),i=(Math.pow(4,t),v(o.vertices[e.a])),a=v(o.vertices[e.b]),n=v(o.vertices[e.c]),s=[],h=0;h<=r;h++){s[h]=[];for(var l=v(i.clone().lerp(n,h/r)),c=v(a.clone().lerp(n,h/r)),u=r-h,f=0;f<=u;f++)s[h][f]=0==f&&h==r?l:v(l.clone().lerp(c,f/u))}for(h=0;h<r;h++)for(f=0;f<2*(r-h)-1;f++){var p=Math.floor(f/2);f%2==0?T(s[h][p+1],s[h+1][p],s[h][p]):T(s[h][p+1],s[h+1][p+1],s[h+1][p])}}function R(e){return Math.atan2(e.z,-e.x)}function x(e,t,r){return r<0&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/Math.PI+.5,e.y)),e.clone()}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){this.radius=e,this.detail=t;var r=(1+Math.sqrt(5))/2,i=[[-1,r,0],[1,r,0],[-1,-r,0],[1,-r,0],[0,-1,r],[0,1,r],[0,-1,-r],[0,1,-r],[r,0,-1],[r,0,1],[-r,0,-1],[-r,0,1]];THREE.PolyhedronGeometry.call(this,i,[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,r){THREE.Geometry.call(this);var i,o,a,n,s,h,l,c,u,f,p,E,d=this.vertices,m=this.faces,g=this.faceVertexUvs[0],v=t+1;for(i=0;i<=r;i++)for(n=i/r,o=0;o<=t;o++)a=e(o/t,n),d.push(a);for(i=0;i<r;i++)for(o=0;o<t;o++)s=i*v+o,h=i*v+o+1,l=(i+1)*v+o+1,c=(i+1)*v+o,u=new THREE.Vector2(o/t,i/r),f=new THREE.Vector2((o+1)/t,i/r),p=new THREE.Vector2((o+1)/t,(i+1)/r),E=new THREE.Vector2(o/t,(i+1)/r),m.push(new THREE.Face3(s,h,c)),g.push([u,f,E]),m.push(new THREE.Face3(h,l,c)),g.push([f.clone(),p,E.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){e=e||1;var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e,0,0),new THREE.Vector3,new THREE.Vector3(0,e,0),new THREE.Vector3,new THREE.Vector3(0,0,e)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,t,r,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,r,i,o,a){THREE.Object3D.call(this),void 0===i&&(i=16776960),void 0===r&&(r=1),void 0===o&&(o=.2*r),void 0===a&&(a=.2*o),this.position=t;var n=new THREE.Geometry;n.vertices.push(new THREE.Vector3(0,0,0)),n.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(n,new THREE.LineBasicMaterial({color:i})),this.line.matrixAutoUpdate=!1,this.add(this.line);var s=new THREE.CylinderGeometry(0,.5,1,5,1);s.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),this.cone=new THREE.Mesh(s,new THREE.MeshBasicMaterial({color:i})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,o,a)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var e,t=new THREE.Vector3;return function(r){r.y>.99999?this.quaternion.set(0,0,0,1):r.y<-.99999?this.quaternion.set(1,0,0,0):(t.set(r.z,0,-r.x).normalize(),e=Math.acos(r.y),this.quaternion.setFromAxisAngle(t,e))}}(),THREE.ArrowHelper.prototype.setLength=function(e,t,r){void 0===t&&(t=.2*e),void 0===r&&(r=.2*t),this.line.scale.set(1,e,1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.BoxHelper=function(e){var t=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=t;var r=new THREE.Geometry;r.vertices.push(t[0],t[1],t[1],t[2],t[2],t[3],t[3],t[0],t[4],t[5],t[5],t[6],t[6],t[7],t[7],t[4],t[0],t[4],t[1],t[5],t[2],t[6],t[3],t[7]),THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==e&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var r=t.boundingBox.min,i=t.boundingBox.max,o=this.vertices;o[0].set(i.x,i.y,i.z),o[1].set(r.x,i.y,i.z),o[2].set(r.x,r.y,i.z),o[3].set(i.x,r.y,i.z),o[4].set(i.x,i.y,r.z),o[5].set(r.x,i.y,r.z),o[6].set(r.x,r.y,r.z),o[7].set(i.x,r.y,r.z),this.geometry.computeBoundingSphere(),this.geometry.verticesNeedUpdate=!0,this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.BoundingBoxHelper=function(e,t){var r=void 0!==t?t:8947848;this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(e){var t=new THREE.Geometry,r=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),i={},o=16755200,a=16711680,n=43775,s=3355443;function h(e,t,r){l(e,r),l(t,r)}function l(e,r){t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(r)),void 0===i[e]&&(i[e]=[]),i[e].push(t.vertices.length-1)}h("n1","n2",o),h("n2","n4",o),h("n4","n3",o),h("n3","n1",o),h("f1","f2",o),h("f2","f4",o),h("f4","f3",o),h("f3","f1",o),h("n1","f1",o),h("n2","f2",o),h("n3","f3",o),h("n4","f4",o),h("p","n1",a),h("p","n2",a),h("p","n3",a),h("p","n4",a),h("u1","u2",n),h("u2","u3",n),h("u3","u1",n),h("c","t",16777215),h("p","c",s),h("cn1","cn2",s),h("cn3","cn4",s),h("cf1","cf2",s),h("cf3","cf4",s),THREE.Line.call(this,t,r,THREE.LinePieces),this.camera=e,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=i,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Camera,r=new THREE.Projector;return function(){var i=this;function o(o,a,n,s){e.set(a,n,s),r.unprojectVector(e,t);var h=i.pointMap[o];if(void 0!==h)for(var l=0,c=h.length;l<c;l++)i.geometry.vertices[h[l]].copy(e)}t.projectionMatrix.copy(this.camera.projectionMatrix),o("c",0,0,-1),o("t",0,0,1),o("n1",-1,-1,-1),o("n2",1,-1,-1),o("n3",-1,1,-1),o("n4",1,1,-1),o("f1",-1,-1,1),o("f2",1,-1,1),o("f3",-1,1,1),o("f4",1,1,1),o("u1",.7,1.1,-1),o("u2",-.7,1.1,-1),o("u3",0,2,-1),o("cf1",-1,0,1),o("cf2",1,0,1),o("cf3",0,-1,1),o("cf4",0,1,1),o("cn1",-1,0,-1),o("cn2",1,0,-1),o("cn3",0,-1,-1),o("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,t=t||1;var r=new THREE.PlaneGeometry(t,t),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Mesh(r,i),this.add(this.lightPlane),(r=new THREE.Geometry).vertices.push(new THREE.Vector3),r.vertices.push(new THREE.Vector3),(i=new THREE.LineBasicMaterial({fog:!1})).color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(t,e),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(e,t){var r=void 0!==t?t:16777215,i=[0,0],o={},a=function(e,t){return e-t},n=["a","b","c"],s=new THREE.BufferGeometry,h=e.geometry.clone();h.mergeVertices(),h.computeFaceNormals();for(var l=h.vertices,c=h.faces,u=0,f=0,p=c.length;f<p;f++)for(var E=c[f],d=0;d<3;d++){i[0]=E[n[d]],i[1]=E[n[(d+1)%3]],i.sort(a),void 0===o[v=i.toString()]?(o[v]={vert1:i[0],vert2:i[1],face1:f,face2:void 0},u++):o[v].face2=f}s.addAttribute("position",Float32Array,2*u,3);var m=s.attributes.position.array,g=0;for(var v in o){var T=o[v];if(void 0===T.face2||c[T.face1].normal.dot(c[T.face2].normal)<.9999){var y=l[T.vert1];m[g++]=y.x,m[g++]=y.y,m[g++]=y.z,y=l[T.vert2],m[g++]=y.x,m[g++]=y.y,m[g++]=y.z}}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1;for(var o=void 0!==r?r:16776960,a=void 0!==i?i:1,n=new THREE.Geometry,s=0,h=this.object.geometry.faces.length;s<h;s++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:o,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var r=this.geometry.vertices,i=this.object.geometry.faces,o=this.object.matrixWorld,a=0,n=i.length;a<n;a++){var s=i[a];t.copy(s.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var h=2*a;r[h].copy(s.centroid).applyMatrix4(o),r[h+1].addVectors(r[h],t)}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.GridHelper=function(e,t){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var o=-e;o<=e;o+=t){r.vertices.push(new THREE.Vector3(-e,0,o),new THREE.Vector3(e,0,o),new THREE.Vector3(o,0,-e),new THREE.Vector3(o,0,e));var a=0===o?this.color1:this.color2;r.colors.push(a,a,a,a)}THREE.Line.call(this,r,i,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t,r,i){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var o=new THREE.SphereGeometry(t,4,2);o.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var a=0;a<8;a++)o.faces[a].color=this.colors[a<4?0:1];var n=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(o,n),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(t,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1;var t=new THREE.CylinderGeometry(0,1,1,8,1,!0);t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(t,r),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1;for(var o=void 0!==r?r:16711680,a=void 0!==i?i:1,n=new THREE.Geometry,s=(e.geometry.vertices,e.geometry.faces),h=0,l=s.length;h<l;h++)for(var c=0,u=s[h].vertexNormals.length;c<u;c++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:o,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var i=this.geometry.vertices,o=this.object.geometry.vertices,a=this.object.geometry.faces,n=this.object.matrixWorld,s=0,h=0,l=a.length;h<l;h++)for(var c=a[h],u=0,f=c.vertexNormals.length;u<f;u++){var p=o[c[r[u]]],E=c.vertexNormals[u];i[s].copy(p).applyMatrix4(n),t.copy(E).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),t.add(i[s]),i[s+=1].copy(t),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1;for(var o=void 0!==r?r:255,a=void 0!==i?i:1,n=new THREE.Geometry,s=(e.geometry.vertices,e.geometry.faces),h=0,l=s.length;h<l;h++)for(var c=0,u=s[h].vertexTangents.length;c<u;c++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:o,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var i=this.geometry.vertices,o=this.object.geometry.vertices,a=this.object.geometry.faces,n=this.object.matrixWorld,s=0,h=0,l=a.length;h<l;h++)for(var c=a[h],u=0,f=c.vertexTangents.length;u<f;u++){var p=o[c[r[u]]],E=c.vertexTangents[u];i[s].copy(p).applyMatrix4(n),t.copy(E).transformDirection(n).multiplyScalar(this.size),t.add(i[s]),i[s+=1].copy(t),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(e,t){var r=void 0!==t?t:16777215,i=[0,0],o={},a=function(e,t){return e-t},n=["a","b","c"],s=new THREE.BufferGeometry;if(e.geometry instanceof THREE.Geometry){for(var h=e.geometry.vertices,l=e.geometry.faces,c=0,u=new Uint32Array(6*l.length),f=0,p=l.length;f<p;f++)for(var E=l[f],d=0;d<3;d++){i[0]=E[n[d]],i[1]=E[n[(d+1)%3]],i.sort(a),void 0===o[b=i.toString()]&&(u[2*c]=i[0],u[2*c+1]=i[1],o[b]=!0,c++)}s.addAttribute("position",Float32Array,2*c,3);var m=s.attributes.position.array;for(f=0,p=c;f<p;f++)for(d=0;d<2;d++){var g=h[u[2*f+d]];m[(_=6*f+3*d)+0]=g.x,m[_+1]=g.y,m[_+2]=g.z}}else if(e.geometry instanceof THREE.BufferGeometry&&void 0!==e.geometry.attributes.index){h=e.geometry.attributes.position.array;for(var v=e.geometry.attributes.index.array,T=e.geometry.offsets,y=(c=0,u=new Uint32Array(2*v.length),0),R=T.length;y<R;++y)for(var x=T[y].start,H=T[y].count,_=T[y].index,w=(f=x,x+H);f<w;f+=3)for(d=0;d<3;d++){var b;i[0]=_+v[f+d],i[1]=_+v[f+(d+1)%3],i.sort(a),void 0===o[b=i.toString()]&&(u[2*c]=i[0],u[2*c+1]=i[1],o[b]=!0,c++)}s.addAttribute("position",Float32Array,2*c,3);for(m=s.attributes.position.array,f=0,p=c;f<p;f++)for(d=0;d<2;d++){_=6*f+3*d;var M=3*u[2*f+d];m[_+0]=h[M],m[_+1]=h[M+1],m[_+2]=h[M+2]}}else if(e.geometry instanceof THREE.BufferGeometry){var S=(c=(h=e.geometry.attributes.position.array).length/3)/3;s.addAttribute("position",Float32Array,2*c,3);for(m=s.attributes.position.array,f=0,p=S;f<p;f++)for(d=0;d<3;d++){var A=9*f+3*d;m[(_=18*f+6*d)+0]=h[A],m[_+1]=h[A+1],m[_+2]=h[A+2];M=9*f+(d+1)%3*3;m[_+3]=h[M],m[_+4]=h[M+1],m[_+5]=h[M+2]}}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(e){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,r,i,o){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,r,i,o)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,r,i,o,a){void 0===t&&(t=-1),void 0===r&&(r=0),void 0===a&&(a=1),void 0===o&&(o=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:a,color:o,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,r=this.lensFlares.length,i=2*-this.positionScreen.x,o=2*-this.positionScreen.y;for(e=0;e<r;e++)(t=this.lensFlares[e]).x=this.positionScreen.x+i*t.distance,t.y=this.positionScreen.y+o*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length,i="__default",o=r-1,a=r/1;this.createAnimation(i,0,o,a),this.setAnimationWeight(i,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,i){var o={startFrame:t,endFrame:r,length:r-t+1,fps:i,duration:(r-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=o,this.animationsList.push(o)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,r=/([a-z]+)(\d+)/,i={},o=this.geometry,a=0,n=o.morphTargets.length;a<n;a++){var s=o.morphTargets[a].name.match(r);if(s&&s.length>1){var h=s[1];s[2];i[h]||(i[h]={start:1/0,end:-1/0}),a<(l=i[h]).start&&(l.start=a),a>l.end&&(l.end=a),t||(t=h)}}for(var h in i){var l=i[h];this.createAnimation(h,l.start,l.end,e)}this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,r=this.animationsMap[e];return r&&(t=r.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,r=this.animationsMap[e];return r&&(t=r.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;t<r;t++){var i=this.animationsList[t];if(i.active){var o=i.duration/i.length;i.time+=i.direction*e,i.mirroredLoop?(i.time>i.duration||i.time<0)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),i.time<0&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,i.time<0&&(i.time+=i.duration));var a=i.startFrame+THREE.Math.clamp(Math.floor(i.time/o),0,i.length-1),n=i.weight;a!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*n,this.morphTargetInfluences[a]=0,i.lastFrame=i.currentFrame,i.currentFrame=a);var s=i.time%o/o;i.directionBackwards&&(s=1-s),this.morphTargetInfluences[i.currentFrame]=s*n,this.morphTargetInfluences[i.lastFrame]=(1-s)*n}}},THREE.LensFlarePlugin=function(){var e,t,r,i={};function o(t,r){var i=e.createProgram(),o=e.createShader(e.FRAGMENT_SHADER),a=e.createShader(e.VERTEX_SHADER),n="precision "+r+" float;\n";return e.shaderSource(o,n+t.fragmentShader),e.shaderSource(a,n+t.vertexShader),e.compileShader(o),e.compileShader(a),e.attachShader(i,o),e.attachShader(i,a),e.linkProgram(i),i}this.init=function(a){e=a.context,t=a,r=a.getPrecision(),i.vertices=new Float32Array(16),i.faces=new Uint16Array(6);var n=0;i.vertices[n++]=-1,i.vertices[n++]=-1,i.vertices[n++]=0,i.vertices[n++]=0,i.vertices[n++]=1,i.vertices[n++]=-1,i.vertices[n++]=1,i.vertices[n++]=0,i.vertices[n++]=1,i.vertices[n++]=1,i.vertices[n++]=1,i.vertices[n++]=1,i.vertices[n++]=-1,i.vertices[n++]=1,i.vertices[n++]=0,i.vertices[n++]=1,n=0,i.faces[n++]=0,i.faces[n++]=1,i.faces[n++]=2,i.faces[n++]=0,i.faces[n++]=2,i.faces[n++]=3,i.vertexBuffer=e.createBuffer(),i.elementBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,i.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,i.vertices,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i.elementBuffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,i.faces,e.STATIC_DRAW),i.tempTexture=e.createTexture(),i.occlusionTexture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,i.tempTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.bindTexture(e.TEXTURE_2D,i.occlusionTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(i.hasVertexTexture=!1,i.program=o(THREE.ShaderFlares.lensFlare,r)):(i.hasVertexTexture=!0,i.program=o(THREE.ShaderFlares.lensFlareVertexTexture,r)),i.attributes={},i.uniforms={},i.attributes.vertex=e.getAttribLocation(i.program,"position"),i.attributes.uv=e.getAttribLocation(i.program,"uv"),i.uniforms.renderType=e.getUniformLocation(i.program,"renderType"),i.uniforms.map=e.getUniformLocation(i.program,"map"),i.uniforms.occlusionMap=e.getUniformLocation(i.program,"occlusionMap"),i.uniforms.opacity=e.getUniformLocation(i.program,"opacity"),i.uniforms.color=e.getUniformLocation(i.program,"color"),i.uniforms.scale=e.getUniformLocation(i.program,"scale"),i.uniforms.rotation=e.getUniformLocation(i.program,"rotation"),i.uniforms.screenPosition=e.getUniformLocation(i.program,"screenPosition")},this.render=function(r,o,a,n){var s=r.__webglFlares,h=s.length;if(h){var l,c,u,f,p,E=new THREE.Vector3,d=n/a,m=.5*a,g=.5*n,v=16/n,T=new THREE.Vector2(v*d,v),y=new THREE.Vector3(1,1,0),R=new THREE.Vector2(1,1),x=i.uniforms,H=i.attributes;for(e.useProgram(i.program),e.enableVertexAttribArray(i.attributes.vertex),e.enableVertexAttribArray(i.attributes.uv),e.uniform1i(x.occlusionMap,0),e.uniform1i(x.map,1),e.bindBuffer(e.ARRAY_BUFFER,i.vertexBuffer),e.vertexAttribPointer(H.vertex,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(H.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i.elementBuffer),e.disable(e.CULL_FACE),e.depthMask(!1),l=0;l<h;l++)if(v=16/n,T.set(v*d,v),f=s[l],E.set(f.matrixWorld.elements[12],f.matrixWorld.elements[13],f.matrixWorld.elements[14]),E.applyMatrix4(o.matrixWorldInverse),E.applyProjection(o.projectionMatrix),y.copy(E),R.x=y.x*m+m,R.y=y.y*g+g,i.hasVertexTexture||R.x>0&&R.x<a&&R.y>0&&R.y<n)for(e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,i.tempTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,R.x-8,R.y-8,16,16,0),e.uniform1i(x.renderType,0),e.uniform2f(x.scale,T.x,T.y),e.uniform3f(x.screenPosition,y.x,y.y,y.z),e.disable(e.BLEND),e.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,i.occlusionTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,R.x-8,R.y-8,16,16,0),e.uniform1i(x.renderType,1),e.disable(e.DEPTH_TEST),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,i.tempTexture),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),f.positionScreen.copy(y),f.customUpdateCallback?f.customUpdateCallback(f):f.updateLensFlares(),e.uniform1i(x.renderType,2),e.enable(e.BLEND),c=0,u=f.lensFlares.length;c<u;c++)(p=f.lensFlares[c]).opacity>.001&&p.scale>.001&&(y.x=p.x,y.y=p.y,y.z=p.z,v=p.size*p.scale/n,T.x=v*d,T.y=v,e.uniform3f(x.screenPosition,y.x,y.y,y.z),e.uniform2f(x.scale,T.x,T.y),e.uniform1f(x.rotation,p.rotation),e.uniform1f(x.opacity,p.opacity),e.uniform3f(x.color,p.color.r,p.color.g,p.color.b),t.setBlending(p.blending,p.blendEquation,p.blendSrc,p.blendDst),t.setTexture(p.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0));e.enable(e.CULL_FACE),e.enable(e.DEPTH_TEST),e.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var e,t,r,i,o,a,n=new THREE.Frustum,s=new THREE.Matrix4,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3;function u(e,t){var r=new THREE.DirectionalLight;r.isVirtual=!0,r.onlyShadow=!0,r.castShadow=!0,r.shadowCameraNear=e.shadowCameraNear,r.shadowCameraFar=e.shadowCameraFar,r.shadowCameraLeft=e.shadowCameraLeft,r.shadowCameraRight=e.shadowCameraRight,r.shadowCameraBottom=e.shadowCameraBottom,r.shadowCameraTop=e.shadowCameraTop,r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t],r.shadowMapWidth=e.shadowCascadeWidth[t],r.shadowMapHeight=e.shadowCascadeHeight[t],r.pointsWorld=[],r.pointsFrustum=[];for(var i=r.pointsWorld,o=r.pointsFrustum,a=0;a<8;a++)i[a]=new THREE.Vector3,o[a]=new THREE.Vector3;var n=e.shadowCascadeNearZ[t],s=e.shadowCascadeFarZ[t];return o[0].set(-1,-1,n),o[1].set(1,-1,n),o[2].set(-1,1,n),o[3].set(1,1,n),o[4].set(-1,-1,s),o[5].set(1,-1,s),o[6].set(-1,1,s),o[7].set(1,1,s),r}function f(e,t){var r=e.shadowCascadeArray[t];r.position.copy(e.position),r.target.position.copy(e.target.position),r.lookAt(r.target),r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t];var i=e.shadowCascadeNearZ[t],o=e.shadowCascadeFarZ[t],a=r.pointsFrustum;a[0].z=i,a[1].z=i,a[2].z=i,a[3].z=i,a[4].z=o,a[5].z=o,a[6].z=o,a[7].z=o}function p(e,t){var r=t.shadowCamera,i=t.pointsFrustum,o=t.pointsWorld;h.set(1/0,1/0,1/0),l.set(-1/0,-1/0,-1/0);for(var a=0;a<8;a++){var n=o[a];n.copy(i[a]),THREE.ShadowMapPlugin.__projector.unprojectVector(n,e),n.applyMatrix4(r.matrixWorldInverse),n.x<h.x&&(h.x=n.x),n.x>l.x&&(l.x=n.x),n.y<h.y&&(h.y=n.y),n.y>l.y&&(l.y=n.y),n.z<h.z&&(h.z=n.z),n.z>l.z&&(l.z=n.z)}r.left=h.x,r.right=l.x,r.top=l.y,r.bottom=h.y,r.updateProjectionMatrix()}function E(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}this.init=function(n){e=n.context,t=n;var s=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(s.uniforms);r=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h}),i=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,morphTargets:!0}),o=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,skinning:!0}),a=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,morphTargets:!0,skinning:!0}),r._shadowPass=!0,i._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0},this.render=function(e,r){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,r)},this.update=function(h,l){var d,m,g,v,T,y,R,x,H,_,w,b,M,S,A=[],C=0,L=null;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),t.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),d=0,m=h.__lights.length;d<m;d++)if((M=h.__lights[d]).castShadow)if(M instanceof THREE.DirectionalLight&&M.shadowCascade)for(T=0;T<M.shadowCascadeCount;T++){var P;if(M.shadowCascadeArray[T])P=M.shadowCascadeArray[T];else{(P=u(M,T)).originalCamera=l;var D=new THREE.Gyroscope;D.position=M.shadowCascadeOffset,D.add(P),D.add(P.target),l.add(D),M.shadowCascadeArray[T]=P,console.log("Created virtualLight",P)}f(M,T),A[C]=P,C++}else A[C]=M,C++;for(d=0,m=A.length;d<m;d++){if(!(M=A[d]).shadowMap){var F=THREE.LinearFilter;t.shadowMapType===THREE.PCFSoftShadowMap&&(F=THREE.NearestFilter);var U={minFilter:F,magFilter:F,format:THREE.RGBAFormat};M.shadowMap=new THREE.WebGLRenderTarget(M.shadowMapWidth,M.shadowMapHeight,U),M.shadowMapSize=new THREE.Vector2(M.shadowMapWidth,M.shadowMapHeight),M.shadowMatrix=new THREE.Matrix4}if(!M.shadowCamera){if(M instanceof THREE.SpotLight)M.shadowCamera=new THREE.PerspectiveCamera(M.shadowCameraFov,M.shadowMapWidth/M.shadowMapHeight,M.shadowCameraNear,M.shadowCameraFar);else{if(!(M instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}M.shadowCamera=new THREE.OrthographicCamera(M.shadowCameraLeft,M.shadowCameraRight,M.shadowCameraTop,M.shadowCameraBottom,M.shadowCameraNear,M.shadowCameraFar)}h.add(M.shadowCamera),!0===h.autoUpdate&&h.updateMatrixWorld()}for(M.shadowCameraVisible&&!M.cameraHelper&&(M.cameraHelper=new THREE.CameraHelper(M.shadowCamera),M.shadowCamera.add(M.cameraHelper)),M.isVirtual&&P.originalCamera==l&&p(l,M),y=M.shadowMap,R=M.shadowMatrix,(x=M.shadowCamera).position.setFromMatrixPosition(M.matrixWorld),c.setFromMatrixPosition(M.target.matrixWorld),x.lookAt(c),x.updateMatrixWorld(),x.matrixWorldInverse.getInverse(x.matrixWorld),M.cameraHelper&&(M.cameraHelper.visible=M.shadowCameraVisible),M.shadowCameraVisible&&M.cameraHelper.update(),R.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),R.multiply(x.projectionMatrix),R.multiply(x.matrixWorldInverse),s.multiplyMatrices(x.projectionMatrix,x.matrixWorldInverse),n.setFromMatrix(s),t.setRenderTarget(y),t.clear(),g=0,v=(S=h.__webglObjects).length;g<v;g++)b=(w=S[g]).object,w.render=!1,b.visible&&b.castShadow&&((b instanceof THREE.Mesh||b instanceof THREE.ParticleSystem)&&b.frustumCulled&&!n.intersectsObject(b)||(b._modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,b.matrixWorld),w.render=!0));var V,z,B;for(g=0,v=S.length;g<v;g++)(w=S[g]).render&&(b=w.object,H=w.buffer,V=E(b),z=void 0!==b.geometry.morphTargets&&b.geometry.morphTargets.length>0&&V.morphTargets,B=b instanceof THREE.SkinnedMesh&&V.skinning,_=b.customDepthMaterial?b.customDepthMaterial:B?z?a:o:z?i:r,H instanceof THREE.BufferGeometry?t.renderBufferDirect(x,h.__lights,L,_,H,b):t.renderBuffer(x,h.__lights,L,_,H,b));for(g=0,v=(S=h.__webglObjectsImmediate).length;g<v;g++)(b=(w=S[g]).object).visible&&b.castShadow&&(b._modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,b.matrixWorld),t.renderImmediateObject(x,h.__lights,L,r,b))}var N=t.getClearColor(),O=t.getClearAlpha();e.clearColor(N.r,N.g,N.b,O),e.enable(e.BLEND),t.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){var e,t,r,i,o,a,n,s,h,l;function c(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}this.init=function(c){e=c.context,t=c,i=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),o=new Uint16Array([0,1,2,0,2,3]),a=e.createBuffer(),n=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,a),e.bufferData(e.ARRAY_BUFFER,i,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n),e.bufferData(e.ELEMENT_ARRAY_BUFFER,o,e.STATIC_DRAW),s=function(){var r=e.createProgram(),i=e.createShader(e.VERTEX_SHADER),o=e.createShader(e.FRAGMENT_SHADER);return e.shaderSource(i,["precision "+t.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),e.shaderSource(o,["precision "+t.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),e.compileShader(i),e.compileShader(o),e.attachShader(r,i),e.attachShader(r,o),e.linkProgram(r),r}(),h={position:e.getAttribLocation(s,"position"),uv:e.getAttribLocation(s,"uv")},l={uvOffset:e.getUniformLocation(s,"uvOffset"),uvScale:e.getUniformLocation(s,"uvScale"),rotation:e.getUniformLocation(s,"rotation"),scale:e.getUniformLocation(s,"scale"),color:e.getUniformLocation(s,"color"),map:e.getUniformLocation(s,"map"),opacity:e.getUniformLocation(s,"opacity"),modelViewMatrix:e.getUniformLocation(s,"modelViewMatrix"),projectionMatrix:e.getUniformLocation(s,"projectionMatrix"),fogType:e.getUniformLocation(s,"fogType"),fogDensity:e.getUniformLocation(s,"fogDensity"),fogNear:e.getUniformLocation(s,"fogNear"),fogFar:e.getUniformLocation(s,"fogFar"),fogColor:e.getUniformLocation(s,"fogColor"),alphaTest:e.getUniformLocation(s,"alphaTest")};var u=document.createElement("canvas");u.width=8,u.height=8;var f=u.getContext("2d");f.fillStyle="#ffffff",f.fillRect(0,0,u.width,u.height),(r=new THREE.Texture(u)).needsUpdate=!0},this.render=function(i,o,u,f){var p=i.__webglSprites,E=p.length;if(E){e.useProgram(s),e.enableVertexAttribArray(h.position),e.enableVertexAttribArray(h.uv),e.disable(e.CULL_FACE),e.enable(e.BLEND),e.bindBuffer(e.ARRAY_BUFFER,a),e.vertexAttribPointer(h.position,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(h.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n),e.uniformMatrix4fv(l.projectionMatrix,!1,o.projectionMatrix.elements),e.activeTexture(e.TEXTURE0),e.uniform1i(l.map,0);var d=0,m=0,g=i.fog;g?(e.uniform3f(l.fogColor,g.color.r,g.color.g,g.color.b),g instanceof THREE.Fog?(e.uniform1f(l.fogNear,g.near),e.uniform1f(l.fogFar,g.far),e.uniform1i(l.fogType,1),d=1,m=1):g instanceof THREE.FogExp2&&(e.uniform1f(l.fogDensity,g.density),e.uniform1i(l.fogType,2),d=2,m=2)):(e.uniform1i(l.fogType,0),d=0,m=0);var v,T,y,R,x=[];for(v=0;v<E;v++)y=(T=p[v]).material,!1!==T.visible&&(T._modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,T.matrixWorld),T.z=-T._modelViewMatrix.elements[14]);for(p.sort(c),v=0;v<E;v++)!1!==(T=p[v]).visible&&(y=T.material,e.uniform1f(l.alphaTest,y.alphaTest),e.uniformMatrix4fv(l.modelViewMatrix,!1,T._modelViewMatrix.elements),x[0]=T.scale.x,x[1]=T.scale.y,d!==(R=i.fog&&y.fog?m:0)&&(e.uniform1i(l.fogType,R),d=R),null!==y.map?(e.uniform2f(l.uvOffset,y.map.offset.x,y.map.offset.y),e.uniform2f(l.uvScale,y.map.repeat.x,y.map.repeat.y)):(e.uniform2f(l.uvOffset,0,0),e.uniform2f(l.uvScale,1,1)),e.uniform1f(l.opacity,y.opacity),e.uniform3f(l.color,y.color.r,y.color.g,y.color.b),e.uniform1f(l.rotation,y.rotation),e.uniform2fv(l.scale,x),t.setBlending(y.blending,y.blendEquation,y.blendSrc,y.blendDst),t.setDepthTest(y.depthTest),t.setDepthWrite(y.depthWrite),y.map&&y.map.image&&y.map.image.width?t.setTexture(y.map,0):t.setTexture(r,0),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0));e.enable(e.CULL_FACE)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,r,i,o,a,n=new THREE.Frustum,s=new THREE.Matrix4;function h(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}this.init=function(n){e=n.context,t=n;var s=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(s.uniforms);r=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h}),i=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,morphTargets:!0}),o=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,skinning:!0}),a=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,morphTargets:!0,skinning:!0}),r._shadowPass=!0,i._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(l,c){var u,f,p,E,d,m,g,v,T,y,R=null;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),!0===l.autoUpdate&&l.updateMatrixWorld(),c.matrixWorldInverse.getInverse(c.matrixWorld),s.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse),n.setFromMatrix(s),t.setRenderTarget(this.renderTarget),t.clear(),u=0,f=(g=l.__webglObjects).length;u<f;u++)m=(d=g[u]).object,d.render=!1,m.visible&&((m instanceof THREE.Mesh||m instanceof THREE.ParticleSystem)&&m.frustumCulled&&!n.intersectsObject(m)||(m._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,m.matrixWorld),d.render=!0));for(u=0,f=g.length;u<f;u++)if((d=g[u]).render){if(m=d.object,p=d.buffer,m instanceof THREE.ParticleSystem&&!m.customDepthMaterial)continue;(v=h(m))&&t.setMaterialFaces(m.material),T=m.geometry.morphTargets.length>0&&v.morphTargets,y=m instanceof THREE.SkinnedMesh&&v.skinning,E=m.customDepthMaterial?m.customDepthMaterial:y?T?a:o:T?i:r,p instanceof THREE.BufferGeometry?t.renderBufferDirect(c,l.__lights,R,E,p,m):t.renderBuffer(c,l.__lights,R,E,p,m)}for(u=0,f=(g=l.__webglObjectsImmediate).length;u<f;u++)(m=(d=g[u]).object).visible&&(m._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,m.matrixWorld),t.renderImmediateObject(c,l.__lights,R,r,m));var x=t.getClearColor(),H=t.getClearAlpha();e.clearColor(x.r,x.g,x.b,H),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}};